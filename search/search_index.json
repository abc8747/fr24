{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"fr24","text":"<p><code>fr24</code> is a Python library for data retrieval from Flightradar24 using gRPC and JSON APIs.</p> <p>For a detailed quickstart, examples and references, please refer to the documentation.</p>"},{"location":"#features","title":"Features","text":"<p><code>fr24</code> supports the following endpoints:</p> Endpoint Description Type Live Feed Current real-time flight data within a bounding box. gRPC Live Feed Playback Historical snapshot of live feed data for a specific time. gRPC Flight List List of flights based on registration or flight number. JSON Playback Historical state vectors data for a flight. JSON Airport Arrivals Aircraft arrival information for a given airport. JSON Airport Search Search for airports by keyword. JSON Nearest Flights Real-time flight data for aircraft within a given radius. gRPC Follow Flight (streaming) Historical track and real-time updates for a live flight. gRPC Top Flights List of the most viewed flights. gRPC Live Flight Status Real-time status updates for live flights. gRPC Flight Details Detailed information for a live flight. gRPC Playback Flight Detailed information for a historical flight. gRPC <p><code>fr24</code> is built with modularity and performance in mind, utilising asynchronous programming to handle concurrent requests efficiently.</p>"},{"location":"#installation","title":"Installation","text":"<p>For the latest stable version:</p> <pre><code>pip install fr24\n</code></pre> <p>For a development version, clone the repository and run in the directory:</p> <pre><code>uv venv\nsource .venv/bin/activate\nuv sync --all-extras --dev\n</code></pre> <p>This installs all optional dependencies, typing, linting, testing and documentation tools.</p>"},{"location":"#examples","title":"Examples","text":"<p>Fetch live feed data for a specific bounding box:</p> <pre><code>import asyncio\n\nfrom fr24 import FR24, BoundingBox\n\nbbox = BoundingBox(south=42, north=52, west=-8, east=10)\n\nasync def main() -&gt; None:\n    async with FR24() as client:\n        result = await client.live_feed.fetch(bbox)\n        print(result.response.content)  # access raw, undecoded bytes\n        # convert to other formats:\n        print(result.to_proto())  # protobuf object\n        print(result.to_dict())  # nested dictionary\n        print(result.to_polars())  # polars dataframe\n\n        # write to a parquet file:\n        result.write_table(\"feed.parquet\")\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n</code></pre> <p>To improve efficiency and reduce API calls, <code>fr24</code> provides a simple file-based cache:</p> <pre><code>import asyncio\n\nfrom fr24 import FR24, FR24Cache, BBOX_FRANCE_UIR\n\ncache = FR24Cache.default()\n\nasync def main() -&gt; None:\n    async with FR24() as client:\n        result = await client.live_feed.fetch(BBOX_FRANCE_UIR)\n        # on Linux, this writes to ~/.cache/fr24/feed/{timestamp_s}.parquet\n        result.write_table(cache)\n\ndef some_time_later() -&gt; None:\n    for fp in cache.live_feed.glob(\"*\"):\n        print(fp)\n        print(cache.live_feed.scan_table(fp).collect())\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n    some_time_later()\n</code></pre> <p><code>fr24</code> also comes with a CLI for quick data retrieval:</p> <pre><code>$ fr24 live-feed --bounding-box \"42.0,52.0,-8.0,10.0\" -o feed.parquet\n[00:00:00] INFO     using environment `subscription_key` and      __init__.py:98\n                    `token`                                                     \n[00:00:00] INFO     HTTP Request: POST                           _client.py:1740\n                    https://data-feed.flightradar24.com/fr24.fee                \n                    d.api.v1.Feed/LiveFeed \"HTTP/2 200 OK\"                      \n           INFO     wrote 1500 rows to                              utils.py:229\n                    `/home/user/feed.parquet\n$ duckdb -c \"describe select * from 'feed.parquet'\";\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   column_name   \u2502     column_type      \u2502  null   \u2502 \u2026 \u2502 default \u2502  extra  \u2502\n\u2502     varchar     \u2502       varchar        \u2502 varchar \u2502   \u2502 varchar \u2502 varchar \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 timestamp       \u2502 TIMESTAMP WITH TIM\u2026  \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 flightid        \u2502 UINTEGER             \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 latitude        \u2502 FLOAT                \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 longitude       \u2502 FLOAT                \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 track           \u2502 USMALLINT            \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 altitude        \u2502 INTEGER              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 ground_speed    \u2502 SMALLINT             \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 on_ground       \u2502 BOOLEAN              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 callsign        \u2502 VARCHAR              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 source          \u2502 UTINYINT             \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 registration    \u2502 VARCHAR              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 origin          \u2502 VARCHAR              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 destination     \u2502 VARCHAR              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 typecode        \u2502 VARCHAR              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 eta             \u2502 UINTEGER             \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 squawk          \u2502 USMALLINT            \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 vertical_speed  \u2502 SMALLINT             \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 position_buffer \u2502 STRUCT(delta_lat I\u2026  \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 18 rows                                              6 columns (5 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>For a full list of commands and options, run:</p> <pre><code>fr24 --help\n</code></pre> <p><code>fr24</code> also comes with a TUI - search for flights directly in your terminal:</p> <pre><code>fr24 tui\n</code></pre>"},{"location":"#disclaimer","title":"Disclaimer","text":"<p>[!IMPORTANT] Code has been developed for educational purposes ONLY. Do not abuse it.</p> <pre><code>{\n  \"copyright\": \"Copyright (c) 2014-2025 Flightradar24 AB. All rights reserved.\",\n  \"legalNotice\": \"The contents of this file and all derived data are the property of Flightradar24 AB for use exclusively by its products and applications. Using, modifying or redistributing the data without the prior written permission of Flightradar24 AB is not allowed and may result in prosecutions.\"\n}\n</code></pre> <p>Official Flightradar24 API: https://fr24api.flightradar24.com/</p>"},{"location":"api/cache/","title":"Cache","text":""},{"location":"api/cache/#fr24.cache","title":"cache","text":"<p>Classes:</p> Name Description <code>FR24Cache</code> <code>CacheLike</code> <code>GlobMixin</code> <code>FlightListRegCache</code> <code>FlightListFlightCache</code> <code>FlightListBy</code> <code>PlaybackCache</code> <code>TimestampedCache</code> <code>NearestFlightsCache</code> <code>FlightDetailsCache</code> <code>Collection</code> <p>A directory containing scannable files.</p> <code>File</code> <p>Attributes:</p> Name Type Description <code>PATH_CACHE</code>"},{"location":"api/cache/#fr24.cache.PATH_CACHE","title":"PATH_CACHE  <code>module-attribute</code>","text":"<pre><code>PATH_CACHE = Path(user_cache_dir('fr24'))\n</code></pre>"},{"location":"api/cache/#fr24.cache.FR24Cache","title":"FR24Cache","text":"<pre><code>FR24Cache(path: Path | str)\n</code></pre> <p>Methods:</p> Name Description <code>default</code> <p>Create a cache in the</p> <p>Attributes:</p> Name Type Description <code>path</code> <code>flight_list</code> <code>playback</code> <code>live_feed</code> <code>nearest_flights</code> <code>live_flights_status</code> <code>top_flights</code> <code>flight_details</code> <code>playback_flight</code>"},{"location":"api/cache/#fr24.cache.FR24Cache.path","title":"path  <code>instance-attribute</code>","text":"<pre><code>path = Path(path)\n</code></pre>"},{"location":"api/cache/#fr24.cache.FR24Cache.flight_list","title":"flight_list  <code>instance-attribute</code>","text":"<pre><code>flight_list = FlightListBy(\n    reg=FlightListRegCache(\n        Collection(flight_list_dir / \"reg\")\n    ),\n    flight=FlightListFlightCache(\n        Collection(flight_list_dir / \"flight\")\n    ),\n)\n</code></pre>"},{"location":"api/cache/#fr24.cache.FR24Cache.playback","title":"playback  <code>instance-attribute</code>","text":"<pre><code>playback = PlaybackCache(Collection(path / 'playback'))\n</code></pre>"},{"location":"api/cache/#fr24.cache.FR24Cache.live_feed","title":"live_feed  <code>instance-attribute</code>","text":"<pre><code>live_feed = TimestampedCache(\n    Collection(path / \"feed\"), schema=live_feed_schema\n)\n</code></pre>"},{"location":"api/cache/#fr24.cache.FR24Cache.nearest_flights","title":"nearest_flights  <code>instance-attribute</code>","text":"<pre><code>nearest_flights = NearestFlightsCache(\n    Collection(path / \"nearest_flights\")\n)\n</code></pre>"},{"location":"api/cache/#fr24.cache.FR24Cache.live_flights_status","title":"live_flights_status  <code>instance-attribute</code>","text":"<pre><code>live_flights_status = TimestampedCache(\n    Collection(path / \"live_flights_status\"),\n    schema=live_flights_status_schema,\n)\n</code></pre>"},{"location":"api/cache/#fr24.cache.FR24Cache.top_flights","title":"top_flights  <code>instance-attribute</code>","text":"<pre><code>top_flights = TimestampedCache(\n    Collection(path / \"top_flights\"),\n    schema=top_flights_schema,\n)\n</code></pre>"},{"location":"api/cache/#fr24.cache.FR24Cache.flight_details","title":"flight_details  <code>instance-attribute</code>","text":"<pre><code>flight_details = FlightDetailsCache(\n    Collection(path / \"flight_details\"),\n    schema=flight_details_schema,\n)\n</code></pre>"},{"location":"api/cache/#fr24.cache.FR24Cache.playback_flight","title":"playback_flight  <code>instance-attribute</code>","text":"<pre><code>playback_flight = FlightDetailsCache(\n    Collection(path / \"playback_flight\"),\n    schema=playback_flight_schema,\n)\n</code></pre>"},{"location":"api/cache/#fr24.cache.FR24Cache.default","title":"default  <code>classmethod</code>","text":"<pre><code>default() -&gt; FR24Cache\n</code></pre> <p>Create a cache in the default directory.</p>"},{"location":"api/cache/#fr24.cache.CacheLike","title":"CacheLike","text":"<p>               Bases: <code>Protocol</code></p> <p>Methods:</p> Name Description <code>get_path</code> <p>Get the path to the cached file.</p> <code>scan_table</code> <p>Lazily load a file from this collection.</p> <p>Attributes:</p> Name Type Description <code>collection</code> <code>Collection</code>"},{"location":"api/cache/#fr24.cache.CacheLike.collection","title":"collection  <code>instance-attribute</code>","text":"<pre><code>collection: Collection\n</code></pre>"},{"location":"api/cache/#fr24.cache.CacheLike.get_path","title":"get_path","text":"<pre><code>get_path(*args: Any, **kwargs: Any) -&gt; BarePath\n</code></pre> <p>Get the path to the cached file.</p>"},{"location":"api/cache/#fr24.cache.CacheLike.scan_table","title":"scan_table","text":"<pre><code>scan_table(*args: Any, **kwargs: Any) -&gt; LazyFrame\n</code></pre> <p>Lazily load a file from this collection.</p>"},{"location":"api/cache/#fr24.cache.GlobMixin","title":"GlobMixin","text":"<p>               Bases: <code>CacheLike</code></p> <p>Methods:</p> Name Description <code>glob</code> <p>Yield all scannable files matching the given pattern.</p> <code>get_path</code> <p>Get the path to the cached file.</p> <code>scan_table</code> <p>Lazily load a file from this collection.</p> <p>Attributes:</p> Name Type Description <code>collection</code> <code>Collection</code>"},{"location":"api/cache/#fr24.cache.GlobMixin.collection","title":"collection  <code>instance-attribute</code>","text":"<pre><code>collection: Collection\n</code></pre>"},{"location":"api/cache/#fr24.cache.GlobMixin.glob","title":"glob","text":"<pre><code>glob(pattern: str) -&gt; Generator[File, None, None]\n</code></pre> <p>Yield all scannable files matching the given pattern.</p>"},{"location":"api/cache/#fr24.cache.GlobMixin.get_path","title":"get_path","text":"<pre><code>get_path(*args: Any, **kwargs: Any) -&gt; BarePath\n</code></pre> <p>Get the path to the cached file.</p>"},{"location":"api/cache/#fr24.cache.GlobMixin.scan_table","title":"scan_table","text":"<pre><code>scan_table(*args: Any, **kwargs: Any) -&gt; LazyFrame\n</code></pre> <p>Lazily load a file from this collection.</p>"},{"location":"api/cache/#fr24.cache.FlightListRegCache","title":"FlightListRegCache","text":"<p>               Bases: <code>GlobMixin</code></p> <p>Methods:</p> Name Description <code>get_path</code> <code>scan_table</code> <p>Lazily load a flight list file from this collection.</p> <code>glob</code> <p>Yield all scannable files matching the given pattern.</p> <p>Attributes:</p> Name Type Description <code>collection</code> <code>Collection</code>"},{"location":"api/cache/#fr24.cache.FlightListRegCache.collection","title":"collection  <code>instance-attribute</code>","text":"<pre><code>collection: Collection\n</code></pre>"},{"location":"api/cache/#fr24.cache.FlightListRegCache.get_path","title":"get_path","text":"<pre><code>get_path(reg: str) -&gt; BarePath\n</code></pre>"},{"location":"api/cache/#fr24.cache.FlightListRegCache.scan_table","title":"scan_table","text":"<pre><code>scan_table(\n    reg: str, *, format: TabularFileFmt = \"parquet\"\n) -&gt; LazyFrame\n</code></pre> <p>Lazily load a flight list file from this collection.</p> <p>Parameters:</p> Name Type Description Default <code>reg</code> <code>str</code> <p>The aircraft registration number (e.g. <code>B-HUJ</code>).</p> required"},{"location":"api/cache/#fr24.cache.FlightListRegCache.glob","title":"glob","text":"<pre><code>glob(pattern: str) -&gt; Generator[File, None, None]\n</code></pre> <p>Yield all scannable files matching the given pattern.</p>"},{"location":"api/cache/#fr24.cache.FlightListFlightCache","title":"FlightListFlightCache","text":"<p>               Bases: <code>GlobMixin</code></p> <p>Methods:</p> Name Description <code>get_path</code> <code>scan_table</code> <p>Lazily load a flight list file from this collection.</p> <code>glob</code> <p>Yield all scannable files matching the given pattern.</p> <p>Attributes:</p> Name Type Description <code>collection</code> <code>Collection</code>"},{"location":"api/cache/#fr24.cache.FlightListFlightCache.collection","title":"collection  <code>instance-attribute</code>","text":"<pre><code>collection: Collection\n</code></pre>"},{"location":"api/cache/#fr24.cache.FlightListFlightCache.get_path","title":"get_path","text":"<pre><code>get_path(flight: str) -&gt; BarePath\n</code></pre>"},{"location":"api/cache/#fr24.cache.FlightListFlightCache.scan_table","title":"scan_table","text":"<pre><code>scan_table(\n    flight: str, *, format: TabularFileFmt = \"parquet\"\n) -&gt; LazyFrame\n</code></pre> <p>Lazily load a flight list file from this collection.</p> <p>Parameters:</p> Name Type Description Default <code>flight</code> <code>str</code> <p>The flight number (e.g. <code>CX8747</code>).</p> required"},{"location":"api/cache/#fr24.cache.FlightListFlightCache.glob","title":"glob","text":"<pre><code>glob(pattern: str) -&gt; Generator[File, None, None]\n</code></pre> <p>Yield all scannable files matching the given pattern.</p>"},{"location":"api/cache/#fr24.cache.FlightListBy","title":"FlightListBy","text":"<p>Methods:</p> Name Description <code>__call__</code> <p>Attributes:</p> Name Type Description <code>reg</code> <code>FlightListRegCache</code> <code>flight</code> <code>FlightListFlightCache</code>"},{"location":"api/cache/#fr24.cache.FlightListBy.reg","title":"reg  <code>instance-attribute</code>","text":"<pre><code>reg: FlightListRegCache\n</code></pre>"},{"location":"api/cache/#fr24.cache.FlightListBy.flight","title":"flight  <code>instance-attribute</code>","text":"<pre><code>flight: FlightListFlightCache\n</code></pre>"},{"location":"api/cache/#fr24.cache.FlightListBy.__call__","title":"__call__","text":"<pre><code>__call__(\n    kind: Literal[\"reg\", \"flight\"],\n) -&gt; FlightListRegCache | FlightListFlightCache\n</code></pre>"},{"location":"api/cache/#fr24.cache.PlaybackCache","title":"PlaybackCache","text":"<p>               Bases: <code>GlobMixin</code></p> <p>Methods:</p> Name Description <code>get_path</code> <code>scan_table</code> <p>Lazily load a playback file.</p> <code>glob</code> <p>Yield all scannable files matching the given pattern.</p> <p>Attributes:</p> Name Type Description <code>collection</code> <code>Collection</code>"},{"location":"api/cache/#fr24.cache.PlaybackCache.collection","title":"collection  <code>instance-attribute</code>","text":"<pre><code>collection: Collection\n</code></pre>"},{"location":"api/cache/#fr24.cache.PlaybackCache.get_path","title":"get_path","text":"<pre><code>get_path(flight_id: IntoFlightId) -&gt; BarePath\n</code></pre>"},{"location":"api/cache/#fr24.cache.PlaybackCache.scan_table","title":"scan_table","text":"<pre><code>scan_table(\n    flight_id: IntoFlightId,\n    *,\n    format: TabularFileFmt = \"parquet\",\n) -&gt; LazyFrame\n</code></pre> <p>Lazily load a playback file.</p> <p>Parameters:</p> Name Type Description Default <code>flight_id</code> <code>IntoFlightId</code> <p>The flight ID of the record.</p> required"},{"location":"api/cache/#fr24.cache.PlaybackCache.glob","title":"glob","text":"<pre><code>glob(pattern: str) -&gt; Generator[File, None, None]\n</code></pre> <p>Yield all scannable files matching the given pattern.</p>"},{"location":"api/cache/#fr24.cache.TimestampedCache","title":"TimestampedCache","text":"<p>               Bases: <code>GlobMixin</code></p> <p>Methods:</p> Name Description <code>get_path</code> <code>scan_table</code> <p>Lazily load a timestamped file.</p> <code>glob</code> <p>Yield all scannable files matching the given pattern.</p> <p>Attributes:</p> Name Type Description <code>collection</code> <code>Collection</code> <code>schema</code> <code>dict[str, DataType]</code>"},{"location":"api/cache/#fr24.cache.TimestampedCache.collection","title":"collection  <code>instance-attribute</code>","text":"<pre><code>collection: Collection\n</code></pre>"},{"location":"api/cache/#fr24.cache.TimestampedCache.schema","title":"schema  <code>instance-attribute</code>","text":"<pre><code>schema: dict[str, DataType]\n</code></pre>"},{"location":"api/cache/#fr24.cache.TimestampedCache.get_path","title":"get_path","text":"<pre><code>get_path(timestamp: IntoTimestamp | str) -&gt; BarePath\n</code></pre>"},{"location":"api/cache/#fr24.cache.TimestampedCache.scan_table","title":"scan_table","text":"<pre><code>scan_table(\n    timestamp: IntoTimestamp | str,\n    *,\n    format: TabularFileFmt = \"parquet\",\n) -&gt; LazyFrame\n</code></pre> <p>Lazily load a timestamped file.</p> <p>Parameters:</p> Name Type Description Default <code>timestamp</code> <code>IntoTimestamp | str</code> <p>A timestamp-like object, see fr24.utils.to_unix_timestamp. The <code>now</code> literal is not allowed.</p> required"},{"location":"api/cache/#fr24.cache.TimestampedCache.glob","title":"glob","text":"<pre><code>glob(pattern: str) -&gt; Generator[File, None, None]\n</code></pre> <p>Yield all scannable files matching the given pattern.</p>"},{"location":"api/cache/#fr24.cache.NearestFlightsCache","title":"NearestFlightsCache","text":"<p>               Bases: <code>GlobMixin</code></p> <p>Methods:</p> Name Description <code>get_path</code> <code>scan_table</code> <p>Lazily load a nearest flights file.</p> <code>glob</code> <p>Yield all scannable files matching the given pattern.</p> <p>Attributes:</p> Name Type Description <code>collection</code> <code>Collection</code>"},{"location":"api/cache/#fr24.cache.NearestFlightsCache.collection","title":"collection  <code>instance-attribute</code>","text":"<pre><code>collection: Collection\n</code></pre>"},{"location":"api/cache/#fr24.cache.NearestFlightsCache.get_path","title":"get_path","text":"<pre><code>get_path(\n    lon: float, lat: float, timestamp: IntoTimestamp | str\n) -&gt; BarePath\n</code></pre>"},{"location":"api/cache/#fr24.cache.NearestFlightsCache.scan_table","title":"scan_table","text":"<pre><code>scan_table(\n    lon: float,\n    lat: float,\n    timestamp: IntoTimestamp | str,\n    *,\n    format: TabularFileFmt = \"parquet\",\n) -&gt; LazyFrame\n</code></pre> <p>Lazily load a nearest flights file.</p> <p>Parameters:</p> Name Type Description Default <code>lat</code> <code>float</code> <p>Latitude of the center point.</p> required <code>lon</code> <code>float</code> <p>Longitude of the center point.</p> required <code>timestamp</code> <code>IntoTimestamp | str</code> <p>A timestamp-like object, see fr24.utils.to_unix_timestamp. The <code>now</code> literal is not allowed.</p> required"},{"location":"api/cache/#fr24.cache.NearestFlightsCache.glob","title":"glob","text":"<pre><code>glob(pattern: str) -&gt; Generator[File, None, None]\n</code></pre> <p>Yield all scannable files matching the given pattern.</p>"},{"location":"api/cache/#fr24.cache.FlightDetailsCache","title":"FlightDetailsCache","text":"<p>               Bases: <code>GlobMixin</code></p> <p>Methods:</p> Name Description <code>get_path</code> <code>scan_table</code> <p>Lazily load a flight details file.</p> <code>glob</code> <p>Yield all scannable files matching the given pattern.</p> <p>Attributes:</p> Name Type Description <code>collection</code> <code>Collection</code> <code>schema</code> <code>dict[str, DataType]</code>"},{"location":"api/cache/#fr24.cache.FlightDetailsCache.collection","title":"collection  <code>instance-attribute</code>","text":"<pre><code>collection: Collection\n</code></pre>"},{"location":"api/cache/#fr24.cache.FlightDetailsCache.schema","title":"schema  <code>instance-attribute</code>","text":"<pre><code>schema: dict[str, DataType]\n</code></pre>"},{"location":"api/cache/#fr24.cache.FlightDetailsCache.get_path","title":"get_path","text":"<pre><code>get_path(\n    flight_id: IntoFlightId, timestamp: IntoTimestamp | str\n) -&gt; BarePath\n</code></pre>"},{"location":"api/cache/#fr24.cache.FlightDetailsCache.scan_table","title":"scan_table","text":"<pre><code>scan_table(\n    flight_id: IntoFlightId,\n    timestamp: IntoTimestamp | str,\n    *,\n    format: TabularFileFmt = \"parquet\",\n) -&gt; LazyFrame\n</code></pre> <p>Lazily load a flight details file.</p> <p>Parameters:</p> Name Type Description Default <code>flight_id</code> <code>IntoFlightId</code> <p>The flight ID of the record.</p> required <code>timestamp</code> <code>IntoTimestamp | str</code> <p>A timestamp-like object, see fr24.utils.to_unix_timestamp. The <code>now</code> literal is not allowed.</p> required"},{"location":"api/cache/#fr24.cache.FlightDetailsCache.glob","title":"glob","text":"<pre><code>glob(pattern: str) -&gt; Generator[File, None, None]\n</code></pre> <p>Yield all scannable files matching the given pattern.</p>"},{"location":"api/cache/#fr24.cache.Collection","title":"Collection","text":"<p>A directory containing scannable files.</p> <p>Methods:</p> Name Description <code>new_bare_path</code> <p>Returns the bare path (without the file extension) to the file.</p> <p>Attributes:</p> Name Type Description <code>path</code> <code>Path</code>"},{"location":"api/cache/#fr24.cache.Collection.path","title":"path  <code>instance-attribute</code>","text":"<pre><code>path: Path\n</code></pre>"},{"location":"api/cache/#fr24.cache.Collection.new_bare_path","title":"new_bare_path","text":"<pre><code>new_bare_path(ident: str) -&gt; BarePath\n</code></pre> <p>Returns the bare path (without the file extension) to the file.</p>"},{"location":"api/cache/#fr24.cache.File","title":"File","text":"<p>               Bases: <code>Path</code></p> <p>Methods:</p> Name Description <code>scan_table</code> <p>Lazily load this file.</p> <p>Attributes:</p> Name Type Description <code>format</code> <code>TabularFileFmt</code>"},{"location":"api/cache/#fr24.cache.File.format","title":"format  <code>property</code>","text":"<pre><code>format: TabularFileFmt\n</code></pre>"},{"location":"api/cache/#fr24.cache.File.scan_table","title":"scan_table","text":"<pre><code>scan_table() -&gt; LazyFrame\n</code></pre> <p>Lazily load this file.</p>"},{"location":"api/grpc_changelog/","title":"Changelog","text":"<p>All known changes of the gRPC messages are documented here.</p> <p>Client versions are usually updated every 5 days, most frequently on Mon/Tue 10am. This list is not exhaustive.</p>"},{"location":"api/grpc_changelog/#251351104-2025-05-15","title":"<code>25.135.1104</code> (2025-05-15)","text":"<ul> <li>add field: <code>Icon.CONC</code></li> <li>add message: <code>FlightProgress</code>, <code>FlightDetailsRequest</code>, <code>FlightDetailsResponse</code>, <code>PlaybackFlightRequest</code>, <code>PlaybackFlightResponse</code></li> </ul>"},{"location":"api/grpc_changelog/#250562130-2025-02-25","title":"<code>25.056.2130</code> (2025-02-25)","text":"<ul> <li>rename field: <code>ExtendedFlightInfo.timestamp</code></li> <li>add field: <code>Flight.timestamp_ms</code></li> </ul>"},{"location":"api/grpc_changelog/#243531121-2024-12-19","title":"<code>24.353.1121</code> (2024-12-19)","text":"<ul> <li>rename fields: <code>AirlineFilterType::OPERATED_AS</code>, <code>Stats.sources</code></li> <li>add field: <code>Schedule.progress_pct</code>, <code>ExtendedFlightInfo.server_time_ms</code></li> <li>fix field type: <code>FlightProgress.progress_pct</code></li> </ul>"},{"location":"api/grpc_changelog/#243330902-2024-11-28","title":"<code>24.333.0902</code> (2024-11-28)","text":"<ul> <li>add field: <code>Flight.position_buffer</code></li> <li>add message: <code>RecentPosition</code>, <code>PositionBuffer</code></li> <li>add field: <code>FlightStage::DIVERSION</code></li> </ul>"},{"location":"api/grpc_changelog/#242880818-2024-10-14","title":"<code>24.288.0818</code> (2024-10-14)","text":"<ul> <li>rename fields: <code>FlightStage::ASCENDING</code>, <code>FlightStage::DESCENDING</code></li> </ul>"},{"location":"api/grpc_changelog/#242001841-2024-07-18","title":"<code>24.200.1841</code> (2024-07-18)","text":"<ul> <li>add field: <code>FlightProgress.progress_pct</code></li> <li>add message: <code>HistoricTrailRequest</code></li> </ul>"},{"location":"api/grpc_changelog/#241842001-2024-07-02","title":"<code>24.184.2001</code> (2024-07-02)","text":"<ul> <li>add field: <code>FlightProgress.delay_status</code></li> </ul>"},{"location":"api/grpc_changelog/#241711153-2024-06-19","title":"<code>24.171.1153</code> (2024-06-19)","text":"<ul> <li>update message: <code>FlightProgress</code></li> <li>update message: <code>FollowFlightRequest.restriction_mode</code></li> </ul>"},{"location":"api/grpc_changelog/#241690808-2024-06-17","title":"<code>24.169.0808</code> (2024-06-17)","text":"<ul> <li>rename fields: <code>RestrictionVisibility</code></li> <li>add message: <code>Duration</code>, <code>Tick</code></li> <li>add message: <code>RadarHistoryRecord</code></li> <li>add message: <code>FetchSearchIndexRequest</code>, <code>FetchSearchIndexResponse</code></li> <li>add message: <code>ImageInfo</code>, <code>AircraftInfo</code>, <code>Point</code>, <code>Coordinate</code>, <code>Fix</code>, <code>AltArrival</code>, <code>FlightPlan</code>, <code>ScheduleInfo</code>, <code>FlightStage</code>, <code>FlightProgress</code>, <code>ExtendedFlightInfo</code>, <code>TrailPoint</code></li> <li>add message: <code>LiveTrailRequest</code>, <code>LiveTrailResponse</code></li> <li>add message: <code>FollowedFlight</code>, <code>TopFlightsRequest</code>, <code>TopFlightsResponse</code></li> </ul>"},{"location":"api/grpc_changelog/#231081135-2023-04-18","title":"<code>23.108.1135</code> (2023-04-18)","text":"<ul> <li>gRPC endpoint introduced.</li> </ul>"},{"location":"api/low_level/","title":"Low Level API","text":"<p>See the example gallery to learn more.</p>"},{"location":"api/low_level/#fr24.authentication","title":"authentication","text":"<p>Functions:</p> Name Description <code>get_credentials</code> <p>Reads credentials from the environment variables, overriding it with</p> <code>login</code> <p>Read credentials and returns the credentials needed to access the API.</p> <code>login_with_username_password</code> <p>Retrieve bearer token and subscription key from the API.</p> <code>login_with_token_subscription_key</code> <p>Login with subscription key and/or token.</p>"},{"location":"api/low_level/#fr24.authentication.get_credentials","title":"get_credentials","text":"<pre><code>get_credentials(\n    fp_config_file: Path = FP_CONFIG_FILE,\n) -&gt; TokenSubscriptionKey | UsernamePassword | None\n</code></pre> <p>Reads credentials from the environment variables, overriding it with the config file if it exists.</p>"},{"location":"api/low_level/#fr24.authentication.login","title":"login  <code>async</code>","text":"<pre><code>login(\n    client: AsyncClient,\n    creds: TokenSubscriptionKey\n    | UsernamePassword\n    | None\n    | Literal[\"from_env\"] = \"from_env\",\n    fp_config_file: Path = FP_CONFIG_FILE,\n) -&gt; None | Authentication\n</code></pre> <p>Read credentials and returns the credentials needed to access the API.</p> <p>By default, credentials are read from the environment variables or the config file if <code>creds_override</code> is not set. Then, if the credentials: - <code>username</code> and <code>password</code> is set: makes a POST request to the login endpoint - <code>subscription_key</code> and <code>token</code> is set: returns immediately - otherwise, <code>None</code> is returned</p>"},{"location":"api/low_level/#fr24.authentication.login_with_username_password","title":"login_with_username_password  <code>async</code>","text":"<pre><code>login_with_username_password(\n    client: AsyncClient, username: str, password: str\n) -&gt; Authentication\n</code></pre> <p>Retrieve bearer token and subscription key from the API.</p> <p>Bearer: <code>json['userData']['accessToken']</code> <code>token=</code> query param: <code>json['userData']['subscriptionKey']</code></p>"},{"location":"api/low_level/#fr24.authentication.login_with_token_subscription_key","title":"login_with_token_subscription_key  <code>async</code>","text":"<pre><code>login_with_token_subscription_key(\n    _client: AsyncClient,\n    subscription_key: str,\n    token: str | None,\n) -&gt; Authentication | None\n</code></pre> <p>Login with subscription key and/or token. Falls back to anonymous access if token is expired or invalid.</p>"},{"location":"api/low_level/#json-endpoints","title":"JSON endpoints","text":""},{"location":"api/low_level/#fr24.json","title":"json","text":"<p>Classes:</p> Name Description <code>FlightListParams</code> <p>Parameters to fetch metadata/history of flights for</p> <code>AirportListParams</code> <p>Request data to fetch metadata/history of flights</p> <code>PlaybackParams</code> <p>Request data to fetch historical track playback data for a given flight.</p> <code>FindParams</code> <p>Functions:</p> Name Description <code>with_auth</code> <p>Adds authentication details to a request data dictionary.</p> <code>flight_list</code> <p>Query flight list data.</p> <code>airport_list</code> <p>Fetch aircraft arriving, departing or on ground at a given airport.</p> <code>playback</code> <p>Fetch historical track playback data for a given flight.</p> <code>find</code> <p>General search.</p> <code>playback_metadata_dict</code> <p>Flatten and rename important variables in the flight metadata to a</p> <code>playback_track_dict</code> <p>Flatten and rename each variable in this observation into a new dictionary.</p> <code>playback_track_ems_dict</code> <p>If the Enhanced Mode-S data is available in this observation,</p> <code>playback_df</code> <p>Parse each fr24.types.json.TrackData in the API response into a</p> <code>flight_list_dict</code> <p>Flatten a flight entry into dict, converting fr24 hex ids into integers.</p> <code>flight_list_df</code> <p>Parse each fr24.types.json.FlightListItem in the API response</p>"},{"location":"api/low_level/#fr24.json.FlightListParams","title":"FlightListParams  <code>dataclass</code>","text":"<pre><code>FlightListParams(\n    reg: str | None = None,\n    flight: str | None = None,\n    page: int = 1,\n    limit: int = 10,\n    timestamp: IntoTimestamp\n    | Literal[\"now\"]\n    | None = \"now\",\n)\n</code></pre> <p>Parameters to fetch metadata/history of flights for either a given aircraft registration or flight number.</p> <p>Attributes:</p> Name Type Description <code>reg</code> <code>str | None</code> <p>Aircraft registration (e.g. <code>B-HUJ</code>)</p> <code>flight</code> <code>str | None</code> <p>Flight number (e.g. <code>CX8747</code>)</p> <code>page</code> <code>int</code> <p>Page number</p> <code>limit</code> <code>int</code> <p>Number of results per page - use <code>100</code> if authenticated.</p> <code>timestamp</code> <code>IntoTimestamp | Literal['now'] | None</code> <p>Show flights with ATD before this Unix timestamp</p>"},{"location":"api/low_level/#fr24.json.FlightListParams.reg","title":"reg  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>reg: str | None = None\n</code></pre> <p>Aircraft registration (e.g. <code>B-HUJ</code>)</p>"},{"location":"api/low_level/#fr24.json.FlightListParams.flight","title":"flight  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>flight: str | None = None\n</code></pre> <p>Flight number (e.g. <code>CX8747</code>)</p>"},{"location":"api/low_level/#fr24.json.FlightListParams.page","title":"page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page: int = 1\n</code></pre> <p>Page number</p>"},{"location":"api/low_level/#fr24.json.FlightListParams.limit","title":"limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>limit: int = 10\n</code></pre> <p>Number of results per page - use <code>100</code> if authenticated.</p>"},{"location":"api/low_level/#fr24.json.FlightListParams.timestamp","title":"timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>timestamp: IntoTimestamp | Literal['now'] | None = 'now'\n</code></pre> <p>Show flights with ATD before this Unix timestamp</p>"},{"location":"api/low_level/#fr24.json.AirportListParams","title":"AirportListParams  <code>dataclass</code>","text":"<pre><code>AirportListParams(\n    airport: str,\n    mode: Literal[\"arrivals\", \"departures\", \"ground\"],\n    page: int = 1,\n    limit: int = 10,\n    timestamp: IntoTimestamp\n    | Literal[\"now\"]\n    | None = \"now\",\n)\n</code></pre> <p>Request data to fetch metadata/history of flights</p> <p>Attributes:</p> Name Type Description <code>airport</code> <code>str</code> <p>IATA airport code (e.g. <code>HKG</code>)</p> <code>mode</code> <code>Literal['arrivals', 'departures', 'ground']</code> <p>arrivals, departures or on ground aircraft</p> <code>page</code> <code>int</code> <p>Page number</p> <code>limit</code> <code>int</code> <p>Number of results per page - use <code>100</code> if authenticated.</p> <code>timestamp</code> <code>IntoTimestamp | Literal['now'] | None</code> <p>Show flights with STA before this timestamp</p>"},{"location":"api/low_level/#fr24.json.AirportListParams.airport","title":"airport  <code>instance-attribute</code>","text":"<pre><code>airport: str\n</code></pre> <p>IATA airport code (e.g. <code>HKG</code>)</p>"},{"location":"api/low_level/#fr24.json.AirportListParams.mode","title":"mode  <code>instance-attribute</code>","text":"<pre><code>mode: Literal['arrivals', 'departures', 'ground']\n</code></pre> <p>arrivals, departures or on ground aircraft</p>"},{"location":"api/low_level/#fr24.json.AirportListParams.page","title":"page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page: int = 1\n</code></pre> <p>Page number</p>"},{"location":"api/low_level/#fr24.json.AirportListParams.limit","title":"limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>limit: int = 10\n</code></pre> <p>Number of results per page - use <code>100</code> if authenticated.</p>"},{"location":"api/low_level/#fr24.json.AirportListParams.timestamp","title":"timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>timestamp: IntoTimestamp | Literal['now'] | None = 'now'\n</code></pre> <p>Show flights with STA before this timestamp</p>"},{"location":"api/low_level/#fr24.json.PlaybackParams","title":"PlaybackParams  <code>dataclass</code>","text":"<pre><code>PlaybackParams(\n    flight_id: IntoFlightId,\n    timestamp: IntoTimestamp | None = None,\n)\n</code></pre> <p>Request data to fetch historical track playback data for a given flight.</p> <p>Attributes:</p> Name Type Description <code>flight_id</code> <code>IntoFlightId</code> <p>fr24 flight id, represented in hex</p> <code>timestamp</code> <code>IntoTimestamp | None</code> <p>Actual time of departure (ATD) of the historic flight,</p>"},{"location":"api/low_level/#fr24.json.PlaybackParams.flight_id","title":"flight_id  <code>instance-attribute</code>","text":"<pre><code>flight_id: IntoFlightId\n</code></pre> <p>fr24 flight id, represented in hex</p>"},{"location":"api/low_level/#fr24.json.PlaybackParams.timestamp","title":"timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>timestamp: IntoTimestamp | None = None\n</code></pre> <p>Actual time of departure (ATD) of the historic flight, Unix timestamp in seconds. Optional, but it is recommended to include it.</p>"},{"location":"api/low_level/#fr24.json.FindParams","title":"FindParams  <code>dataclass</code>","text":"<pre><code>FindParams(query: str, limit: int = 50)\n</code></pre> <p>Attributes:</p> Name Type Description <code>query</code> <code>str</code> <p>Airport, schedule (HKG-CDG), or aircraft.</p>"},{"location":"api/low_level/#fr24.json.FindParams.query","title":"query  <code>instance-attribute</code>","text":"<pre><code>query: str\n</code></pre> <p>Airport, schedule (HKG-CDG), or aircraft.</p>"},{"location":"api/low_level/#fr24.json.with_auth","title":"with_auth","text":"<pre><code>with_auth(\n    mut_request_data: dict[str, Any],\n    auth: Authentication | None,\n    headers: Headers,\n) -&gt; dict[str, Any]\n</code></pre> <p>Adds authentication details to a request data dictionary.</p>"},{"location":"api/low_level/#fr24.json.flight_list","title":"flight_list  <code>async</code>","text":"<pre><code>flight_list(\n    client: AsyncClient,\n    params: FlightListParams,\n    headers: Headers,\n    auth: None | Authentication,\n) -&gt; Annotated[Response, FlightList]\n</code></pre> <p>Query flight list data.</p> <p>To determine if there are more pages to query, check the response .result.response.page.more.</p> <p>Includes basic information such as status, O/D, scheduled/estimated/real times: see fr24.types.json.FlightList for more details.</p> <p>Parameters:</p> Name Type Description Default <code>client</code> <code>AsyncClient</code> <p>HTTPX async client</p> required <code>auth</code> <code>None | Authentication</code> <p>Authentication data</p> required"},{"location":"api/low_level/#fr24.json.airport_list","title":"airport_list  <code>async</code>","text":"<pre><code>airport_list(\n    client: AsyncClient,\n    params: AirportListParams,\n    headers: Headers,\n    auth: None | Authentication,\n) -&gt; Annotated[Response, AirportList]\n</code></pre> <p>Fetch aircraft arriving, departing or on ground at a given airport.</p> <p>Returns on ground/scheduled/estimated/real times: see fr24.types.json.FlightListItem for more details.</p> <p>Parameters:</p> Name Type Description Default <code>client</code> <code>AsyncClient</code> <p>HTTPX async client</p> required <code>auth</code> <code>None | Authentication</code> <p>Authentication data</p> required <p>Returns:</p> Type Description <code>Annotated[Response, AirportList]</code> <p>the raw binary response, representing a JSON-encoded fr24.types.json.FlightList.</p>"},{"location":"api/low_level/#fr24.json.playback","title":"playback  <code>async</code>","text":"<pre><code>playback(\n    client: AsyncClient,\n    params: PlaybackParams,\n    headers: Headers,\n    auth: None | Authentication,\n) -&gt; Annotated[Response, Playback]\n</code></pre> <p>Fetch historical track playback data for a given flight.</p> <p>Parameters:</p> Name Type Description Default <code>client</code> <code>AsyncClient</code> <p>HTTPX async client</p> required <code>auth</code> <code>None | Authentication</code> <p>Authentication data</p> required"},{"location":"api/low_level/#fr24.json.find","title":"find  <code>async</code>","text":"<pre><code>find(\n    client: AsyncClient,\n    params: FindParams,\n    headers: Headers,\n    auth: None | Authentication,\n) -&gt; Annotated[Response, Find]\n</code></pre> <p>General search.</p>"},{"location":"api/low_level/#fr24.json.playback_metadata_dict","title":"playback_metadata_dict","text":"<pre><code>playback_metadata_dict(\n    flight: FlightData,\n) -&gt; dict[str, Any]\n</code></pre> <p>Flatten and rename important variables in the flight metadata to a dictionary.</p>"},{"location":"api/low_level/#fr24.json.playback_track_dict","title":"playback_track_dict","text":"<pre><code>playback_track_dict(\n    point: TrackData,\n) -&gt; PlaybackTrackRecord\n</code></pre> <p>Flatten and rename each variable in this observation into a new dictionary.</p> <p>Note</p> <p>The JSON response claims that <code>heading</code> is available, but ADS-B only transmits the ground track. Heading is only available in EMS data.</p> <p>We rename it to <code>track</code> to avoid confusion.</p>"},{"location":"api/low_level/#fr24.json.playback_track_ems_dict","title":"playback_track_ems_dict","text":"<pre><code>playback_track_ems_dict(\n    point: TrackData,\n) -&gt; PlaybackTrackEMSRecord | None\n</code></pre> <p>If the Enhanced Mode-S data is available in this observation, flatten and rename each variable to a dictionary. Otherwise, return <code>None</code>.</p>"},{"location":"api/low_level/#fr24.json.playback_df","title":"playback_df","text":"<pre><code>playback_df(data: Playback) -&gt; DataFrame\n</code></pre> <p>Parse each fr24.types.json.TrackData in the API response into a dataframe.</p> <p>If the response is empty, a warning is logged and an empty table is returned</p>"},{"location":"api/low_level/#fr24.json.flight_list_dict","title":"flight_list_dict","text":"<pre><code>flight_list_dict(entry: FlightListItem) -&gt; FlightListRecord\n</code></pre> <p>Flatten a flight entry into dict, converting fr24 hex ids into integers.</p>"},{"location":"api/low_level/#fr24.json.flight_list_df","title":"flight_list_df","text":"<pre><code>flight_list_df(data: FlightList) -&gt; DataFrame\n</code></pre> <p>Parse each fr24.types.json.FlightListItem in the API response into a polars dataframe.</p> <p>If the response is empty, a warning is logged and an empty table is returned</p>"},{"location":"api/low_level/#grpc-endpoints","title":"gRPC endpoints","text":""},{"location":"api/low_level/#fr24.grpc","title":"grpc","text":"<p>Endpoint: https://data-feed.flightradar24.com</p> <p>Service name: fr24.feed.api.v1.Feed</p> <p>Methods:</p> <ul> <li><code>LiveFeed</code></li> <li><code>Playback</code></li> <li><code>NearestFlights</code></li> <li><code>LiveFlightsStatus</code></li> <li><code>FollowFlight</code></li> <li><code>TopFlights</code></li> <li><code>LiveTrail</code></li> <li><code>HistoricTrail</code></li> <li><code>FetchSearchIndex</code></li> <li><code>FlightDetails</code></li> <li><code>PlaybackFlight</code></li> </ul> <p>Classes:</p> Name Description <code>BoundingBox</code> <code>LiveFeedParams</code> <code>LiveFeedPlaybackParams</code> <code>NearestFlightsParams</code> <code>LiveFlightsStatusParams</code> <code>FollowFlightParams</code> <code>TopFlightsParams</code> <code>FlightDetailsParams</code> <code>PlaybackFlightParams</code> <p>Functions:</p> Name Description <code>construct_request</code> <p>Construct the gRPC request with encoded gRPC body.</p> <code>to_protobuf_enum</code> <code>live_feed</code> <code>live_feed_position_buffer_dict</code> <code>live_feed_flightdata_dict</code> <p>Convert the protobuf message to a dictionary.</p> <code>live_feed_df</code> <code>live_feed_playback</code> <code>live_feed_playback_df</code> <code>nearest_flights</code> <code>nearest_flights_nearbyflight_dict</code> <code>nearest_flights_df</code> <code>live_flights_status</code> <code>live_flights_status_flightstatusdata_dict</code> <code>live_flights_status_df</code> <code>search_index</code> <p>Unstable API: gateway timeout.</p> <code>follow_flight_stream</code> <code>top_flights</code> <code>top_flights_dict</code> <code>top_flights_df</code> <code>live_trail</code> <p>Unstable API: returns empty <code>DATA</code> frame as of Sep 2024</p> <code>historic_trail</code> <p>Unstable API: returns empty <code>DATA</code> frame</p> <code>flight_details</code> <p>contains empty <code>DATA</code> frame error if flight_id is not live</p> <code>flight_details_dict</code> <code>trail_point_dict</code> <code>ems_dict</code> <p>Transform Enhanced Mode-S data in the protobuf message into a dictionary.</p> <code>flight_details_df</code> <code>playback_flight</code> <p>contains empty <code>DATA</code> frame error if flight_id is live</p> <code>playback_flight_dict</code> <code>playback_flight_df</code> <p>Attributes:</p> Name Type Description <code>IntoLiveFeedRequest</code> <code>TypeAlias</code> <code>IntoPlaybackRequest</code> <code>TypeAlias</code> <code>IntoNearestFlightsRequest</code> <code>TypeAlias</code> <code>IntoLiveFlightsStatusRequest</code> <code>TypeAlias</code> <code>IntoFetchSearchIndexRequest</code> <code>TypeAlias</code> <code>IntoFollowFlightRequest</code> <code>TypeAlias</code> <code>IntoTopFlightsRequest</code> <code>TypeAlias</code> <code>IntoLiveTrailRequest</code> <code>TypeAlias</code> <code>IntoHistoricTrailRequest</code> <code>TypeAlias</code> <code>IntoFlightDetailsRequest</code> <code>TypeAlias</code> <code>IntoPlaybackFlightRequest</code> <code>TypeAlias</code>"},{"location":"api/low_level/#fr24.grpc.IntoLiveFeedRequest","title":"IntoLiveFeedRequest  <code>module-attribute</code>","text":"<pre><code>IntoLiveFeedRequest: TypeAlias = Union[\n    SupportsToProto[LiveFeedRequest], LiveFeedRequest\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.IntoPlaybackRequest","title":"IntoPlaybackRequest  <code>module-attribute</code>","text":"<pre><code>IntoPlaybackRequest: TypeAlias = Union[\n    SupportsToProto[PlaybackRequest],\n    PlaybackRequest,\n    LiveFeedPlaybackParams,\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.IntoNearestFlightsRequest","title":"IntoNearestFlightsRequest  <code>module-attribute</code>","text":"<pre><code>IntoNearestFlightsRequest: TypeAlias = Union[\n    SupportsToProto[NearestFlightsRequest],\n    NearestFlightsRequest,\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.IntoLiveFlightsStatusRequest","title":"IntoLiveFlightsStatusRequest  <code>module-attribute</code>","text":"<pre><code>IntoLiveFlightsStatusRequest: TypeAlias = Union[\n    SupportsToProto[LiveFlightsStatusRequest],\n    LiveFlightsStatusRequest,\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.IntoFetchSearchIndexRequest","title":"IntoFetchSearchIndexRequest  <code>module-attribute</code>","text":"<pre><code>IntoFetchSearchIndexRequest: TypeAlias = Union[\n    SupportsToProto[FetchSearchIndexRequest],\n    FetchSearchIndexRequest,\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.IntoFollowFlightRequest","title":"IntoFollowFlightRequest  <code>module-attribute</code>","text":"<pre><code>IntoFollowFlightRequest: TypeAlias = Union[\n    SupportsToProto[FollowFlightRequest],\n    FollowFlightRequest,\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.IntoTopFlightsRequest","title":"IntoTopFlightsRequest  <code>module-attribute</code>","text":"<pre><code>IntoTopFlightsRequest: TypeAlias = Union[\n    SupportsToProto[TopFlightsRequest], TopFlightsRequest\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.IntoLiveTrailRequest","title":"IntoLiveTrailRequest  <code>module-attribute</code>","text":"<pre><code>IntoLiveTrailRequest: TypeAlias = Union[\n    SupportsToProto[LiveTrailRequest], LiveTrailRequest\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.IntoHistoricTrailRequest","title":"IntoHistoricTrailRequest  <code>module-attribute</code>","text":"<pre><code>IntoHistoricTrailRequest: TypeAlias = Union[\n    SupportsToProto[HistoricTrailRequest],\n    HistoricTrailRequest,\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.IntoFlightDetailsRequest","title":"IntoFlightDetailsRequest  <code>module-attribute</code>","text":"<pre><code>IntoFlightDetailsRequest: TypeAlias = Union[\n    SupportsToProto[FlightDetailsRequest],\n    FlightDetailsRequest,\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.IntoPlaybackFlightRequest","title":"IntoPlaybackFlightRequest  <code>module-attribute</code>","text":"<pre><code>IntoPlaybackFlightRequest: TypeAlias = Union[\n    SupportsToProto[PlaybackFlightRequest],\n    PlaybackFlightRequest,\n]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.BoundingBox","title":"BoundingBox","text":"<p>               Bases: <code>NamedTuple</code></p> <p>Attributes:</p> Name Type Description <code>south</code> <code>float</code> <p>Latitude, minimum, degrees</p> <code>north</code> <code>float</code> <p>Latitude, maximum, degrees</p> <code>west</code> <code>float</code> <p>Longitude, minimum, degrees</p> <code>east</code> <code>float</code> <p>Longitude, maximum, degrees</p>"},{"location":"api/low_level/#fr24.grpc.BoundingBox.south","title":"south  <code>instance-attribute</code>","text":"<pre><code>south: float\n</code></pre> <p>Latitude, minimum, degrees</p>"},{"location":"api/low_level/#fr24.grpc.BoundingBox.north","title":"north  <code>instance-attribute</code>","text":"<pre><code>north: float\n</code></pre> <p>Latitude, maximum, degrees</p>"},{"location":"api/low_level/#fr24.grpc.BoundingBox.west","title":"west  <code>instance-attribute</code>","text":"<pre><code>west: float\n</code></pre> <p>Longitude, minimum, degrees</p>"},{"location":"api/low_level/#fr24.grpc.BoundingBox.east","title":"east  <code>instance-attribute</code>","text":"<pre><code>east: float\n</code></pre> <p>Longitude, maximum, degrees</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedParams","title":"LiveFeedParams  <code>dataclass</code>","text":"<pre><code>LiveFeedParams(\n    bounding_box: BoundingBox,\n    stats: bool = False,\n    limit: int = 1500,\n    maxage: int = 14400,\n    fields: set[LiveFeedField] = (\n        lambda: {\"flight\", \"reg\", \"route\", \"type\"}\n    )(),\n)\n</code></pre> <p>               Bases: <code>SupportsToProto[LiveFeedRequest]</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <p>Attributes:</p> Name Type Description <code>bounding_box</code> <code>BoundingBox</code> <code>stats</code> <code>bool</code> <p>Whether to include stats in the given area.</p> <code>limit</code> <code>int</code> <p>Maximum number of flights (should be set to 1500 for unauthorized users,</p> <code>maxage</code> <code>int</code> <p>Maximum time since last message update, seconds.</p> <code>fields</code> <code>set[LiveFeedField]</code> <p>Fields to include. For unauthenticated users, a maximum of 4 fields can</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedParams.bounding_box","title":"bounding_box  <code>instance-attribute</code>","text":"<pre><code>bounding_box: BoundingBox\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.LiveFeedParams.stats","title":"stats  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stats: bool = False\n</code></pre> <p>Whether to include stats in the given area.</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedParams.limit","title":"limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>limit: int = 1500\n</code></pre> <p>Maximum number of flights (should be set to 1500 for unauthorized users, 2000 for authorized users).</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedParams.maxage","title":"maxage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>maxage: int = 14400\n</code></pre> <p>Maximum time since last message update, seconds.</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedParams.fields","title":"fields  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fields: set[LiveFeedField] = field(\n    default_factory=lambda: {\n        \"flight\",\n        \"reg\",\n        \"route\",\n        \"type\",\n    }\n)\n</code></pre> <p>Fields to include. For unauthenticated users, a maximum of 4 fields can be included. When authenticated, <code>squawk</code>, <code>vspeed</code>, <code>airspace</code>, <code>logo_id</code> and <code>age</code> can be included.</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedParams.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; LiveFeedRequest\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.LiveFeedPlaybackParams","title":"LiveFeedPlaybackParams  <code>dataclass</code>","text":"<pre><code>LiveFeedPlaybackParams(\n    bounding_box: BoundingBox,\n    stats: bool = False,\n    limit: int = 1500,\n    maxage: int = 14400,\n    fields: set[LiveFeedField] = (\n        lambda: {\"flight\", \"reg\", \"route\", \"type\"}\n    )(),\n    timestamp: IntoTimestamp | Literal[\"now\"] = \"now\",\n    duration: int = 7,\n    hfreq: int | None = None,\n)\n</code></pre> <p>               Bases: <code>SupportsToProto[PlaybackRequest]</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <p>Attributes:</p> Name Type Description <code>bounding_box</code> <code>BoundingBox</code> <code>stats</code> <code>bool</code> <p>Whether to include stats in the given area.</p> <code>limit</code> <code>int</code> <p>Maximum number of flights (should be set to 1500 for unauthorized users,</p> <code>maxage</code> <code>int</code> <p>Maximum time since last message update, seconds.</p> <code>fields</code> <code>set[LiveFeedField]</code> <p>Fields to include.</p> <code>timestamp</code> <code>IntoTimestamp | Literal['now']</code> <p>Start timestamp</p> <code>duration</code> <code>int</code> <p>Duration of prefetch, <code>floor(7.5*(multiplier))</code> seconds</p> <code>hfreq</code> <code>int | None</code> <p>High frequency mode</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedPlaybackParams.bounding_box","title":"bounding_box  <code>instance-attribute</code>","text":"<pre><code>bounding_box: BoundingBox\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.LiveFeedPlaybackParams.stats","title":"stats  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>stats: bool = False\n</code></pre> <p>Whether to include stats in the given area.</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedPlaybackParams.limit","title":"limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>limit: int = 1500\n</code></pre> <p>Maximum number of flights (should be set to 1500 for unauthorized users, 2000 for authorized users).</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedPlaybackParams.maxage","title":"maxage  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>maxage: int = 14400\n</code></pre> <p>Maximum time since last message update, seconds.</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedPlaybackParams.fields","title":"fields  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>fields: set[LiveFeedField] = field(\n    default_factory=lambda: {\n        \"flight\",\n        \"reg\",\n        \"route\",\n        \"type\",\n    }\n)\n</code></pre> <p>Fields to include. For unauthenticated users, a maximum of 4 fields can be included. When authenticated, <code>squawk</code>, <code>vspeed</code>, <code>airspace</code>, <code>logo_id</code> and <code>age</code> can be included.</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedPlaybackParams.timestamp","title":"timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>timestamp: IntoTimestamp | Literal['now'] = 'now'\n</code></pre> <p>Start timestamp</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedPlaybackParams.duration","title":"duration  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>duration: int = 7\n</code></pre> <p>Duration of prefetch, <code>floor(7.5*(multiplier))</code> seconds</p> <p>For 1x playback, this should be 7 seconds.</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedPlaybackParams.hfreq","title":"hfreq  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>hfreq: int | None = None\n</code></pre> <p>High frequency mode</p>"},{"location":"api/low_level/#fr24.grpc.LiveFeedPlaybackParams.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; PlaybackRequest\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.NearestFlightsParams","title":"NearestFlightsParams  <code>dataclass</code>","text":"<pre><code>NearestFlightsParams(\n    lat: float,\n    lon: float,\n    radius: int = 10000,\n    limit: int = 1500,\n)\n</code></pre> <p>               Bases: <code>SupportsToProto[NearestFlightsRequest]</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <p>Attributes:</p> Name Type Description <code>lat</code> <code>float</code> <p>Latitude, degrees, -90 to 90</p> <code>lon</code> <code>float</code> <p>Longitude, degrees, -180 to 180</p> <code>radius</code> <code>int</code> <p>Radius, metres</p> <code>limit</code> <code>int</code> <p>Maximum number of aircraft to return</p>"},{"location":"api/low_level/#fr24.grpc.NearestFlightsParams.lat","title":"lat  <code>instance-attribute</code>","text":"<pre><code>lat: float\n</code></pre> <p>Latitude, degrees, -90 to 90</p>"},{"location":"api/low_level/#fr24.grpc.NearestFlightsParams.lon","title":"lon  <code>instance-attribute</code>","text":"<pre><code>lon: float\n</code></pre> <p>Longitude, degrees, -180 to 180</p>"},{"location":"api/low_level/#fr24.grpc.NearestFlightsParams.radius","title":"radius  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>radius: int = 10000\n</code></pre> <p>Radius, metres</p>"},{"location":"api/low_level/#fr24.grpc.NearestFlightsParams.limit","title":"limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>limit: int = 1500\n</code></pre> <p>Maximum number of aircraft to return</p>"},{"location":"api/low_level/#fr24.grpc.NearestFlightsParams.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; NearestFlightsRequest\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.LiveFlightsStatusParams","title":"LiveFlightsStatusParams  <code>dataclass</code>","text":"<pre><code>LiveFlightsStatusParams(flight_ids: Sequence[IntoFlightId])\n</code></pre> <p>               Bases: <code>SupportsToProto[LiveFlightsStatusRequest]</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <p>Attributes:</p> Name Type Description <code>flight_ids</code> <code>Sequence[IntoFlightId]</code> <p>List of flight IDs to get status for</p>"},{"location":"api/low_level/#fr24.grpc.LiveFlightsStatusParams.flight_ids","title":"flight_ids  <code>instance-attribute</code>","text":"<pre><code>flight_ids: Sequence[IntoFlightId]\n</code></pre> <p>List of flight IDs to get status for</p>"},{"location":"api/low_level/#fr24.grpc.LiveFlightsStatusParams.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; LiveFlightsStatusRequest\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.FollowFlightParams","title":"FollowFlightParams  <code>dataclass</code>","text":"<pre><code>FollowFlightParams(\n    flight_id: IntoFlightId,\n    restriction_mode: ValueType | str | bytes = NOT_VISIBLE,\n)\n</code></pre> <p>               Bases: <code>SupportsToProto[FollowFlightRequest]</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <p>Attributes:</p> Name Type Description <code>flight_id</code> <code>IntoFlightId</code> <p>Flight ID to fetch details for.</p> <code>restriction_mode</code> <code>ValueType | str | bytes</code> <p>FAA LADD visibility mode.</p>"},{"location":"api/low_level/#fr24.grpc.FollowFlightParams.flight_id","title":"flight_id  <code>instance-attribute</code>","text":"<pre><code>flight_id: IntoFlightId\n</code></pre> <p>Flight ID to fetch details for. Must be live, or the response will contain an empty <code>DATA</code> frame error.</p>"},{"location":"api/low_level/#fr24.grpc.FollowFlightParams.restriction_mode","title":"restriction_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>restriction_mode: ValueType | str | bytes = NOT_VISIBLE\n</code></pre> <p>FAA LADD visibility mode.</p>"},{"location":"api/low_level/#fr24.grpc.FollowFlightParams.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; FollowFlightRequest\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.TopFlightsParams","title":"TopFlightsParams  <code>dataclass</code>","text":"<pre><code>TopFlightsParams(limit: int = 10)\n</code></pre> <p>               Bases: <code>SupportsToProto[TopFlightsRequest]</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <p>Attributes:</p> Name Type Description <code>limit</code> <code>int</code> <p>Maximum number of top flights to return (1-10)</p>"},{"location":"api/low_level/#fr24.grpc.TopFlightsParams.limit","title":"limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>limit: int = 10\n</code></pre> <p>Maximum number of top flights to return (1-10)</p>"},{"location":"api/low_level/#fr24.grpc.TopFlightsParams.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; TopFlightsRequest\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.FlightDetailsParams","title":"FlightDetailsParams  <code>dataclass</code>","text":"<pre><code>FlightDetailsParams(\n    flight_id: IntoFlightId,\n    restriction_mode: ValueType | str | bytes = NOT_VISIBLE,\n    verbose: bool = True,\n)\n</code></pre> <p>               Bases: <code>SupportsToProto[FlightDetailsRequest]</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <p>Attributes:</p> Name Type Description <code>flight_id</code> <code>IntoFlightId</code> <p>Flight ID to fetch details for.</p> <code>restriction_mode</code> <code>ValueType | str | bytes</code> <p>FAA LADD visibility mode.</p> <code>verbose</code> <code>bool</code> <p>Whether to include [fr24.proto.v1_pb2.FlightDetailsResponse.flight_plan]</p>"},{"location":"api/low_level/#fr24.grpc.FlightDetailsParams.flight_id","title":"flight_id  <code>instance-attribute</code>","text":"<pre><code>flight_id: IntoFlightId\n</code></pre> <p>Flight ID to fetch details for. Must be live, or the response will contain an empty <code>DATA</code> frame error.</p>"},{"location":"api/low_level/#fr24.grpc.FlightDetailsParams.restriction_mode","title":"restriction_mode  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>restriction_mode: ValueType | str | bytes = NOT_VISIBLE\n</code></pre> <p>FAA LADD visibility mode.</p>"},{"location":"api/low_level/#fr24.grpc.FlightDetailsParams.verbose","title":"verbose  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>verbose: bool = True\n</code></pre> <p>Whether to include [fr24.proto.v1_pb2.FlightDetailsResponse.flight_plan] and [fr24.proto.v1_pb2.FlightDetailsResponse.aircraft_details] in the response.</p>"},{"location":"api/low_level/#fr24.grpc.FlightDetailsParams.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; FlightDetailsRequest\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.PlaybackFlightParams","title":"PlaybackFlightParams  <code>dataclass</code>","text":"<pre><code>PlaybackFlightParams(\n    flight_id: IntoFlightId, timestamp: IntoTimestamp\n)\n</code></pre> <p>               Bases: <code>SupportsToProto[PlaybackFlightRequest]</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <p>Attributes:</p> Name Type Description <code>flight_id</code> <code>IntoFlightId</code> <p>Flight ID to fetch details for.</p> <code>timestamp</code> <code>IntoTimestamp</code> <p>Actual time of departure (ATD) of the historic flight</p>"},{"location":"api/low_level/#fr24.grpc.PlaybackFlightParams.flight_id","title":"flight_id  <code>instance-attribute</code>","text":"<pre><code>flight_id: IntoFlightId\n</code></pre> <p>Flight ID to fetch details for. Must not be live, or the response will contain an empty <code>DATA</code> frame error.</p>"},{"location":"api/low_level/#fr24.grpc.PlaybackFlightParams.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntoTimestamp\n</code></pre> <p>Actual time of departure (ATD) of the historic flight</p>"},{"location":"api/low_level/#fr24.grpc.PlaybackFlightParams.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; PlaybackFlightRequest\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.construct_request","title":"construct_request","text":"<pre><code>construct_request(\n    method_name: str, message: Message, headers: Headers\n) -&gt; Request\n</code></pre> <p>Construct the gRPC request with encoded gRPC body.</p>"},{"location":"api/low_level/#fr24.grpc.to_protobuf_enum","title":"to_protobuf_enum","text":"<pre><code>to_protobuf_enum(\n    enum: _V | str | bytes,\n    type_wrapper: _EnumTypeWrapper[_V],\n) -&gt; _V\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.live_feed","title":"live_feed  <code>async</code>","text":"<pre><code>live_feed(\n    client: AsyncClient,\n    message: IntoLiveFeedRequest,\n    headers: Headers,\n) -&gt; Annotated[Response, LiveFeedResponse]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.live_feed_position_buffer_dict","title":"live_feed_position_buffer_dict","text":"<pre><code>live_feed_position_buffer_dict(\n    position_buffer: PositionBuffer,\n) -&gt; list[RecentPositionRecord]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.live_feed_flightdata_dict","title":"live_feed_flightdata_dict","text":"<pre><code>live_feed_flightdata_dict(lfr: Flight) -&gt; FlightRecord\n</code></pre> <p>Convert the protobuf message to a dictionary.</p>"},{"location":"api/low_level/#fr24.grpc.live_feed_df","title":"live_feed_df","text":"<pre><code>live_feed_df(data: LiveFeedResponse) -&gt; DataFrame\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.live_feed_playback","title":"live_feed_playback  <code>async</code>","text":"<pre><code>live_feed_playback(\n    client: AsyncClient,\n    message: IntoPlaybackRequest,\n    headers: Headers,\n) -&gt; Annotated[Response, LiveFeedResponse]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.live_feed_playback_df","title":"live_feed_playback_df","text":"<pre><code>live_feed_playback_df(data: PlaybackResponse) -&gt; DataFrame\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.nearest_flights","title":"nearest_flights  <code>async</code>","text":"<pre><code>nearest_flights(\n    client: AsyncClient,\n    message: IntoNearestFlightsRequest,\n    headers: Headers,\n) -&gt; Annotated[Response, NearestFlightsResponse]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.nearest_flights_nearbyflight_dict","title":"nearest_flights_nearbyflight_dict","text":"<pre><code>nearest_flights_nearbyflight_dict(\n    nf: NearbyFlight,\n) -&gt; NearbyFlightRecord\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.nearest_flights_df","title":"nearest_flights_df","text":"<pre><code>nearest_flights_df(\n    data: NearestFlightsResponse,\n) -&gt; DataFrame\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.live_flights_status","title":"live_flights_status  <code>async</code>","text":"<pre><code>live_flights_status(\n    client: AsyncClient,\n    message: IntoLiveFlightsStatusRequest,\n    headers: Headers,\n) -&gt; Annotated[Response, LiveFlightsStatusResponse]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.live_flights_status_flightstatusdata_dict","title":"live_flights_status_flightstatusdata_dict","text":"<pre><code>live_flights_status_flightstatusdata_dict(\n    flight_status: LiveFlightStatus,\n) -&gt; LiveFlightStatusRecord\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.live_flights_status_df","title":"live_flights_status_df","text":"<pre><code>live_flights_status_df(\n    data: LiveFlightsStatusResponse,\n) -&gt; DataFrame\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.search_index","title":"search_index  <code>async</code>","text":"<pre><code>search_index(\n    client: AsyncClient,\n    message: IntoFetchSearchIndexRequest,\n    headers: Headers,\n) -&gt; Annotated[Response, FetchSearchIndexResponse]\n</code></pre> <p>Unstable API: gateway timeout.</p>"},{"location":"api/low_level/#fr24.grpc.follow_flight_stream","title":"follow_flight_stream  <code>async</code>","text":"<pre><code>follow_flight_stream(\n    client: AsyncClient,\n    message: IntoFollowFlightRequest,\n    headers: Headers,\n) -&gt; AsyncGenerator[Annotated[bytes, ProtoError]]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.top_flights","title":"top_flights  <code>async</code>","text":"<pre><code>top_flights(\n    client: AsyncClient,\n    message: IntoTopFlightsRequest,\n    headers: Headers,\n) -&gt; Annotated[Response, TopFlightsResponse]\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.top_flights_dict","title":"top_flights_dict","text":"<pre><code>top_flights_dict(ff: FollowedFlight) -&gt; TopFlightRecord\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.top_flights_df","title":"top_flights_df","text":"<pre><code>top_flights_df(data: TopFlightsResponse) -&gt; DataFrame\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.live_trail","title":"live_trail  <code>async</code>","text":"<pre><code>live_trail(\n    client: AsyncClient,\n    message: IntoLiveTrailRequest,\n    headers: Headers,\n) -&gt; Annotated[Response, LiveTrailResponse]\n</code></pre> <p>Unstable API: returns empty <code>DATA</code> frame as of Sep 2024</p> <p>Contains empty <code>DATA</code> frame error if flight_id is not live</p>"},{"location":"api/low_level/#fr24.grpc.historic_trail","title":"historic_trail  <code>async</code>","text":"<pre><code>historic_trail(\n    client: AsyncClient,\n    message: IntoHistoricTrailRequest,\n    headers: Headers,\n) -&gt; Annotated[Response, HistoricTrailResponse]\n</code></pre> <p>Unstable API: returns empty <code>DATA</code> frame</p>"},{"location":"api/low_level/#fr24.grpc.flight_details","title":"flight_details  <code>async</code>","text":"<pre><code>flight_details(\n    client: AsyncClient,\n    message: IntoFlightDetailsRequest,\n    headers: Headers,\n) -&gt; Annotated[Response, FlightDetailsResponse]\n</code></pre> <p>contains empty <code>DATA</code> frame error if flight_id is not live</p>"},{"location":"api/low_level/#fr24.grpc.flight_details_dict","title":"flight_details_dict","text":"<pre><code>flight_details_dict(\n    response: FlightDetailsResponse,\n) -&gt; FlightDetailsRecord\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.trail_point_dict","title":"trail_point_dict","text":"<pre><code>trail_point_dict(tp: TrailPoint) -&gt; TrailPointRecord\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.ems_dict","title":"ems_dict","text":"<pre><code>ems_dict(ems: EMSInfo) -&gt; EMSRecord\n</code></pre> <p>Transform Enhanced Mode-S data in the protobuf message into a dictionary.</p> <p>This is similar to EMS data in the JSON API response, specifically fr24.json.playback_track_ems_dict, which gets converted to fr24.types.cache.PlaybackTrackEMSRecord. However, several fields are missing:</p> <ul> <li><code>timestamp</code></li> <li><code>autopilot</code></li> <li><code>track</code></li> <li><code>roll</code></li> <li><code>precision</code></li> <li><code>emergency</code></li> <li><code>tcas_acas</code></li> <li><code>heading</code></li> </ul>"},{"location":"api/low_level/#fr24.grpc.flight_details_df","title":"flight_details_df","text":"<pre><code>flight_details_df(data: FlightDetailsResponse) -&gt; DataFrame\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.playback_flight","title":"playback_flight  <code>async</code>","text":"<pre><code>playback_flight(\n    client: AsyncClient,\n    message: IntoPlaybackFlightRequest,\n    headers: Headers,\n) -&gt; Annotated[Response, PlaybackFlightResponse]\n</code></pre> <p>contains empty <code>DATA</code> frame error if flight_id is live</p>"},{"location":"api/low_level/#fr24.grpc.playback_flight_dict","title":"playback_flight_dict","text":"<pre><code>playback_flight_dict(\n    response: PlaybackFlightResponse,\n) -&gt; PlaybackFlightRecord\n</code></pre>"},{"location":"api/low_level/#fr24.grpc.playback_flight_df","title":"playback_flight_df","text":"<pre><code>playback_flight_df(\n    data: PlaybackFlightResponse,\n) -&gt; DataFrame\n</code></pre>"},{"location":"api/protobuf/","title":"Protobuf Definitions","text":"<p>Read more about the protobuf definitions here.</p>"},{"location":"api/protobuf/#fr24.proto","title":"proto","text":"<p>Helper functions for the gRPC+protobuf protocol. For more information, see: https://github.com/grpc/grpc/blob/master/doc/PROTOCOL-HTTP2.md</p> <p>Modules:</p> Name Description <code>headers</code> <p>Classes:</p> Name Description <code>SupportsToProto</code> <code>GrpcError</code> <p>When an application or runtime error occurs during an RPC a</p> <code>ProtoParseError</code> <p>Functions:</p> Name Description <code>to_proto</code> <code>encode_message</code> <p>Encode to a length-prefixed message.</p> <code>parse_data</code> <p>Decode a DATA frame (optionally, with Trailers) into a protobuf message.</p> <p>Attributes:</p> Name Type Description <code>T_co</code> <code>T</code> <code>ProtoError</code>"},{"location":"api/protobuf/#fr24.proto.T_co","title":"T_co  <code>module-attribute</code>","text":"<pre><code>T_co = TypeVar('T_co', bound=Message, covariant=True)\n</code></pre>"},{"location":"api/protobuf/#fr24.proto.T","title":"T  <code>module-attribute</code>","text":"<pre><code>T = TypeVar('T', bound=Message)\n</code></pre>"},{"location":"api/protobuf/#fr24.proto.ProtoError","title":"ProtoError  <code>module-attribute</code>","text":"<pre><code>ProtoError = Union[GrpcError, ProtoParseError]\n</code></pre>"},{"location":"api/protobuf/#fr24.proto.SupportsToProto","title":"SupportsToProto","text":"<p>               Bases: <code>Protocol[T_co]</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <p>Converts the object into a protobuf message.</p>"},{"location":"api/protobuf/#fr24.proto.SupportsToProto.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; T_co\n</code></pre> <p>Converts the object into a protobuf message.</p>"},{"location":"api/protobuf/#fr24.proto.GrpcError","title":"GrpcError","text":"<pre><code>GrpcError(\n    message: str,\n    raw_data: bytes | None = None,\n    *,\n    status: int | None = None,\n    status_message: bytes | None = None,\n    status_details: bytes | None = None,\n)\n</code></pre> <p>               Bases: <code>Exception</code></p> <p>When an application or runtime error occurs during an RPC a <code>Status</code> and <code>Status-Message</code> are delivered in <code>Trailers</code>.</p> <p>Methods:</p> Name Description <code>from_trailers</code> <p>Attributes:</p> Name Type Description <code>raw_data</code> <p>Length-prefixed message</p> <code>status</code> <p>1*DIGIT ; 0-9</p> <code>status_message</code> <p>Percent-Encoded</p> <code>status_details</code> <p><code>google.rpc.Status</code> proto message</p>"},{"location":"api/protobuf/#fr24.proto.GrpcError.raw_data","title":"raw_data  <code>instance-attribute</code>","text":"<pre><code>raw_data = raw_data\n</code></pre> <p>Length-prefixed message</p>"},{"location":"api/protobuf/#fr24.proto.GrpcError.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status = status\n</code></pre> <p>1*DIGIT ; 0-9</p>"},{"location":"api/protobuf/#fr24.proto.GrpcError.status_message","title":"status_message  <code>instance-attribute</code>","text":"<pre><code>status_message = status_message\n</code></pre> <p>Percent-Encoded</p>"},{"location":"api/protobuf/#fr24.proto.GrpcError.status_details","title":"status_details  <code>instance-attribute</code>","text":"<pre><code>status_details = status_details\n</code></pre> <p><code>google.rpc.Status</code> proto message</p>"},{"location":"api/protobuf/#fr24.proto.GrpcError.from_trailers","title":"from_trailers  <code>classmethod</code>","text":"<pre><code>from_trailers(data: bytes) -&gt; GrpcError\n</code></pre>"},{"location":"api/protobuf/#fr24.proto.ProtoParseError","title":"ProtoParseError","text":"<pre><code>ProtoParseError(\n    message: str, raw_data: bytes | None = None\n)\n</code></pre> <p>               Bases: <code>Exception</code></p> <p>Attributes:</p> Name Type Description <code>raw_data</code>"},{"location":"api/protobuf/#fr24.proto.ProtoParseError.raw_data","title":"raw_data  <code>instance-attribute</code>","text":"<pre><code>raw_data = raw_data\n</code></pre>"},{"location":"api/protobuf/#fr24.proto.to_proto","title":"to_proto","text":"<pre><code>to_proto(message_like: SupportsToProto[T] | T) -&gt; T\n</code></pre>"},{"location":"api/protobuf/#fr24.proto.encode_message","title":"encode_message","text":"<pre><code>encode_message(msg: Message) -&gt; bytes\n</code></pre> <p>Encode to a length-prefixed message.</p>"},{"location":"api/protobuf/#fr24.proto.parse_data","title":"parse_data","text":"<pre><code>parse_data(\n    data: bytes, msg_type: Type[T]\n) -&gt; Result[T, ProtoError]\n</code></pre> <p>Decode a DATA frame (optionally, with Trailers) into a protobuf message.</p>"},{"location":"api/protobuf/#fr24.proto.headers","title":"headers","text":"<p>Functions:</p> Name Description <code>get_grpc_headers</code> <p>Attributes:</p> Name Type Description <code>PLATFORM_VERSION</code> <code>DEFAULT_HEADERS_GRPC</code>"},{"location":"api/protobuf/#fr24.proto.headers.PLATFORM_VERSION","title":"PLATFORM_VERSION  <code>module-attribute</code>","text":"<pre><code>PLATFORM_VERSION = '25.197.0927'\n</code></pre>"},{"location":"api/protobuf/#fr24.proto.headers.DEFAULT_HEADERS_GRPC","title":"DEFAULT_HEADERS_GRPC  <code>module-attribute</code>","text":"<pre><code>DEFAULT_HEADERS_GRPC = {\n    None: DEFAULT_HEADERS,\n    \"Accept\": \"*/*\",\n    \"fr24-device-id\": \"web-000000000-000000000000000000000\",\n    \"fr24-platform\": f\"web-{PLATFORM_VERSION}\",\n    \"x-envoy-retry-grpc-on\": \"unavailable\",\n    \"Content-Type\": \"application/grpc-web+proto\",\n    \"X-User-Agent\": \"grpc-web-javascript/0.1\",\n    \"X-Grpc-Web\": \"1\",\n    \"DNT\": \"1\",\n}\n</code></pre>"},{"location":"api/protobuf/#fr24.proto.headers.get_grpc_headers","title":"get_grpc_headers","text":"<pre><code>get_grpc_headers(\n    *,\n    auth: Authentication | None,\n    device_id: None | str = None,\n) -&gt; dict[str, str]\n</code></pre>"},{"location":"api/protobuf/#fr24.proto.v1_pb2","title":"v1_pb2","text":"<p>Generated protocol buffer code.</p>"},{"location":"api/service/","title":"Services","text":"<p>See the library quickstart to learn more.</p>"},{"location":"api/service/#fr24","title":"fr24","text":"<p>Classes:</p> Name Description <code>FR24</code>"},{"location":"api/service/#fr24.FR24","title":"FR24","text":"<pre><code>FR24(client: AsyncClient | None = None)\n</code></pre> <p>See docs quickstart.</p> <p>Parameters:</p> Name Type Description Default <code>client</code> <code>AsyncClient | None</code> <p>The <code>httpx</code> client to use. If not provided, a new one will be created with HTTP/2 enabled by default. It is highly recommended to use <code>http2=True</code> to avoid 464 errors and to be consistent with the browser.</p> <code>None</code> <p>Methods:</p> Name Description <code>login</code> <p>:param creds: Reads credentials from the environment variables or the</p> <p>Attributes:</p> Name Type Description <code>http</code> <p>The HTTP client for use in requests</p>"},{"location":"api/service/#fr24.FR24.http","title":"http  <code>instance-attribute</code>","text":"<pre><code>http = HTTPClient(\n    AsyncClient(http2=True) if client is None else client,\n    auth=auth,\n    grpc_headers=Headers(get_grpc_headers(auth=auth)),\n    json_headers=Headers(get_json_headers()),\n)\n</code></pre> <p>The HTTP client for use in requests</p>"},{"location":"api/service/#fr24.FR24.login","title":"login  <code>async</code>","text":"<pre><code>login(\n    creds: TokenSubscriptionKey\n    | UsernamePassword\n    | None\n    | Literal[\"from_env\"] = \"from_env\",\n) -&gt; None\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>creds</code> <code>TokenSubscriptionKey | UsernamePassword | None | Literal['from_env']</code> <p>Reads credentials from the environment variables or the config file if <code>creds</code> is set to <code>\"from_env\"</code> (default). Otherwise, provide the credentials directly.</p> <code>'from_env'</code>"},{"location":"api/service/#fr24.service","title":"service","text":"<p>Classes:</p> Name Description <code>ServiceFactory</code> <code>SupportsFetch</code> <code>APIResult</code> <p>Wraps the raw <code>Response</code> with request context.</p> <code>SupportsWriteTable</code> <code>FlightListService</code> <p>Flight list service.</p> <code>FlightListResult</code> <p>A single result from the flight list API.</p> <code>FlightListResultCollection</code> <p>A list of results from the flight list API.</p> <code>PlaybackService</code> <p>Playback service.</p> <code>PlaybackResult</code> <code>LiveFeedService</code> <p>Live feed service.</p> <code>LiveFeedResult</code> <code>LiveFeedPlaybackService</code> <p>Live feed service.</p> <code>LiveFeedPlaybackResult</code> <code>AirportListService</code> <p>Airport list service.</p> <code>AirportListResult</code> <code>FindService</code> <p>Find service.</p> <code>FindResult</code> <p>A single result from the find API.</p> <code>NearestFlightsService</code> <p>Nearest flights service.</p> <code>NearestFlightsResult</code> <code>LiveFlightsStatusService</code> <p>Live flights status service.</p> <code>LiveFlightsStatusResult</code> <code>FollowFlightService</code> <p>Follow flight service for real-time streaming.</p> <code>FollowFlightResult</code> <code>TopFlightsService</code> <p>Top flights service.</p> <code>TopFlightsResult</code> <code>FlightDetailsService</code> <p>Flight details service.</p> <code>FlightDetailsResult</code> <code>PlaybackFlightService</code> <p>Playback flight service.</p> <code>PlaybackFlightResult</code> <p>Attributes:</p> Name Type Description <code>logger</code> <code>RequestT</code> <p>Arguments for the request</p> <code>WriteLocation</code> <code>TypeAlias</code>"},{"location":"api/service/#fr24.service.logger","title":"logger  <code>module-attribute</code>","text":"<pre><code>logger = getLogger(__name__)\n</code></pre>"},{"location":"api/service/#fr24.service.RequestT","title":"RequestT  <code>module-attribute</code>","text":"<pre><code>RequestT = TypeVar('RequestT')\n</code></pre> <p>Arguments for the request</p>"},{"location":"api/service/#fr24.service.WriteLocation","title":"WriteLocation  <code>module-attribute</code>","text":"<pre><code>WriteLocation: TypeAlias = Union[FileLike, FR24Cache]\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory","title":"ServiceFactory","text":"<p>Methods:</p> Name Description <code>build_flight_list</code> <code>build_playback</code> <code>build_live_feed</code> <code>build_live_feed_playback</code> <code>build_airport_list</code> <code>build_find</code> <code>build_nearest_flights</code> <code>build_live_flights_status</code> <code>build_flight_details</code> <code>build_top_flights</code> <code>build_follow_flight</code> <code>build_playback_flight</code> <p>Attributes:</p> Name Type Description <code>http</code> <code>HTTPClient</code>"},{"location":"api/service/#fr24.service.ServiceFactory.http","title":"http  <code>instance-attribute</code>","text":"<pre><code>http: HTTPClient\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_flight_list","title":"build_flight_list","text":"<pre><code>build_flight_list() -&gt; FlightListService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_playback","title":"build_playback","text":"<pre><code>build_playback() -&gt; PlaybackService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_live_feed","title":"build_live_feed","text":"<pre><code>build_live_feed() -&gt; LiveFeedService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_live_feed_playback","title":"build_live_feed_playback","text":"<pre><code>build_live_feed_playback() -&gt; LiveFeedPlaybackService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_airport_list","title":"build_airport_list","text":"<pre><code>build_airport_list() -&gt; AirportListService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_find","title":"build_find","text":"<pre><code>build_find() -&gt; FindService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_nearest_flights","title":"build_nearest_flights","text":"<pre><code>build_nearest_flights() -&gt; NearestFlightsService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_live_flights_status","title":"build_live_flights_status","text":"<pre><code>build_live_flights_status() -&gt; LiveFlightsStatusService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_flight_details","title":"build_flight_details","text":"<pre><code>build_flight_details() -&gt; FlightDetailsService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_top_flights","title":"build_top_flights","text":"<pre><code>build_top_flights() -&gt; TopFlightsService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_follow_flight","title":"build_follow_flight","text":"<pre><code>build_follow_flight() -&gt; FollowFlightService\n</code></pre>"},{"location":"api/service/#fr24.service.ServiceFactory.build_playback_flight","title":"build_playback_flight","text":"<pre><code>build_playback_flight() -&gt; PlaybackFlightService\n</code></pre>"},{"location":"api/service/#fr24.service.SupportsFetch","title":"SupportsFetch","text":"<p>               Bases: <code>Protocol[RequestT]</code></p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetches data from the API.</p>"},{"location":"api/service/#fr24.service.SupportsFetch.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(*args: Any, **kwargs: Any) -&gt; APIResult[RequestT]\n</code></pre> <p>Fetches data from the API.</p>"},{"location":"api/service/#fr24.service.APIResult","title":"APIResult","text":"<p>               Bases: <code>Generic[RequestT]</code></p> <p>Wraps the raw <code>Response</code> with request context.</p> <p>Note that at this stage, the response holds the raw bytes, possibly encoded with a scheme. Retrieve the raw bytes with <code>response.content</code> or parse it into json with <code>response.json()</code>.</p> <p>Attributes:</p> Name Type Description <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.APIResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.APIResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.SupportsWriteTable","title":"SupportsWriteTable","text":"<p>               Bases: <code>Protocol</code></p> <p>Methods:</p> Name Description <code>write_table</code> <p>Writes the object to the given file path.</p>"},{"location":"api/service/#fr24.service.SupportsWriteTable.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt,\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre> <p>Writes the object to the given file path.</p>"},{"location":"api/service/#fr24.service.FlightListService","title":"FlightListService","text":"<p>               Bases: <code>SupportsFetch[FlightListParams]</code></p> <p>Flight list service.</p> <p>Classes:</p> Name Description <code>FetchAllArgs</code> <p>Arguments for fetching all pages of the flight list.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch the flight list.</p> <code>fetch_all</code> <p>Fetch all pages of the flight list.</p> <code>new_result_collection</code> <p>Create an empty list of flight list API results.</p>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs","title":"FetchAllArgs  <code>dataclass</code>","text":"<pre><code>FetchAllArgs(\n    reg: str | None = None,\n    flight: str | None = None,\n    page: int = 1,\n    limit: int = 10,\n    timestamp: IntoTimestamp\n    | Literal[\"now\"]\n    | None = \"now\",\n    delay: int = 5,\n    max_pages: int | None = None,\n)\n</code></pre> <p>               Bases: <code>FlightListParams</code></p> <p>Arguments for fetching all pages of the flight list.</p> <p>Methods:</p> Name Description <code>__post_init__</code> <p>Attributes:</p> Name Type Description <code>delay</code> <code>int</code> <p>Delay between requests in seconds.</p> <code>max_pages</code> <code>int | None</code> <p>Maximum number of pages to fetch.</p> <code>reg</code> <code>str | None</code> <p>Aircraft registration (e.g. <code>B-HUJ</code>)</p> <code>flight</code> <code>str | None</code> <p>Flight number (e.g. <code>CX8747</code>)</p> <code>page</code> <code>int</code> <p>Page number</p> <code>limit</code> <code>int</code> <p>Number of results per page - use <code>100</code> if authenticated.</p> <code>timestamp</code> <code>IntoTimestamp | Literal['now'] | None</code> <p>Show flights with ATD before this Unix timestamp</p> <code>kind</code> <code>Literal['reg', 'flight']</code> <code>ident</code> <code>str</code>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs.delay","title":"delay  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>delay: int = field(default=5)\n</code></pre> <p>Delay between requests in seconds.</p>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs.max_pages","title":"max_pages  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>max_pages: int | None = field(default=None)\n</code></pre> <p>Maximum number of pages to fetch.</p>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs.reg","title":"reg  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>reg: str | None = None\n</code></pre> <p>Aircraft registration (e.g. <code>B-HUJ</code>)</p>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs.flight","title":"flight  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>flight: str | None = None\n</code></pre> <p>Flight number (e.g. <code>CX8747</code>)</p>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs.page","title":"page  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>page: int = 1\n</code></pre> <p>Page number</p>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs.limit","title":"limit  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>limit: int = 10\n</code></pre> <p>Number of results per page - use <code>100</code> if authenticated.</p>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs.timestamp","title":"timestamp  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>timestamp: IntoTimestamp | Literal['now'] | None = 'now'\n</code></pre> <p>Show flights with ATD before this Unix timestamp</p>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs.kind","title":"kind  <code>property</code>","text":"<pre><code>kind: Literal['reg', 'flight']\n</code></pre>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs.ident","title":"ident  <code>property</code>","text":"<pre><code>ident: str\n</code></pre>"},{"location":"api/service/#fr24.service.FlightListService.FetchAllArgs.__post_init__","title":"__post_init__","text":"<pre><code>__post_init__() -&gt; None\n</code></pre>"},{"location":"api/service/#fr24.service.FlightListService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(\n    reg: str | None = None,\n    flight: str | None = None,\n    page: int = 1,\n    limit: int = 10,\n    timestamp: IntoTimestamp\n    | Literal[\"now\"]\n    | None = \"now\",\n) -&gt; FlightListResult\n</code></pre> <p>Fetch the flight list.</p> <p>Parameters:</p> Name Type Description Default <code>reg</code> <code>str | None</code> <p>Aircraft registration (e.g. <code>B-HUJ</code>)</p> <code>None</code> <code>flight</code> <code>str | None</code> <p>Flight number (e.g. <code>CX8747</code>)</p> <code>None</code> <code>page</code> <code>int</code> <p>Page number</p> <code>1</code> <code>limit</code> <code>int</code> <p>Number of results per page - use <code>100</code> if authenticated.</p> <code>10</code> <code>timestamp</code> <code>IntoTimestamp | Literal['now'] | None</code> <p>Show flights with ATD before this Unix timestamp</p> <code>'now'</code>"},{"location":"api/service/#fr24.service.FlightListService.fetch_all","title":"fetch_all  <code>async</code>","text":"<pre><code>fetch_all(\n    reg: str | None = None,\n    flight: str | None = None,\n    page: int = 1,\n    limit: int = 10,\n    timestamp: IntoTimestamp\n    | Literal[\"now\"]\n    | None = \"now\",\n    delay: int = 5,\n    max_pages: int | None = None,\n) -&gt; AsyncIterator[FlightListResult]\n</code></pre> <p>Fetch all pages of the flight list.</p> <p>Parameters:</p> Name Type Description Default <code>reg</code> <code>str | None</code> <p>Aircraft registration (e.g. <code>B-HUJ</code>)</p> <code>None</code> <code>flight</code> <code>str | None</code> <p>Flight number (e.g. <code>CX8747</code>)</p> <code>None</code> <code>page</code> <code>int</code> <p>Page number</p> <code>1</code> <code>limit</code> <code>int</code> <p>Number of results per page - use <code>100</code> if authenticated.</p> <code>10</code> <code>timestamp</code> <code>IntoTimestamp | Literal['now'] | None</code> <p>Show flights with ATD before this Unix timestamp</p> <code>'now'</code> <code>delay</code> <code>int</code> <p>Delay between requests in seconds.</p> <code>5</code> <code>max_pages</code> <code>int | None</code> <p>Maximum number of pages to fetch.</p> <code>None</code>"},{"location":"api/service/#fr24.service.FlightListService.new_result_collection","title":"new_result_collection","text":"<pre><code>new_result_collection() -&gt; FlightListResultCollection\n</code></pre> <p>Create an empty list of flight list API results.</p> <p>Methods <code>to_dict</code> and <code>to_polars</code> can be used collect all unique rows in each flight list.</p>"},{"location":"api/service/#fr24.service.FlightListResult","title":"FlightListResult","text":"<p>               Bases: <code>APIResult[FlightListParams]</code>, <code>SupportsToDict[FlightList]</code>, <code>SupportsToPolars</code>, <code>SupportsWriteTable</code></p> <p>A single result from the flight list API.</p> <p>Methods:</p> Name Description <code>to_dict</code> <code>to_polars</code> <code>write_table</code> <p>Attributes:</p> Name Type Description <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.FlightListResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.FlightListResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.FlightListResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; FlightList\n</code></pre>"},{"location":"api/service/#fr24.service.FlightListResult.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre>"},{"location":"api/service/#fr24.service.FlightListResult.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre>"},{"location":"api/service/#fr24.service.FlightListResultCollection","title":"FlightListResultCollection","text":"<p>               Bases: <code>list[FlightListResult]</code>, <code>SupportsToDict[FlightList]</code>, <code>SupportsToPolars</code>, <code>SupportsWriteTable</code></p> <p>A list of results from the flight list API.</p> <p>Methods:</p> Name Description <code>to_dict</code> <p>Collects the raw bytes in each response into a single result.</p> <code>to_polars</code> <code>write_table</code>"},{"location":"api/service/#fr24.service.FlightListResultCollection.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; FlightList\n</code></pre> <p>Collects the raw bytes in each response into a single result. Duplicates are identified by their (flight id, time of departure), and are removed.</p> <p>No checking is made for the homogenity of the request parameters.</p>"},{"location":"api/service/#fr24.service.FlightListResultCollection.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre>"},{"location":"api/service/#fr24.service.FlightListResultCollection.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackService","title":"PlaybackService","text":"<p>               Bases: <code>SupportsFetch[PlaybackParams]</code></p> <p>Playback service.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch the playback data for a flight.</p>"},{"location":"api/service/#fr24.service.PlaybackService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(\n    flight_id: IntoFlightId,\n    timestamp: IntoTimestamp | None = None,\n) -&gt; PlaybackResult\n</code></pre> <p>Fetch the playback data for a flight.</p> <p>Parameters:</p> Name Type Description Default <code>flight_id</code> <code>IntoFlightId</code> <p>fr24 flight id, represented in hex</p> required <code>timestamp</code> <code>IntoTimestamp | None</code> <p>Actual time of departure (ATD) of the historic flight, Unix timestamp in seconds. Optional, but it is recommended to include it.</p> <code>None</code>"},{"location":"api/service/#fr24.service.PlaybackResult","title":"PlaybackResult","text":"<p>               Bases: <code>APIResult[PlaybackParams]</code>, <code>SupportsToDict[Playback]</code>, <code>SupportsToPolars</code>, <code>SupportsWriteTable</code></p> <p>Methods:</p> Name Description <code>to_dict</code> <code>to_polars</code> <code>metadata</code> <p>Extracts flight metadata from the response.</p> <code>write_table</code> <p>Attributes:</p> Name Type Description <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.PlaybackResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; Playback\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackResult.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackResult.metadata","title":"metadata","text":"<pre><code>metadata() -&gt; dict[str, Any]\n</code></pre> <p>Extracts flight metadata from the response.</p>"},{"location":"api/service/#fr24.service.PlaybackResult.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedService","title":"LiveFeedService","text":"<p>               Bases: <code>SupportsFetch[LiveFeedParams]</code></p> <p>Live feed service.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch the live feed.</p>"},{"location":"api/service/#fr24.service.LiveFeedService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(\n    bounding_box: BoundingBox,\n    stats: bool = False,\n    limit: int = 1500,\n    maxage: int = 14400,\n    fields: set[LiveFeedField] = (\n        lambda: {\"flight\", \"reg\", \"route\", \"type\"}\n    )(),\n) -&gt; LiveFeedResult\n</code></pre> <p>Fetch the live feed.</p> <p>Parameters:</p> Name Type Description Default <code>stats</code> <code>bool</code> <p>Whether to include stats in the given area.</p> <code>False</code> <code>limit</code> <code>int</code> <p>Maximum number of flights (should be set to 1500 for unauthorized users, 2000 for authorized users).</p> <code>1500</code> <code>maxage</code> <code>int</code> <p>Maximum time since last message update, seconds.</p> <code>14400</code> <code>fields</code> <code>set[LiveFeedField]</code> <p>Fields to include. For unauthenticated users, a maximum of 4 fields can be included. When authenticated, <code>squawk</code>, <code>vspeed</code>, <code>airspace</code>, <code>logo_id</code> and <code>age</code> can be included.</p> <code>(lambda: {'flight', 'reg', 'route', 'type'})()</code>"},{"location":"api/service/#fr24.service.LiveFeedResult","title":"LiveFeedResult","text":"<p>               Bases: <code>APIResult[LiveFeedParams]</code>, <code>SupportsToProto[LiveFeedResponse]</code>, <code>SupportsToDict[dict[str, Any]]</code>, <code>SupportsToPolars</code>, <code>SupportsWriteTable</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <code>to_dict</code> <code>to_polars</code> <code>write_table</code> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>IntTimestampS</code> <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.LiveFeedResult.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedResult.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; LiveFeedResponse\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; dict[str, Any]\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedResult.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedResult.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedPlaybackService","title":"LiveFeedPlaybackService","text":"<p>               Bases: <code>SupportsFetch[LiveFeedPlaybackParams]</code></p> <p>Live feed service.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch a playback of the live feed.</p>"},{"location":"api/service/#fr24.service.LiveFeedPlaybackService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(\n    bounding_box: BoundingBox,\n    stats: bool = False,\n    limit: int = 1500,\n    maxage: int = 14400,\n    fields: set[LiveFeedField] = (\n        lambda: {\"flight\", \"reg\", \"route\", \"type\"}\n    )(),\n    timestamp: IntoTimestamp | Literal[\"now\"] = \"now\",\n    duration: int = 7,\n    hfreq: int | None = None,\n) -&gt; LiveFeedPlaybackResult\n</code></pre> <p>Fetch a playback of the live feed.</p> <p>Parameters:</p> Name Type Description Default <code>stats</code> <code>bool</code> <p>Whether to include stats in the given area.</p> <code>False</code> <code>limit</code> <code>int</code> <p>Maximum number of flights (should be set to 1500 for unauthorized users, 2000 for authorized users).</p> <code>1500</code> <code>maxage</code> <code>int</code> <p>Maximum time since last message update, seconds.</p> <code>14400</code> <code>fields</code> <code>set[LiveFeedField]</code> <p>Fields to include. For unauthenticated users, a maximum of 4 fields can be included. When authenticated, <code>squawk</code>, <code>vspeed</code>, <code>airspace</code>, <code>logo_id</code> and <code>age</code> can be included.</p> <code>(lambda: {'flight', 'reg', 'route', 'type'})()</code> <code>timestamp</code> <code>IntoTimestamp | Literal['now']</code> <p>Start timestamp</p> <code>'now'</code> <code>duration</code> <code>int</code> <p>Duration of prefetch, <code>floor(7.5*(multiplier))</code> seconds  For 1x playback, this should be 7 seconds.</p> <code>7</code> <code>hfreq</code> <code>int | None</code> <p>High frequency mode</p> <code>None</code>"},{"location":"api/service/#fr24.service.LiveFeedPlaybackResult","title":"LiveFeedPlaybackResult","text":"<p>               Bases: <code>APIResult[LiveFeedPlaybackParams]</code>, <code>SupportsToProto[PlaybackResponse]</code>, <code>SupportsToDict[dict[str, Any]]</code>, <code>SupportsToPolars</code>, <code>SupportsWriteTable</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <code>to_dict</code> <code>to_polars</code> <code>write_table</code> <p>Attributes:</p> Name Type Description <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.LiveFeedPlaybackResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedPlaybackResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedPlaybackResult.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; PlaybackResponse\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedPlaybackResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; dict[str, Any]\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedPlaybackResult.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFeedPlaybackResult.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre>"},{"location":"api/service/#fr24.service.AirportListService","title":"AirportListService","text":"<p>               Bases: <code>SupportsFetch[AirportListParams]</code></p> <p>Airport list service.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch the airport list.</p>"},{"location":"api/service/#fr24.service.AirportListService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(\n    airport: str,\n    mode: Literal[\"arrivals\", \"departures\", \"ground\"],\n    page: int = 1,\n    limit: int = 10,\n    timestamp: IntoTimestamp\n    | Literal[\"now\"]\n    | None = \"now\",\n) -&gt; AirportListResult\n</code></pre> <p>Fetch the airport list.</p> <p>Parameters:</p> Name Type Description Default <code>airport</code> <code>str</code> <p>IATA airport code (e.g. <code>HKG</code>)</p> required <code>mode</code> <code>Literal['arrivals', 'departures', 'ground']</code> <p>arrivals, departures or on ground aircraft</p> required <code>page</code> <code>int</code> <p>Page number</p> <code>1</code> <code>limit</code> <code>int</code> <p>Number of results per page - use <code>100</code> if authenticated.</p> <code>10</code> <code>timestamp</code> <code>IntoTimestamp | Literal['now'] | None</code> <p>Show flights with STA before this timestamp</p> <code>'now'</code>"},{"location":"api/service/#fr24.service.AirportListResult","title":"AirportListResult","text":"<p>               Bases: <code>APIResult[AirportListParams]</code>, <code>SupportsToDict[AirportList]</code></p> <p>Methods:</p> Name Description <code>to_dict</code> <p>Parse the response into a dictionary.</p> <p>Attributes:</p> Name Type Description <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.AirportListResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.AirportListResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.AirportListResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; AirportList\n</code></pre> <p>Parse the response into a dictionary.</p>"},{"location":"api/service/#fr24.service.FindService","title":"FindService","text":"<p>               Bases: <code>SupportsFetch[FindParams]</code></p> <p>Find service.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch the find results.</p>"},{"location":"api/service/#fr24.service.FindService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(query: str, limit: int = 50) -&gt; FindResult\n</code></pre> <p>Fetch the find results.</p> <p>Parameters:</p> Name Type Description Default <code>query</code> <code>str</code> <p>Airport, schedule (HKG-CDG), or aircraft.</p> required"},{"location":"api/service/#fr24.service.FindResult","title":"FindResult","text":"<p>               Bases: <code>APIResult[FindParams]</code>, <code>SupportsToDict[Find]</code></p> <p>A single result from the find API.</p> <p>Methods:</p> Name Description <code>to_dict</code> <p>Parse the response into a dictionary.</p> <p>Attributes:</p> Name Type Description <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.FindResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.FindResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.FindResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; Find\n</code></pre> <p>Parse the response into a dictionary.</p>"},{"location":"api/service/#fr24.service.NearestFlightsService","title":"NearestFlightsService","text":"<p>               Bases: <code>SupportsFetch[NearestFlightsParams]</code></p> <p>Nearest flights service.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch the nearest flights.</p>"},{"location":"api/service/#fr24.service.NearestFlightsService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(\n    lat: float,\n    lon: float,\n    radius: int = 10000,\n    limit: int = 1500,\n) -&gt; NearestFlightsResult\n</code></pre> <p>Fetch the nearest flights.</p> <p>Parameters:</p> Name Type Description Default <code>lat</code> <code>float</code> <p>Latitude, degrees, -90 to 90</p> required <code>lon</code> <code>float</code> <p>Longitude, degrees, -180 to 180</p> required <code>radius</code> <code>int</code> <p>Radius, metres</p> <code>10000</code> <code>limit</code> <code>int</code> <p>Maximum number of aircraft to return</p> <code>1500</code>"},{"location":"api/service/#fr24.service.NearestFlightsResult","title":"NearestFlightsResult","text":"<p>               Bases: <code>APIResult[NearestFlightsParams]</code>, <code>SupportsToProto[NearestFlightsResponse]</code>, <code>SupportsToDict[dict[str, Any]]</code>, <code>SupportsToPolars</code>, <code>SupportsWriteTable</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <code>to_dict</code> <code>to_polars</code> <code>write_table</code> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>IntTimestampS</code> <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.NearestFlightsResult.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/service/#fr24.service.NearestFlightsResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.NearestFlightsResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.NearestFlightsResult.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; NearestFlightsResponse\n</code></pre>"},{"location":"api/service/#fr24.service.NearestFlightsResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; dict[str, Any]\n</code></pre>"},{"location":"api/service/#fr24.service.NearestFlightsResult.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre>"},{"location":"api/service/#fr24.service.NearestFlightsResult.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFlightsStatusService","title":"LiveFlightsStatusService","text":"<p>               Bases: <code>SupportsFetch[LiveFlightsStatusParams]</code></p> <p>Live flights status service.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch the live flights status.</p>"},{"location":"api/service/#fr24.service.LiveFlightsStatusService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(\n    flight_ids: Sequence[IntoFlightId],\n) -&gt; LiveFlightsStatusResult\n</code></pre> <p>Fetch the live flights status.</p> <p>Parameters:</p> Name Type Description Default <code>flight_ids</code> <code>Sequence[IntoFlightId]</code> <p>List of flight IDs to get status for</p> required"},{"location":"api/service/#fr24.service.LiveFlightsStatusResult","title":"LiveFlightsStatusResult","text":"<p>               Bases: <code>APIResult[LiveFlightsStatusParams]</code>, <code>SupportsToProto[LiveFlightsStatusResponse]</code>, <code>SupportsToDict[dict[str, Any]]</code>, <code>SupportsToPolars</code>, <code>SupportsWriteTable</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <code>to_dict</code> <code>to_polars</code> <code>write_table</code> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>IntTimestampS</code> <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.LiveFlightsStatusResult.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFlightsStatusResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFlightsStatusResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFlightsStatusResult.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; LiveFlightsStatusResponse\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFlightsStatusResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; dict[str, Any]\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFlightsStatusResult.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre>"},{"location":"api/service/#fr24.service.LiveFlightsStatusResult.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre>"},{"location":"api/service/#fr24.service.FollowFlightService","title":"FollowFlightService","text":"<p>Follow flight service for real-time streaming.</p> <p>Methods:</p> Name Description <code>stream</code> <p>Stream real-time flight updates.</p>"},{"location":"api/service/#fr24.service.FollowFlightService.stream","title":"stream  <code>async</code>","text":"<pre><code>stream(\n    flight_id: IntoFlightId,\n    restriction_mode: ValueType | str | bytes = NOT_VISIBLE,\n) -&gt; AsyncGenerator[FollowFlightResult, None]\n</code></pre> <p>Stream real-time flight updates.</p> <p>Parameters:</p> Name Type Description Default <code>flight_id</code> <code>IntoFlightId</code> <p>Flight ID to fetch details for. Must be live, or the response will contain an empty <code>DATA</code> frame error.</p> required <code>restriction_mode</code> <code>ValueType | str | bytes</code> <p>FAA LADD visibility mode.</p> <code>NOT_VISIBLE</code>"},{"location":"api/service/#fr24.service.FollowFlightResult","title":"FollowFlightResult","text":"<p>               Bases: <code>SupportsToProto[FollowFlightResponse]</code>, <code>SupportsToDict[dict[str, Any]]</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <code>to_dict</code> <p>Attributes:</p> Name Type Description <code>request</code> <code>FollowFlightParams</code> <code>response</code> <code>bytes</code>"},{"location":"api/service/#fr24.service.FollowFlightResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: FollowFlightParams\n</code></pre>"},{"location":"api/service/#fr24.service.FollowFlightResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: bytes\n</code></pre>"},{"location":"api/service/#fr24.service.FollowFlightResult.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; FollowFlightResponse\n</code></pre>"},{"location":"api/service/#fr24.service.FollowFlightResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; dict[str, Any]\n</code></pre>"},{"location":"api/service/#fr24.service.TopFlightsService","title":"TopFlightsService","text":"<p>               Bases: <code>SupportsFetch[TopFlightsParams]</code></p> <p>Top flights service.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch the top flights.</p>"},{"location":"api/service/#fr24.service.TopFlightsService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(limit: int = 10) -&gt; TopFlightsResult\n</code></pre> <p>Fetch the top flights.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>int</code> <p>Maximum number of top flights to return (1-10)</p> <code>10</code>"},{"location":"api/service/#fr24.service.TopFlightsResult","title":"TopFlightsResult","text":"<p>               Bases: <code>APIResult[TopFlightsParams]</code>, <code>SupportsToProto[TopFlightsResponse]</code>, <code>SupportsToDict[dict[str, Any]]</code>, <code>SupportsToPolars</code>, <code>SupportsWriteTable</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <code>to_dict</code> <code>to_polars</code> <code>write_table</code> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>IntTimestampS</code> <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.TopFlightsResult.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/service/#fr24.service.TopFlightsResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.TopFlightsResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.TopFlightsResult.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; TopFlightsResponse\n</code></pre>"},{"location":"api/service/#fr24.service.TopFlightsResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; dict[str, Any]\n</code></pre>"},{"location":"api/service/#fr24.service.TopFlightsResult.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre>"},{"location":"api/service/#fr24.service.TopFlightsResult.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre>"},{"location":"api/service/#fr24.service.FlightDetailsService","title":"FlightDetailsService","text":"<p>               Bases: <code>SupportsFetch[FlightDetailsParams]</code></p> <p>Flight details service.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch flight details.</p>"},{"location":"api/service/#fr24.service.FlightDetailsService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(\n    flight_id: IntoFlightId,\n    restriction_mode: ValueType | str | bytes = NOT_VISIBLE,\n    verbose: bool = True,\n) -&gt; FlightDetailsResult\n</code></pre> <p>Fetch flight details.</p> <p>Parameters:</p> Name Type Description Default <code>flight_id</code> <code>IntoFlightId</code> <p>Flight ID to fetch details for. Must be live, or the response will contain an empty <code>DATA</code> frame error.</p> required <code>restriction_mode</code> <code>ValueType | str | bytes</code> <p>FAA LADD visibility mode.</p> <code>NOT_VISIBLE</code> <code>verbose</code> <code>bool</code> <p>Whether to include [fr24.proto.v1_pb2.FlightDetailsResponse.flight_plan] and [fr24.proto.v1_pb2.FlightDetailsResponse.aircraft_details] in the response.</p> <code>True</code>"},{"location":"api/service/#fr24.service.FlightDetailsResult","title":"FlightDetailsResult","text":"<p>               Bases: <code>APIResult[FlightDetailsParams]</code>, <code>SupportsToProto[FlightDetailsResponse]</code>, <code>SupportsToDict[dict[str, Any]]</code>, <code>SupportsToPolars</code>, <code>SupportsWriteTable</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <code>to_dict</code> <code>to_polars</code> <code>write_table</code> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>IntTimestampS</code> <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.FlightDetailsResult.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/service/#fr24.service.FlightDetailsResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.FlightDetailsResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.FlightDetailsResult.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; FlightDetailsResponse\n</code></pre>"},{"location":"api/service/#fr24.service.FlightDetailsResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; dict[str, Any]\n</code></pre>"},{"location":"api/service/#fr24.service.FlightDetailsResult.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre>"},{"location":"api/service/#fr24.service.FlightDetailsResult.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackFlightService","title":"PlaybackFlightService","text":"<p>               Bases: <code>SupportsFetch[PlaybackFlightParams]</code></p> <p>Playback flight service.</p> <p>Methods:</p> Name Description <code>fetch</code> <p>Fetch playback flight details.</p>"},{"location":"api/service/#fr24.service.PlaybackFlightService.fetch","title":"fetch  <code>async</code>","text":"<pre><code>fetch(\n    flight_id: IntoFlightId, timestamp: IntoTimestamp\n) -&gt; PlaybackFlightResult\n</code></pre> <p>Fetch playback flight details.</p> <p>Parameters:</p> Name Type Description Default <code>flight_id</code> <code>IntoFlightId</code> <p>Flight ID to fetch details for. Must not be live, or the response will contain an empty <code>DATA</code> frame error.</p> required <code>timestamp</code> <code>IntoTimestamp</code> <p>Actual time of departure (ATD) of the historic flight</p> required"},{"location":"api/service/#fr24.service.PlaybackFlightResult","title":"PlaybackFlightResult","text":"<p>               Bases: <code>APIResult[PlaybackFlightParams]</code>, <code>SupportsToProto[PlaybackFlightResponse]</code>, <code>SupportsToDict[dict[str, Any]]</code>, <code>SupportsToPolars</code>, <code>SupportsWriteTable</code></p> <p>Methods:</p> Name Description <code>to_proto</code> <code>to_dict</code> <code>to_polars</code> <code>write_table</code> <p>Attributes:</p> Name Type Description <code>request</code> <code>RequestT</code> <code>response</code> <code>Response</code>"},{"location":"api/service/#fr24.service.PlaybackFlightResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: RequestT\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackFlightResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: Response\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackFlightResult.to_proto","title":"to_proto","text":"<pre><code>to_proto() -&gt; PlaybackFlightResponse\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackFlightResult.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; dict[str, Any]\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackFlightResult.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre>"},{"location":"api/service/#fr24.service.PlaybackFlightResult.write_table","title":"write_table","text":"<pre><code>write_table(\n    file: WriteLocation,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n) -&gt; None\n</code></pre>"},{"location":"api/types/","title":"Types","text":""},{"location":"api/types/#fr24.types","title":"types","text":"<p>Modules:</p> Name Description <code>cache</code> <code>grpc</code> <code>json</code> <code>static</code> <p>Attributes:</p> Name Type Description <code>M</code> <p>Method</p> <code>IntTimestampS</code> <code>TypeAlias</code> <p>Unix timestamp in integer seconds.</p> <code>IntTimestampMs</code> <code>TypeAlias</code> <p>Unix timestamp in integer milliseconds.</p> <code>IntoTimestamp</code> <code>TypeAlias</code> <p>A type that can be converted to a timestamp (in seconds).</p> <code>IntFlightId</code> <code>TypeAlias</code> <p>Flight ID as an integer.</p> <code>StrFlightIdHex</code> <code>TypeAlias</code> <p>Flight ID as a hexadecimal string.</p> <code>IntoFlightId</code> <code>TypeAlias</code> <p>A type that can be converted to a flight ID.</p>"},{"location":"api/types/#fr24.types.M","title":"M  <code>module-attribute</code>","text":"<pre><code>M = TypeVar('M')\n</code></pre> <p>Method</p>"},{"location":"api/types/#fr24.types.IntTimestampS","title":"IntTimestampS  <code>module-attribute</code>","text":"<pre><code>IntTimestampS: TypeAlias = int\n</code></pre> <p>Unix timestamp in integer seconds.</p>"},{"location":"api/types/#fr24.types.IntTimestampMs","title":"IntTimestampMs  <code>module-attribute</code>","text":"<pre><code>IntTimestampMs: TypeAlias = int\n</code></pre> <p>Unix timestamp in integer milliseconds.</p>"},{"location":"api/types/#fr24.types.IntoTimestamp","title":"IntoTimestamp  <code>module-attribute</code>","text":"<pre><code>IntoTimestamp: TypeAlias = Union[IntTimestampS, datetime]\n</code></pre> <p>A type that can be converted to a timestamp (in seconds).</p>"},{"location":"api/types/#fr24.types.IntFlightId","title":"IntFlightId  <code>module-attribute</code>","text":"<pre><code>IntFlightId: TypeAlias = int\n</code></pre> <p>Flight ID as an integer.</p>"},{"location":"api/types/#fr24.types.StrFlightIdHex","title":"StrFlightIdHex  <code>module-attribute</code>","text":"<pre><code>StrFlightIdHex: TypeAlias = str\n</code></pre> <p>Flight ID as a hexadecimal string.</p>"},{"location":"api/types/#fr24.types.IntoFlightId","title":"IntoFlightId  <code>module-attribute</code>","text":"<pre><code>IntoFlightId: TypeAlias = Union[\n    IntFlightId, StrFlightIdHex, bytes\n]\n</code></pre> <p>A type that can be converted to a flight ID.</p>"},{"location":"api/types/#fr24.types.cache","title":"cache","text":"<p>Classes:</p> Name Description <code>DType</code> <p>A newtype for annotating types in TypedDicts.</p> <code>FlightListRecord</code> <code>PlaybackTrackEMSRecord</code> <code>PlaybackTrackRecord</code> <code>RecentPositionRecord</code> <code>FlightRecord</code> <code>NearbyFlightRecord</code> <code>LiveFlightStatusRecord</code> <code>TopFlightRecord</code> <code>EMSRecord</code> <code>TrailPointRecord</code> <code>FlightDetailsRecord</code> <code>PlaybackFlightRecord</code> <p>Functions:</p> Name Description <code>to_schema</code> <p>Generate a polars schema from a TypedDict.</p> <p>Attributes:</p> Name Type Description <code>flight_list_schema</code> <code>playback_track_ems_schema</code> <code>playback_track_schema</code> <code>position_buffer_struct_schema</code> <code>live_feed_schema</code> <code>nearest_flights_schema</code> <code>live_flights_status_schema</code> <code>top_flights_schema</code> <code>ems_struct_schema</code> <code>trail_point_schema</code> <code>flight_details_schema</code> <code>playback_flight_schema</code> <code>TabularFileFmt</code>"},{"location":"api/types/#fr24.types.cache.flight_list_schema","title":"flight_list_schema  <code>module-attribute</code>","text":"<pre><code>flight_list_schema = to_schema(FlightListRecord)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.playback_track_ems_schema","title":"playback_track_ems_schema  <code>module-attribute</code>","text":"<pre><code>playback_track_ems_schema = to_schema(\n    PlaybackTrackEMSRecord\n)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.playback_track_schema","title":"playback_track_schema  <code>module-attribute</code>","text":"<pre><code>playback_track_schema = to_schema(PlaybackTrackRecord)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.position_buffer_struct_schema","title":"position_buffer_struct_schema  <code>module-attribute</code>","text":"<pre><code>position_buffer_struct_schema = to_schema(\n    RecentPositionRecord\n)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.live_feed_schema","title":"live_feed_schema  <code>module-attribute</code>","text":"<pre><code>live_feed_schema = to_schema(FlightRecord)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.nearest_flights_schema","title":"nearest_flights_schema  <code>module-attribute</code>","text":"<pre><code>nearest_flights_schema = to_schema(NearbyFlightRecord)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.live_flights_status_schema","title":"live_flights_status_schema  <code>module-attribute</code>","text":"<pre><code>live_flights_status_schema = to_schema(\n    LiveFlightStatusRecord\n)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.top_flights_schema","title":"top_flights_schema  <code>module-attribute</code>","text":"<pre><code>top_flights_schema = to_schema(TopFlightRecord)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.ems_struct_schema","title":"ems_struct_schema  <code>module-attribute</code>","text":"<pre><code>ems_struct_schema = to_schema(EMSRecord)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.trail_point_schema","title":"trail_point_schema  <code>module-attribute</code>","text":"<pre><code>trail_point_schema = to_schema(TrailPointRecord)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.flight_details_schema","title":"flight_details_schema  <code>module-attribute</code>","text":"<pre><code>flight_details_schema = to_schema(FlightDetailsRecord)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.playback_flight_schema","title":"playback_flight_schema  <code>module-attribute</code>","text":"<pre><code>playback_flight_schema = to_schema(PlaybackFlightRecord)\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TabularFileFmt","title":"TabularFileFmt  <code>module-attribute</code>","text":"<pre><code>TabularFileFmt = Literal['parquet', 'csv']\n</code></pre>"},{"location":"api/types/#fr24.types.cache.DType","title":"DType  <code>dataclass</code>","text":"<pre><code>DType(type_: DataType)\n</code></pre> <p>A newtype for annotating types in TypedDicts.</p> <p>Methods:</p> Name Description <code>__post_init__</code> <p>Attributes:</p> Name Type Description <code>type_</code> <code>DataType</code>"},{"location":"api/types/#fr24.types.cache.DType.type_","title":"type_  <code>instance-attribute</code>","text":"<pre><code>type_: DataType\n</code></pre>"},{"location":"api/types/#fr24.types.cache.DType.__post_init__","title":"__post_init__","text":"<pre><code>__post_init__() -&gt; None\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord","title":"FlightListRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>flight_id</code> <code>Annotated[Union[IntFlightId, None], DType(UInt64())]</code> <code>number</code> <code>Annotated[Union[str, None], DType(String())]</code> <code>callsign</code> <code>Annotated[Union[str, None], DType(String())]</code> <code>icao24</code> <code>Annotated[Union[int, None], DType(UInt32())]</code> <code>registration</code> <code>Annotated[Union[str, None], DType(String())]</code> <code>typecode</code> <code>Annotated[str, DType(String())]</code> <code>origin</code> <code>Annotated[Union[str, None], DType(String())]</code> <code>destination</code> <code>Annotated[Union[str, None], DType(String())]</code> <code>status</code> <code>Annotated[Union[str, None], DType(String())]</code> <code>STOD</code> <code>Annotated[Union[IntTimestampMs, None], DType(Datetime('ms', time_zone='UTC'))]</code> <code>ETOD</code> <code>Annotated[Union[IntTimestampMs, None], DType(Datetime('ms', time_zone='UTC'))]</code> <code>ATOD</code> <code>Annotated[Union[IntTimestampMs, None], DType(Datetime('ms', time_zone='UTC'))]</code> <code>STOA</code> <code>Annotated[Union[IntTimestampMs, None], DType(Datetime('ms', time_zone='UTC'))]</code> <code>ETOA</code> <code>Annotated[Union[IntTimestampMs, None], DType(Datetime('ms', time_zone='UTC'))]</code> <code>ATOA</code> <code>Annotated[Union[IntTimestampMs, None], DType(Datetime('ms', time_zone='UTC'))]</code>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.flight_id","title":"flight_id  <code>instance-attribute</code>","text":"<pre><code>flight_id: Annotated[\n    Union[IntFlightId, None], DType(UInt64())\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.number","title":"number  <code>instance-attribute</code>","text":"<pre><code>number: Annotated[Union[str, None], DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.callsign","title":"callsign  <code>instance-attribute</code>","text":"<pre><code>callsign: Annotated[Union[str, None], DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.icao24","title":"icao24  <code>instance-attribute</code>","text":"<pre><code>icao24: Annotated[Union[int, None], DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.registration","title":"registration  <code>instance-attribute</code>","text":"<pre><code>registration: Annotated[Union[str, None], DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.typecode","title":"typecode  <code>instance-attribute</code>","text":"<pre><code>typecode: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.origin","title":"origin  <code>instance-attribute</code>","text":"<pre><code>origin: Annotated[Union[str, None], DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.destination","title":"destination  <code>instance-attribute</code>","text":"<pre><code>destination: Annotated[Union[str, None], DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: Annotated[Union[str, None], DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.STOD","title":"STOD  <code>instance-attribute</code>","text":"<pre><code>STOD: Annotated[\n    Union[IntTimestampMs, None],\n    DType(Datetime(\"ms\", time_zone=\"UTC\")),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.ETOD","title":"ETOD  <code>instance-attribute</code>","text":"<pre><code>ETOD: Annotated[\n    Union[IntTimestampMs, None],\n    DType(Datetime(\"ms\", time_zone=\"UTC\")),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.ATOD","title":"ATOD  <code>instance-attribute</code>","text":"<pre><code>ATOD: Annotated[\n    Union[IntTimestampMs, None],\n    DType(Datetime(\"ms\", time_zone=\"UTC\")),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.STOA","title":"STOA  <code>instance-attribute</code>","text":"<pre><code>STOA: Annotated[\n    Union[IntTimestampMs, None],\n    DType(Datetime(\"ms\", time_zone=\"UTC\")),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.ETOA","title":"ETOA  <code>instance-attribute</code>","text":"<pre><code>ETOA: Annotated[\n    Union[IntTimestampMs, None],\n    DType(Datetime(\"ms\", time_zone=\"UTC\")),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightListRecord.ATOA","title":"ATOA  <code>instance-attribute</code>","text":"<pre><code>ATOA: Annotated[\n    Union[IntTimestampMs, None],\n    DType(Datetime(\"ms\", time_zone=\"UTC\")),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord","title":"PlaybackTrackEMSRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>Annotated[IntTimestampS, DType(UInt32())]</code> <code>ias</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>tas</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>mach</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>mcp</code> <code>Annotated[Union[int, None], DType(Int32())]</code> <code>fms</code> <code>Annotated[Union[int, None], DType(Int32())]</code> <code>autopilot</code> <code>Annotated[Union[int, None], DType(Int8())]</code> <code>oat</code> <code>Annotated[Union[int, None], DType(Int8())]</code> <code>track</code> <code>Annotated[Union[float, None], DType(Float32())]</code> <code>roll</code> <code>Annotated[Union[float, None], DType(Float32())]</code> <code>qnh</code> <code>Annotated[Union[int, None], DType(UInt16())]</code> <code>wind_dir</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>wind_speed</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>precision</code> <code>Annotated[Union[int, None], DType(UInt8())]</code> <code>altitude_gps</code> <code>Annotated[Union[int, None], DType(Int32())]</code> <code>emergency</code> <code>Annotated[Union[int, None], DType(UInt8())]</code> <code>tcas_acas</code> <code>Annotated[Union[int, None], DType(UInt8())]</code> <code>heading</code> <code>Annotated[Union[int, None], DType(UInt16())]</code>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: Annotated[IntTimestampS, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.ias","title":"ias  <code>instance-attribute</code>","text":"<pre><code>ias: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.tas","title":"tas  <code>instance-attribute</code>","text":"<pre><code>tas: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.mach","title":"mach  <code>instance-attribute</code>","text":"<pre><code>mach: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.mcp","title":"mcp  <code>instance-attribute</code>","text":"<pre><code>mcp: Annotated[Union[int, None], DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.fms","title":"fms  <code>instance-attribute</code>","text":"<pre><code>fms: Annotated[Union[int, None], DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.autopilot","title":"autopilot  <code>instance-attribute</code>","text":"<pre><code>autopilot: Annotated[Union[int, None], DType(Int8())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.oat","title":"oat  <code>instance-attribute</code>","text":"<pre><code>oat: Annotated[Union[int, None], DType(Int8())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.track","title":"track  <code>instance-attribute</code>","text":"<pre><code>track: Annotated[Union[float, None], DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.roll","title":"roll  <code>instance-attribute</code>","text":"<pre><code>roll: Annotated[Union[float, None], DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.qnh","title":"qnh  <code>instance-attribute</code>","text":"<pre><code>qnh: Annotated[Union[int, None], DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.wind_dir","title":"wind_dir  <code>instance-attribute</code>","text":"<pre><code>wind_dir: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.wind_speed","title":"wind_speed  <code>instance-attribute</code>","text":"<pre><code>wind_speed: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.precision","title":"precision  <code>instance-attribute</code>","text":"<pre><code>precision: Annotated[Union[int, None], DType(UInt8())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.altitude_gps","title":"altitude_gps  <code>instance-attribute</code>","text":"<pre><code>altitude_gps: Annotated[Union[int, None], DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.emergency","title":"emergency  <code>instance-attribute</code>","text":"<pre><code>emergency: Annotated[Union[int, None], DType(UInt8())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.tcas_acas","title":"tcas_acas  <code>instance-attribute</code>","text":"<pre><code>tcas_acas: Annotated[Union[int, None], DType(UInt8())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackEMSRecord.heading","title":"heading  <code>instance-attribute</code>","text":"<pre><code>heading: Annotated[Union[int, None], DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackRecord","title":"PlaybackTrackRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>Annotated[IntTimestampS, DType(UInt32())]</code> <code>latitude</code> <code>Annotated[float, DType(Float32())]</code> <code>longitude</code> <code>Annotated[float, DType(Float32())]</code> <code>altitude</code> <code>Annotated[int, DType(Int32())]</code> <code>ground_speed</code> <code>Annotated[int, DType(Int16())]</code> <code>vertical_speed</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>track</code> <code>Annotated[int, DType(Int16())]</code> <code>squawk</code> <code>Annotated[int, DType(UInt16())]</code> <code>ems</code> <code>Annotated[Union[None, PlaybackTrackEMSRecord], DType(Struct(playback_track_ems_schema))]</code>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackRecord.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: Annotated[IntTimestampS, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackRecord.latitude","title":"latitude  <code>instance-attribute</code>","text":"<pre><code>latitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackRecord.longitude","title":"longitude  <code>instance-attribute</code>","text":"<pre><code>longitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackRecord.altitude","title":"altitude  <code>instance-attribute</code>","text":"<pre><code>altitude: Annotated[int, DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackRecord.ground_speed","title":"ground_speed  <code>instance-attribute</code>","text":"<pre><code>ground_speed: Annotated[int, DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackRecord.vertical_speed","title":"vertical_speed  <code>instance-attribute</code>","text":"<pre><code>vertical_speed: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackRecord.track","title":"track  <code>instance-attribute</code>","text":"<pre><code>track: Annotated[int, DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackRecord.squawk","title":"squawk  <code>instance-attribute</code>","text":"<pre><code>squawk: Annotated[int, DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackTrackRecord.ems","title":"ems  <code>instance-attribute</code>","text":"<pre><code>ems: Annotated[\n    Union[None, PlaybackTrackEMSRecord],\n    DType(Struct(playback_track_ems_schema)),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.RecentPositionRecord","title":"RecentPositionRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>delta_lat</code> <code>Annotated[int, DType(Int32())]</code> <code>delta_lon</code> <code>Annotated[int, DType(Int32())]</code> <code>delta_ms</code> <code>Annotated[int, DType(UInt32())]</code>"},{"location":"api/types/#fr24.types.cache.RecentPositionRecord.delta_lat","title":"delta_lat  <code>instance-attribute</code>","text":"<pre><code>delta_lat: Annotated[int, DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.RecentPositionRecord.delta_lon","title":"delta_lon  <code>instance-attribute</code>","text":"<pre><code>delta_lon: Annotated[int, DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.RecentPositionRecord.delta_ms","title":"delta_ms  <code>instance-attribute</code>","text":"<pre><code>delta_ms: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord","title":"FlightRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>Annotated[IntTimestampMs, DType(Datetime('ms', time_zone='UTC'))]</code> <code>flightid</code> <code>Annotated[IntFlightId, DType(UInt32())]</code> <code>latitude</code> <code>Annotated[float, DType(Float32())]</code> <code>longitude</code> <code>Annotated[float, DType(Float32())]</code> <code>track</code> <code>Annotated[int, DType(UInt16())]</code> <code>altitude</code> <code>Annotated[int, DType(Int32())]</code> <code>ground_speed</code> <code>Annotated[int, DType(Int16())]</code> <code>on_ground</code> <code>Annotated[bool, DType(Boolean())]</code> <code>callsign</code> <code>Annotated[str, DType(String())]</code> <code>source</code> <code>Annotated[int, DType(UInt8())]</code> <code>registration</code> <code>Annotated[str, DType(String())]</code> <code>origin</code> <code>Annotated[str, DType(String())]</code> <code>destination</code> <code>Annotated[str, DType(String())]</code> <code>typecode</code> <code>Annotated[str, DType(String())]</code> <code>eta</code> <code>Annotated[int, DType(UInt32())]</code> <code>squawk</code> <code>Annotated[int, DType(UInt16())]</code> <code>vertical_speed</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>position_buffer</code> <code>Annotated[list[RecentPositionRecord], DType(List(Struct(position_buffer_struct_schema)))]</code>"},{"location":"api/types/#fr24.types.cache.FlightRecord.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: Annotated[\n    IntTimestampMs, DType(Datetime(\"ms\", time_zone=\"UTC\"))\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.flightid","title":"flightid  <code>instance-attribute</code>","text":"<pre><code>flightid: Annotated[IntFlightId, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.latitude","title":"latitude  <code>instance-attribute</code>","text":"<pre><code>latitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.longitude","title":"longitude  <code>instance-attribute</code>","text":"<pre><code>longitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.track","title":"track  <code>instance-attribute</code>","text":"<pre><code>track: Annotated[int, DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.altitude","title":"altitude  <code>instance-attribute</code>","text":"<pre><code>altitude: Annotated[int, DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.ground_speed","title":"ground_speed  <code>instance-attribute</code>","text":"<pre><code>ground_speed: Annotated[int, DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.on_ground","title":"on_ground  <code>instance-attribute</code>","text":"<pre><code>on_ground: Annotated[bool, DType(Boolean())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.callsign","title":"callsign  <code>instance-attribute</code>","text":"<pre><code>callsign: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: Annotated[int, DType(UInt8())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.registration","title":"registration  <code>instance-attribute</code>","text":"<pre><code>registration: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.origin","title":"origin  <code>instance-attribute</code>","text":"<pre><code>origin: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.destination","title":"destination  <code>instance-attribute</code>","text":"<pre><code>destination: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.typecode","title":"typecode  <code>instance-attribute</code>","text":"<pre><code>typecode: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.eta","title":"eta  <code>instance-attribute</code>","text":"<pre><code>eta: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.squawk","title":"squawk  <code>instance-attribute</code>","text":"<pre><code>squawk: Annotated[int, DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.vertical_speed","title":"vertical_speed  <code>instance-attribute</code>","text":"<pre><code>vertical_speed: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightRecord.position_buffer","title":"position_buffer  <code>instance-attribute</code>","text":"<pre><code>position_buffer: Annotated[\n    list[RecentPositionRecord],\n    DType(List(Struct(position_buffer_struct_schema))),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord","title":"NearbyFlightRecord","text":"<p>               Bases: <code>FlightRecord</code></p> <p>Attributes:</p> Name Type Description <code>distance</code> <code>Annotated[int, DType(UInt32())]</code> <code>timestamp</code> <code>Annotated[IntTimestampMs, DType(Datetime('ms', time_zone='UTC'))]</code> <code>flightid</code> <code>Annotated[IntFlightId, DType(UInt32())]</code> <code>latitude</code> <code>Annotated[float, DType(Float32())]</code> <code>longitude</code> <code>Annotated[float, DType(Float32())]</code> <code>track</code> <code>Annotated[int, DType(UInt16())]</code> <code>altitude</code> <code>Annotated[int, DType(Int32())]</code> <code>ground_speed</code> <code>Annotated[int, DType(Int16())]</code> <code>on_ground</code> <code>Annotated[bool, DType(Boolean())]</code> <code>callsign</code> <code>Annotated[str, DType(String())]</code> <code>source</code> <code>Annotated[int, DType(UInt8())]</code> <code>registration</code> <code>Annotated[str, DType(String())]</code> <code>origin</code> <code>Annotated[str, DType(String())]</code> <code>destination</code> <code>Annotated[str, DType(String())]</code> <code>typecode</code> <code>Annotated[str, DType(String())]</code> <code>eta</code> <code>Annotated[int, DType(UInt32())]</code> <code>squawk</code> <code>Annotated[int, DType(UInt16())]</code> <code>vertical_speed</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>position_buffer</code> <code>Annotated[list[RecentPositionRecord], DType(List(Struct(position_buffer_struct_schema)))]</code>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.distance","title":"distance  <code>instance-attribute</code>","text":"<pre><code>distance: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: Annotated[\n    IntTimestampMs, DType(Datetime(\"ms\", time_zone=\"UTC\"))\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.flightid","title":"flightid  <code>instance-attribute</code>","text":"<pre><code>flightid: Annotated[IntFlightId, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.latitude","title":"latitude  <code>instance-attribute</code>","text":"<pre><code>latitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.longitude","title":"longitude  <code>instance-attribute</code>","text":"<pre><code>longitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.track","title":"track  <code>instance-attribute</code>","text":"<pre><code>track: Annotated[int, DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.altitude","title":"altitude  <code>instance-attribute</code>","text":"<pre><code>altitude: Annotated[int, DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.ground_speed","title":"ground_speed  <code>instance-attribute</code>","text":"<pre><code>ground_speed: Annotated[int, DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.on_ground","title":"on_ground  <code>instance-attribute</code>","text":"<pre><code>on_ground: Annotated[bool, DType(Boolean())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.callsign","title":"callsign  <code>instance-attribute</code>","text":"<pre><code>callsign: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.source","title":"source  <code>instance-attribute</code>","text":"<pre><code>source: Annotated[int, DType(UInt8())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.registration","title":"registration  <code>instance-attribute</code>","text":"<pre><code>registration: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.origin","title":"origin  <code>instance-attribute</code>","text":"<pre><code>origin: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.destination","title":"destination  <code>instance-attribute</code>","text":"<pre><code>destination: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.typecode","title":"typecode  <code>instance-attribute</code>","text":"<pre><code>typecode: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.eta","title":"eta  <code>instance-attribute</code>","text":"<pre><code>eta: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.squawk","title":"squawk  <code>instance-attribute</code>","text":"<pre><code>squawk: Annotated[int, DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.vertical_speed","title":"vertical_speed  <code>instance-attribute</code>","text":"<pre><code>vertical_speed: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.NearbyFlightRecord.position_buffer","title":"position_buffer  <code>instance-attribute</code>","text":"<pre><code>position_buffer: Annotated[\n    list[RecentPositionRecord],\n    DType(List(Struct(position_buffer_struct_schema))),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.LiveFlightStatusRecord","title":"LiveFlightStatusRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>flight_id</code> <code>Annotated[IntFlightId, DType(UInt32())]</code> <code>latitude</code> <code>Annotated[float, DType(Float32())]</code> <code>longitude</code> <code>Annotated[float, DType(Float32())]</code> <code>status</code> <code>Annotated[int, DType(UInt8())]</code> <code>squawk</code> <code>Annotated[int, DType(UInt16())]</code>"},{"location":"api/types/#fr24.types.cache.LiveFlightStatusRecord.flight_id","title":"flight_id  <code>instance-attribute</code>","text":"<pre><code>flight_id: Annotated[IntFlightId, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.LiveFlightStatusRecord.latitude","title":"latitude  <code>instance-attribute</code>","text":"<pre><code>latitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.LiveFlightStatusRecord.longitude","title":"longitude  <code>instance-attribute</code>","text":"<pre><code>longitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.LiveFlightStatusRecord.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: Annotated[int, DType(UInt8())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.LiveFlightStatusRecord.squawk","title":"squawk  <code>instance-attribute</code>","text":"<pre><code>squawk: Annotated[int, DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord","title":"TopFlightRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>flight_id</code> <code>Annotated[IntFlightId, DType(UInt32())]</code> <code>live_clicks</code> <code>Annotated[int, DType(UInt32())]</code> <code>total_clicks</code> <code>Annotated[int, DType(UInt32())]</code> <code>flight_number</code> <code>Annotated[str, DType(String())]</code> <code>callsign</code> <code>Annotated[str, DType(String())]</code> <code>squawk</code> <code>Annotated[int, DType(UInt16())]</code> <code>from_iata</code> <code>Annotated[str, DType(String())]</code> <code>from_city</code> <code>Annotated[str, DType(String())]</code> <code>to_iata</code> <code>Annotated[str, DType(String())]</code> <code>to_city</code> <code>Annotated[str, DType(String())]</code> <code>type</code> <code>Annotated[str, DType(String())]</code> <code>full_description</code> <code>Annotated[str, DType(String())]</code>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.flight_id","title":"flight_id  <code>instance-attribute</code>","text":"<pre><code>flight_id: Annotated[IntFlightId, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.live_clicks","title":"live_clicks  <code>instance-attribute</code>","text":"<pre><code>live_clicks: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.total_clicks","title":"total_clicks  <code>instance-attribute</code>","text":"<pre><code>total_clicks: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.flight_number","title":"flight_number  <code>instance-attribute</code>","text":"<pre><code>flight_number: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.callsign","title":"callsign  <code>instance-attribute</code>","text":"<pre><code>callsign: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.squawk","title":"squawk  <code>instance-attribute</code>","text":"<pre><code>squawk: Annotated[int, DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.from_iata","title":"from_iata  <code>instance-attribute</code>","text":"<pre><code>from_iata: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.from_city","title":"from_city  <code>instance-attribute</code>","text":"<pre><code>from_city: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.to_iata","title":"to_iata  <code>instance-attribute</code>","text":"<pre><code>to_iata: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.to_city","title":"to_city  <code>instance-attribute</code>","text":"<pre><code>to_city: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TopFlightRecord.full_description","title":"full_description  <code>instance-attribute</code>","text":"<pre><code>full_description: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord","title":"EMSRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>ias</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>tas</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>mach</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>mcp</code> <code>Annotated[Union[int, None], DType(Int32())]</code> <code>fms</code> <code>Annotated[Union[int, None], DType(Int32())]</code> <code>oat</code> <code>Annotated[Union[int, None], DType(Int8())]</code> <code>qnh</code> <code>Annotated[Union[int, None], DType(UInt16())]</code> <code>wind_dir</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>wind_speed</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>altitude_gps</code> <code>Annotated[Union[int, None], DType(Int32())]</code> <code>agpsdiff</code> <code>Annotated[Union[int, None], DType(Int32())]</code> <code>apflags</code> <code>Annotated[Union[int, None], DType(Int32())]</code> <code>rs</code> <code>Annotated[Union[int, None], DType(Int32())]</code>"},{"location":"api/types/#fr24.types.cache.EMSRecord.ias","title":"ias  <code>instance-attribute</code>","text":"<pre><code>ias: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.tas","title":"tas  <code>instance-attribute</code>","text":"<pre><code>tas: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.mach","title":"mach  <code>instance-attribute</code>","text":"<pre><code>mach: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.mcp","title":"mcp  <code>instance-attribute</code>","text":"<pre><code>mcp: Annotated[Union[int, None], DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.fms","title":"fms  <code>instance-attribute</code>","text":"<pre><code>fms: Annotated[Union[int, None], DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.oat","title":"oat  <code>instance-attribute</code>","text":"<pre><code>oat: Annotated[Union[int, None], DType(Int8())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.qnh","title":"qnh  <code>instance-attribute</code>","text":"<pre><code>qnh: Annotated[Union[int, None], DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.wind_dir","title":"wind_dir  <code>instance-attribute</code>","text":"<pre><code>wind_dir: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.wind_speed","title":"wind_speed  <code>instance-attribute</code>","text":"<pre><code>wind_speed: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.altitude_gps","title":"altitude_gps  <code>instance-attribute</code>","text":"<pre><code>altitude_gps: Annotated[Union[int, None], DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.agpsdiff","title":"agpsdiff  <code>instance-attribute</code>","text":"<pre><code>agpsdiff: Annotated[Union[int, None], DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.apflags","title":"apflags  <code>instance-attribute</code>","text":"<pre><code>apflags: Annotated[Union[int, None], DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.EMSRecord.rs","title":"rs  <code>instance-attribute</code>","text":"<pre><code>rs: Annotated[Union[int, None], DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TrailPointRecord","title":"TrailPointRecord","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>Annotated[IntTimestampS, DType(UInt32())]</code> <code>latitude</code> <code>Annotated[float, DType(Float32())]</code> <code>longitude</code> <code>Annotated[float, DType(Float32())]</code> <code>altitude</code> <code>Annotated[Union[int, None], DType(Int32())]</code> <code>ground_speed</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>track</code> <code>Annotated[Union[int, None], DType(UInt16())]</code> <code>vertical_speed</code> <code>Annotated[Union[int, None], DType(Int16())]</code>"},{"location":"api/types/#fr24.types.cache.TrailPointRecord.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: Annotated[IntTimestampS, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TrailPointRecord.latitude","title":"latitude  <code>instance-attribute</code>","text":"<pre><code>latitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TrailPointRecord.longitude","title":"longitude  <code>instance-attribute</code>","text":"<pre><code>longitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TrailPointRecord.altitude","title":"altitude  <code>instance-attribute</code>","text":"<pre><code>altitude: Annotated[Union[int, None], DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TrailPointRecord.ground_speed","title":"ground_speed  <code>instance-attribute</code>","text":"<pre><code>ground_speed: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TrailPointRecord.track","title":"track  <code>instance-attribute</code>","text":"<pre><code>track: Annotated[Union[int, None], DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.TrailPointRecord.vertical_speed","title":"vertical_speed  <code>instance-attribute</code>","text":"<pre><code>vertical_speed: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord","title":"FlightDetailsRecord","text":"<p>               Bases: <code>_AircraftRecord</code>, <code>_ScheduleRecord</code>, <code>_FlightProgressRecord</code>, <code>_FlightInfoRecord</code>, <code>_FlightTrailRecord</code></p> <p>Attributes:</p> Name Type Description <code>flight_trail_list</code> <code>Annotated[Union[None, list[TrailPointRecord]], DType(List(Struct(trail_point_schema)))]</code> <code>timestamp_ms</code> <code>Annotated[IntTimestampMs, DType(Datetime('ms', time_zone='UTC'))]</code> <code>flightid</code> <code>Annotated[IntFlightId, DType(UInt32())]</code> <code>latitude</code> <code>Annotated[float, DType(Float32())]</code> <code>longitude</code> <code>Annotated[float, DType(Float32())]</code> <code>track</code> <code>Annotated[Union[int, None], DType(UInt16())]</code> <code>altitude</code> <code>Annotated[int, DType(Int32())]</code> <code>ground_speed</code> <code>Annotated[int, DType(Int16())]</code> <code>vertical_speed</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>on_ground</code> <code>Annotated[bool, DType(Boolean())]</code> <code>callsign</code> <code>Annotated[str, DType(String())]</code> <code>squawk</code> <code>Annotated[int, DType(UInt16())]</code> <code>ems</code> <code>Annotated[Union[None, EMSRecord], DType(Struct(ems_struct_schema))]</code> <code>traversed_distance</code> <code>Annotated[int, DType(UInt32())]</code> <code>remaining_distance</code> <code>Annotated[int, DType(UInt32())]</code> <code>elapsed_time</code> <code>Annotated[Union[int, None], DType(UInt32())]</code> <code>remaining_time</code> <code>Annotated[Union[int, None], DType(UInt32())]</code> <code>eta</code> <code>Annotated[int, DType(UInt32())]</code> <code>great_circle_distance</code> <code>Annotated[int, DType(UInt32())]</code> <code>mean_flight_time</code> <code>Annotated[int, DType(UInt32())]</code> <code>flight_number</code> <code>Annotated[str, DType(String())]</code> <code>origin_id</code> <code>Annotated[int, DType(UInt32())]</code> <code>destination_id</code> <code>Annotated[int, DType(UInt32())]</code> <code>diverted_id</code> <code>Annotated[int, DType(UInt32())]</code> <code>scheduled_departure</code> <code>Annotated[IntTimestampS, DType(UInt32())]</code> <code>scheduled_arrival</code> <code>Annotated[IntTimestampS, DType(UInt32())]</code> <code>actual_departure</code> <code>Annotated[Union[IntTimestampS, None], DType(UInt32())]</code> <code>actual_arrival</code> <code>Annotated[Union[IntTimestampS, None], DType(UInt32())]</code> <code>icao_address</code> <code>Annotated[int, DType(UInt32())]</code> <code>reg</code> <code>Annotated[str, DType(String())]</code> <code>typecode</code> <code>Annotated[str, DType(String())]</code>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.flight_trail_list","title":"flight_trail_list  <code>instance-attribute</code>","text":"<pre><code>flight_trail_list: Annotated[\n    Union[None, list[TrailPointRecord]],\n    DType(List(Struct(trail_point_schema))),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.timestamp_ms","title":"timestamp_ms  <code>instance-attribute</code>","text":"<pre><code>timestamp_ms: Annotated[\n    IntTimestampMs, DType(Datetime(\"ms\", time_zone=\"UTC\"))\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.flightid","title":"flightid  <code>instance-attribute</code>","text":"<pre><code>flightid: Annotated[IntFlightId, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.latitude","title":"latitude  <code>instance-attribute</code>","text":"<pre><code>latitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.longitude","title":"longitude  <code>instance-attribute</code>","text":"<pre><code>longitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.track","title":"track  <code>instance-attribute</code>","text":"<pre><code>track: Annotated[Union[int, None], DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.altitude","title":"altitude  <code>instance-attribute</code>","text":"<pre><code>altitude: Annotated[int, DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.ground_speed","title":"ground_speed  <code>instance-attribute</code>","text":"<pre><code>ground_speed: Annotated[int, DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.vertical_speed","title":"vertical_speed  <code>instance-attribute</code>","text":"<pre><code>vertical_speed: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.on_ground","title":"on_ground  <code>instance-attribute</code>","text":"<pre><code>on_ground: Annotated[bool, DType(Boolean())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.callsign","title":"callsign  <code>instance-attribute</code>","text":"<pre><code>callsign: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.squawk","title":"squawk  <code>instance-attribute</code>","text":"<pre><code>squawk: Annotated[int, DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.ems","title":"ems  <code>instance-attribute</code>","text":"<pre><code>ems: Annotated[\n    Union[None, EMSRecord], DType(Struct(ems_struct_schema))\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.traversed_distance","title":"traversed_distance  <code>instance-attribute</code>","text":"<pre><code>traversed_distance: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.remaining_distance","title":"remaining_distance  <code>instance-attribute</code>","text":"<pre><code>remaining_distance: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.elapsed_time","title":"elapsed_time  <code>instance-attribute</code>","text":"<pre><code>elapsed_time: Annotated[Union[int, None], DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.remaining_time","title":"remaining_time  <code>instance-attribute</code>","text":"<pre><code>remaining_time: Annotated[Union[int, None], DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.eta","title":"eta  <code>instance-attribute</code>","text":"<pre><code>eta: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.great_circle_distance","title":"great_circle_distance  <code>instance-attribute</code>","text":"<pre><code>great_circle_distance: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.mean_flight_time","title":"mean_flight_time  <code>instance-attribute</code>","text":"<pre><code>mean_flight_time: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.flight_number","title":"flight_number  <code>instance-attribute</code>","text":"<pre><code>flight_number: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.origin_id","title":"origin_id  <code>instance-attribute</code>","text":"<pre><code>origin_id: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.destination_id","title":"destination_id  <code>instance-attribute</code>","text":"<pre><code>destination_id: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.diverted_id","title":"diverted_id  <code>instance-attribute</code>","text":"<pre><code>diverted_id: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.scheduled_departure","title":"scheduled_departure  <code>instance-attribute</code>","text":"<pre><code>scheduled_departure: Annotated[\n    IntTimestampS, DType(UInt32())\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.scheduled_arrival","title":"scheduled_arrival  <code>instance-attribute</code>","text":"<pre><code>scheduled_arrival: Annotated[IntTimestampS, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.actual_departure","title":"actual_departure  <code>instance-attribute</code>","text":"<pre><code>actual_departure: Annotated[\n    Union[IntTimestampS, None], DType(UInt32())\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.actual_arrival","title":"actual_arrival  <code>instance-attribute</code>","text":"<pre><code>actual_arrival: Annotated[\n    Union[IntTimestampS, None], DType(UInt32())\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.icao_address","title":"icao_address  <code>instance-attribute</code>","text":"<pre><code>icao_address: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.reg","title":"reg  <code>instance-attribute</code>","text":"<pre><code>reg: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.FlightDetailsRecord.typecode","title":"typecode  <code>instance-attribute</code>","text":"<pre><code>typecode: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord","title":"PlaybackFlightRecord","text":"<p>               Bases: <code>_AircraftRecord</code>, <code>_ScheduleRecord</code>, <code>_FlightInfoRecord</code>, <code>_FlightTrailRecord</code></p> <p>Attributes:</p> Name Type Description <code>flight_trail_list</code> <code>Annotated[Union[None, list[TrailPointRecord]], DType(List(Struct(trail_point_schema)))]</code> <code>timestamp_ms</code> <code>Annotated[IntTimestampMs, DType(Datetime('ms', time_zone='UTC'))]</code> <code>flightid</code> <code>Annotated[IntFlightId, DType(UInt32())]</code> <code>latitude</code> <code>Annotated[float, DType(Float32())]</code> <code>longitude</code> <code>Annotated[float, DType(Float32())]</code> <code>track</code> <code>Annotated[Union[int, None], DType(UInt16())]</code> <code>altitude</code> <code>Annotated[int, DType(Int32())]</code> <code>ground_speed</code> <code>Annotated[int, DType(Int16())]</code> <code>vertical_speed</code> <code>Annotated[Union[int, None], DType(Int16())]</code> <code>on_ground</code> <code>Annotated[bool, DType(Boolean())]</code> <code>callsign</code> <code>Annotated[str, DType(String())]</code> <code>squawk</code> <code>Annotated[int, DType(UInt16())]</code> <code>ems</code> <code>Annotated[Union[None, EMSRecord], DType(Struct(ems_struct_schema))]</code> <code>flight_number</code> <code>Annotated[str, DType(String())]</code> <code>origin_id</code> <code>Annotated[int, DType(UInt32())]</code> <code>destination_id</code> <code>Annotated[int, DType(UInt32())]</code> <code>diverted_id</code> <code>Annotated[int, DType(UInt32())]</code> <code>scheduled_departure</code> <code>Annotated[IntTimestampS, DType(UInt32())]</code> <code>scheduled_arrival</code> <code>Annotated[IntTimestampS, DType(UInt32())]</code> <code>actual_departure</code> <code>Annotated[Union[IntTimestampS, None], DType(UInt32())]</code> <code>actual_arrival</code> <code>Annotated[Union[IntTimestampS, None], DType(UInt32())]</code> <code>icao_address</code> <code>Annotated[int, DType(UInt32())]</code> <code>reg</code> <code>Annotated[str, DType(String())]</code> <code>typecode</code> <code>Annotated[str, DType(String())]</code>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.flight_trail_list","title":"flight_trail_list  <code>instance-attribute</code>","text":"<pre><code>flight_trail_list: Annotated[\n    Union[None, list[TrailPointRecord]],\n    DType(List(Struct(trail_point_schema))),\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.timestamp_ms","title":"timestamp_ms  <code>instance-attribute</code>","text":"<pre><code>timestamp_ms: Annotated[\n    IntTimestampMs, DType(Datetime(\"ms\", time_zone=\"UTC\"))\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.flightid","title":"flightid  <code>instance-attribute</code>","text":"<pre><code>flightid: Annotated[IntFlightId, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.latitude","title":"latitude  <code>instance-attribute</code>","text":"<pre><code>latitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.longitude","title":"longitude  <code>instance-attribute</code>","text":"<pre><code>longitude: Annotated[float, DType(Float32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.track","title":"track  <code>instance-attribute</code>","text":"<pre><code>track: Annotated[Union[int, None], DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.altitude","title":"altitude  <code>instance-attribute</code>","text":"<pre><code>altitude: Annotated[int, DType(Int32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.ground_speed","title":"ground_speed  <code>instance-attribute</code>","text":"<pre><code>ground_speed: Annotated[int, DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.vertical_speed","title":"vertical_speed  <code>instance-attribute</code>","text":"<pre><code>vertical_speed: Annotated[Union[int, None], DType(Int16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.on_ground","title":"on_ground  <code>instance-attribute</code>","text":"<pre><code>on_ground: Annotated[bool, DType(Boolean())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.callsign","title":"callsign  <code>instance-attribute</code>","text":"<pre><code>callsign: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.squawk","title":"squawk  <code>instance-attribute</code>","text":"<pre><code>squawk: Annotated[int, DType(UInt16())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.ems","title":"ems  <code>instance-attribute</code>","text":"<pre><code>ems: Annotated[\n    Union[None, EMSRecord], DType(Struct(ems_struct_schema))\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.flight_number","title":"flight_number  <code>instance-attribute</code>","text":"<pre><code>flight_number: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.origin_id","title":"origin_id  <code>instance-attribute</code>","text":"<pre><code>origin_id: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.destination_id","title":"destination_id  <code>instance-attribute</code>","text":"<pre><code>destination_id: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.diverted_id","title":"diverted_id  <code>instance-attribute</code>","text":"<pre><code>diverted_id: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.scheduled_departure","title":"scheduled_departure  <code>instance-attribute</code>","text":"<pre><code>scheduled_departure: Annotated[\n    IntTimestampS, DType(UInt32())\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.scheduled_arrival","title":"scheduled_arrival  <code>instance-attribute</code>","text":"<pre><code>scheduled_arrival: Annotated[IntTimestampS, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.actual_departure","title":"actual_departure  <code>instance-attribute</code>","text":"<pre><code>actual_departure: Annotated[\n    Union[IntTimestampS, None], DType(UInt32())\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.actual_arrival","title":"actual_arrival  <code>instance-attribute</code>","text":"<pre><code>actual_arrival: Annotated[\n    Union[IntTimestampS, None], DType(UInt32())\n]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.icao_address","title":"icao_address  <code>instance-attribute</code>","text":"<pre><code>icao_address: Annotated[int, DType(UInt32())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.reg","title":"reg  <code>instance-attribute</code>","text":"<pre><code>reg: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.PlaybackFlightRecord.typecode","title":"typecode  <code>instance-attribute</code>","text":"<pre><code>typecode: Annotated[str, DType(String())]\n</code></pre>"},{"location":"api/types/#fr24.types.cache.to_schema","title":"to_schema","text":"<pre><code>to_schema(obj: type[Any]) -&gt; dict[str, DataType]\n</code></pre> <p>Generate a polars schema from a TypedDict.</p> <p>Parameters:</p> Name Type Description Default <code>obj</code> <code>type[Any]</code> <p>A TypedDict with types annotated with <code>DType</code>.</p> required"},{"location":"api/types/#fr24.types.grpc","title":"grpc","text":"<p>Attributes:</p> Name Type Description <code>LiveFeedFieldAuthenticated</code> <code>LiveFeedField</code>"},{"location":"api/types/#fr24.types.grpc.LiveFeedFieldAuthenticated","title":"LiveFeedFieldAuthenticated  <code>module-attribute</code>","text":"<pre><code>LiveFeedFieldAuthenticated = Literal[\n    \"squawk\", \"vspeed\", \"airspace\", \"logo_id\", \"age\"\n]\n</code></pre>"},{"location":"api/types/#fr24.types.grpc.LiveFeedField","title":"LiveFeedField  <code>module-attribute</code>","text":"<pre><code>LiveFeedField = Literal[\n    \"flight\",\n    \"reg\",\n    \"route\",\n    \"type\",\n    LiveFeedFieldAuthenticated,\n]\n</code></pre>"},{"location":"api/types/#fr24.types.json","title":"json","text":"<p>Classes:</p> Name Description <code>User</code> <code>Features</code> <code>UserData</code> <code>Authentication</code> <code>UsernamePassword</code> <code>TokenSubscriptionKey</code> <code>APIResult</code> <code>FlightNumber</code> <code>AircraftModel</code> <code>AircraftAge</code> <code>AircraftAvailability</code> <code>StatusData</code> <code>OwnerData</code> <code>AirlineData</code> <code>CommonAirport</code> <code>AirportPairData</code> <code>ImageCollection</code> <code>FlightListRequest</code> <code>Item</code> <code>Page</code> <code>Identification</code> <code>FlightListCountry</code> <code>AircraftInfo</code> <code>Interval</code> <code>TimeOther</code> <code>FlightListTime</code> <code>FlightListItem</code> <code>AircraftImage</code> <code>FlightListResponse</code> <code>FlightListResult</code> <code>FlightList</code> <code>PlaybackRequest</code> <code>FlightIdentification</code> <code>AircraftIdentification</code> <code>AircraftData</code> <code>Median</code> <code>Altitude</code> <code>Speed</code> <code>VerticalSpeed</code> <code>EMS</code> <code>TrackData</code> <code>FlightDataAvailability</code> <code>FlightData</code> <code>PlaybackData</code> <code>PlaybackResponse</code> <code>PlaybackResult</code> <code>Playback</code> <code>AirportListScheduleSetting</code> <code>PluginSetting</code> <code>AirportSchedule</code> <code>AirportPluginData</code> <code>AirportListData</code> <code>AirportResponse</code> <code>AirportResult</code> <code>AirportList</code> <code>Live</code> <code>FindAirportDetail</code> <code>Operator</code> <code>FindScheduleDetail</code> <code>Aircraft</code> <code>EntryBase</code> <code>AirportEntry</code> <code>OperatorEntry</code> <code>LiveEntry</code> <code>ScheduleEntry</code> <code>AircraftEntry</code> <code>StatsEntry</code> <code>Stats</code> <code>Find</code> <p>Functions:</p> Name Description <code>is_airport</code> <code>is_operator</code> <code>is_live</code> <code>is_schedule</code> <code>is_aircraft</code> <p>Attributes:</p> Name Type Description <code>FLIGHT_LIST_EMPTY</code> <code>FlightList</code> <p>An object with no flight list data, for use as a default value.</p> <code>Plugin</code> <code>AirportRequest</code> <code>Iata</code> <code>Icao</code> <code>Entry</code>"},{"location":"api/types/#fr24.types.json.FLIGHT_LIST_EMPTY","title":"FLIGHT_LIST_EMPTY  <code>module-attribute</code>","text":"<pre><code>FLIGHT_LIST_EMPTY: FlightList = {\n    \"result\": {\n        \"request\": {\n            \"fetchBy\": \"flight\",\n            \"format\": \"json\",\n            \"limit\": 0,\n            \"page\": 0,\n            \"query\": \"\",\n            \"timestamp\": 0,\n        },\n        \"response\": {\n            \"item\": {\n                \"current\": 0,\n                \"total\": None,\n                \"limit\": 0,\n            },\n            \"page\": {\n                \"current\": 0,\n                \"more\": False,\n                \"total\": None,\n            },\n            \"timestamp\": 0,\n            \"data\": None,\n            \"aircraftInfo\": {\n                \"model\": {\"code\": \"\", \"text\": \"\"},\n                \"registration\": None,\n                \"country\": None,\n                \"hex\": None,\n                \"restricted\": False,\n                \"serialNo\": None,\n                \"age\": {\"availability\": False},\n                \"availability\": {\n                    \"serialNo\": False,\n                    \"age\": False,\n                },\n            },\n            \"aircraftImages\": [],\n        },\n    },\n    \"_api\": {\"copyright\": \"\", \"legalNotice\": \"\"},\n}\n</code></pre> <p>An object with no flight list data, for use as a default value.</p>"},{"location":"api/types/#fr24.types.json.Plugin","title":"Plugin  <code>module-attribute</code>","text":"<pre><code>Plugin = Literal[\n    \"details\",\n    \"runways\",\n    \"schedule\",\n    \"satelliteImage\",\n    \"scheduledRoutesStatistics\",\n    \"weather\",\n]\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportRequest","title":"AirportRequest  <code>module-attribute</code>","text":"<pre><code>AirportRequest = TypedDict(\n    \"AirportRequest\",\n    {\n        \"callback\": None,\n        \"code\": str,\n        \"device\": Union[str, None],\n        \"fleet\": Union[str, None],\n        \"format\": Literal[\"json\"],\n        \"limit\": int,\n        \"page\": int,\n        \"pk\": None,\n        \"plugin\": list[Plugin],\n        \"plugin[]\": list[Plugin],\n        \"plugin-setting\": PluginSetting,\n        \"plugin-setting[schedule][mode]\": str,\n        \"plugin-setting[schedule][timestamp]\": IntTimestampS,\n        \"token\": Union[str, None],\n    },\n    total=False,\n)\n</code></pre>"},{"location":"api/types/#fr24.types.json.Iata","title":"Iata  <code>module-attribute</code>","text":"<pre><code>Iata = Annotated[str, 'IATA']\n</code></pre>"},{"location":"api/types/#fr24.types.json.Icao","title":"Icao  <code>module-attribute</code>","text":"<pre><code>Icao = Annotated[str, 'ICAO']\n</code></pre>"},{"location":"api/types/#fr24.types.json.Entry","title":"Entry  <code>module-attribute</code>","text":"<pre><code>Entry = Union[\n    AirportEntry,\n    OperatorEntry,\n    LiveEntry,\n    ScheduleEntry,\n    AircraftEntry,\n]\n</code></pre>"},{"location":"api/types/#fr24.types.json.User","title":"User","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>Required[int]</code> <code>identity</code> <code>str</code> <code>locale</code> <code>str</code>"},{"location":"api/types/#fr24.types.json.User.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: Required[int]\n</code></pre>"},{"location":"api/types/#fr24.types.json.User.identity","title":"identity  <code>instance-attribute</code>","text":"<pre><code>identity: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.User.locale","title":"locale  <code>instance-attribute</code>","text":"<pre><code>locale: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Features","title":"Features","text":"<p>               Bases: <code>TypedDict</code></p>"},{"location":"api/types/#fr24.types.json.UserData","title":"UserData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>accessToken</code> <code>None | str</code> <code>accountType</code> <code>str</code> <code>countryCode</code> <code>None | str</code> <code>dateExpires</code> <code>IntTimestampS</code> <code>dateLastLogin</code> <code>str</code> <code>features</code> <code>Features</code> <code>hasConsented</code> <code>bool</code> <code>hasPassword</code> <code>bool</code> <code>idUser</code> <code>int</code> <code>identity</code> <code>str</code> <code>isActive</code> <code>bool</code> <code>isAnonymousAccount</code> <code>bool</code> <code>isLoggedIn</code> <code>bool</code> <code>localeCode</code> <code>str</code> <code>name</code> <code>None</code> <code>oAuth</code> <code>None</code> <code>oAuthType</code> <code>None</code> <code>publicKey</code> <code>None</code> <code>subscriptionKey</code> <code>None | str</code> <code>tokenLogin</code> <code>str</code> <code>typeSource</code> <code>str</code>"},{"location":"api/types/#fr24.types.json.UserData.accessToken","title":"accessToken  <code>instance-attribute</code>","text":"<pre><code>accessToken: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.accountType","title":"accountType  <code>instance-attribute</code>","text":"<pre><code>accountType: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.countryCode","title":"countryCode  <code>instance-attribute</code>","text":"<pre><code>countryCode: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.dateExpires","title":"dateExpires  <code>instance-attribute</code>","text":"<pre><code>dateExpires: IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.dateLastLogin","title":"dateLastLogin  <code>instance-attribute</code>","text":"<pre><code>dateLastLogin: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.features","title":"features  <code>instance-attribute</code>","text":"<pre><code>features: Features\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.hasConsented","title":"hasConsented  <code>instance-attribute</code>","text":"<pre><code>hasConsented: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.hasPassword","title":"hasPassword  <code>instance-attribute</code>","text":"<pre><code>hasPassword: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.idUser","title":"idUser  <code>instance-attribute</code>","text":"<pre><code>idUser: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.identity","title":"identity  <code>instance-attribute</code>","text":"<pre><code>identity: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.isActive","title":"isActive  <code>instance-attribute</code>","text":"<pre><code>isActive: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.isAnonymousAccount","title":"isAnonymousAccount  <code>instance-attribute</code>","text":"<pre><code>isAnonymousAccount: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.isLoggedIn","title":"isLoggedIn  <code>instance-attribute</code>","text":"<pre><code>isLoggedIn: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.localeCode","title":"localeCode  <code>instance-attribute</code>","text":"<pre><code>localeCode: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.oAuth","title":"oAuth  <code>instance-attribute</code>","text":"<pre><code>oAuth: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.oAuthType","title":"oAuthType  <code>instance-attribute</code>","text":"<pre><code>oAuthType: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.publicKey","title":"publicKey  <code>instance-attribute</code>","text":"<pre><code>publicKey: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.subscriptionKey","title":"subscriptionKey  <code>instance-attribute</code>","text":"<pre><code>subscriptionKey: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.tokenLogin","title":"tokenLogin  <code>instance-attribute</code>","text":"<pre><code>tokenLogin: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.UserData.typeSource","title":"typeSource  <code>instance-attribute</code>","text":"<pre><code>typeSource: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Authentication","title":"Authentication","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>message</code> <code>str</code> <code>msg</code> <code>str</code> <code>response_code</code> <code>int</code> <code>responseCode</code> <code>int</code> <code>status</code> <code>str</code> <code>success</code> <code>bool</code> <code>token</code> <code>str</code> <code>user</code> <code>User</code> <code>features</code> <code>Features</code> <code>userData</code> <code>Required[UserData]</code>"},{"location":"api/types/#fr24.types.json.Authentication.message","title":"message  <code>instance-attribute</code>","text":"<pre><code>message: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Authentication.msg","title":"msg  <code>instance-attribute</code>","text":"<pre><code>msg: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Authentication.response_code","title":"response_code  <code>instance-attribute</code>","text":"<pre><code>response_code: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Authentication.responseCode","title":"responseCode  <code>instance-attribute</code>","text":"<pre><code>responseCode: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Authentication.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Authentication.success","title":"success  <code>instance-attribute</code>","text":"<pre><code>success: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.Authentication.token","title":"token  <code>instance-attribute</code>","text":"<pre><code>token: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Authentication.user","title":"user  <code>instance-attribute</code>","text":"<pre><code>user: User\n</code></pre>"},{"location":"api/types/#fr24.types.json.Authentication.features","title":"features  <code>instance-attribute</code>","text":"<pre><code>features: Features\n</code></pre>"},{"location":"api/types/#fr24.types.json.Authentication.userData","title":"userData  <code>instance-attribute</code>","text":"<pre><code>userData: Required[UserData]\n</code></pre>"},{"location":"api/types/#fr24.types.json.UsernamePassword","title":"UsernamePassword","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>username</code> <code>str</code> <code>password</code> <code>str</code>"},{"location":"api/types/#fr24.types.json.UsernamePassword.username","title":"username  <code>instance-attribute</code>","text":"<pre><code>username: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.UsernamePassword.password","title":"password  <code>instance-attribute</code>","text":"<pre><code>password: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.TokenSubscriptionKey","title":"TokenSubscriptionKey","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>subscriptionKey</code> <code>str</code> <code>token</code> <code>str</code>"},{"location":"api/types/#fr24.types.json.TokenSubscriptionKey.subscriptionKey","title":"subscriptionKey  <code>instance-attribute</code>","text":"<pre><code>subscriptionKey: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.TokenSubscriptionKey.token","title":"token  <code>instance-attribute</code>","text":"<pre><code>token: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.APIResult","title":"APIResult","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>copyright</code> <code>str</code> <code>legalNotice</code> <code>str</code>"},{"location":"api/types/#fr24.types.json.APIResult.copyright","title":"copyright  <code>instance-attribute</code>","text":"<pre><code>copyright: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.APIResult.legalNotice","title":"legalNotice  <code>instance-attribute</code>","text":"<pre><code>legalNotice: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightNumber","title":"FlightNumber","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>default</code> <code>str | None</code> <code>alternative</code> <code>NotRequired[str | None]</code>"},{"location":"api/types/#fr24.types.json.FlightNumber.default","title":"default  <code>instance-attribute</code>","text":"<pre><code>default: str | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightNumber.alternative","title":"alternative  <code>instance-attribute</code>","text":"<pre><code>alternative: NotRequired[str | None]\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftModel","title":"AircraftModel","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>code</code> <code>str</code> <code>text</code> <code>None | str</code>"},{"location":"api/types/#fr24.types.json.AircraftModel.code","title":"code  <code>instance-attribute</code>","text":"<pre><code>code: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftModel.text","title":"text  <code>instance-attribute</code>","text":"<pre><code>text: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftAge","title":"AircraftAge","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>availability</code> <code>bool</code> <code>date</code> <code>NotRequired[str]</code>"},{"location":"api/types/#fr24.types.json.AircraftAge.availability","title":"availability  <code>instance-attribute</code>","text":"<pre><code>availability: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftAge.date","title":"date  <code>instance-attribute</code>","text":"<pre><code>date: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftAvailability","title":"AircraftAvailability","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>serialNo</code> <code>bool</code> <code>age</code> <code>bool</code>"},{"location":"api/types/#fr24.types.json.AircraftAvailability.serialNo","title":"serialNo  <code>instance-attribute</code>","text":"<pre><code>serialNo: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftAvailability.age","title":"age  <code>instance-attribute</code>","text":"<pre><code>age: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatusData","title":"StatusData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>live</code> <code>bool | None</code> <code>text</code> <code>str | None</code> <code>icon</code> <code>str | None</code> <code>estimated</code> <code>None</code> <code>ambiguous</code> <code>bool</code> <code>generic</code> <code>_StatusGeneric</code>"},{"location":"api/types/#fr24.types.json.StatusData.live","title":"live  <code>instance-attribute</code>","text":"<pre><code>live: bool | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatusData.text","title":"text  <code>instance-attribute</code>","text":"<pre><code>text: str | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatusData.icon","title":"icon  <code>instance-attribute</code>","text":"<pre><code>icon: str | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatusData.estimated","title":"estimated  <code>instance-attribute</code>","text":"<pre><code>estimated: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatusData.ambiguous","title":"ambiguous  <code>instance-attribute</code>","text":"<pre><code>ambiguous: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatusData.generic","title":"generic  <code>instance-attribute</code>","text":"<pre><code>generic: _StatusGeneric\n</code></pre>"},{"location":"api/types/#fr24.types.json.OwnerData","title":"OwnerData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <code>code</code> <code>_Iata_Icao</code>"},{"location":"api/types/#fr24.types.json.OwnerData.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.OwnerData.code","title":"code  <code>instance-attribute</code>","text":"<pre><code>code: _Iata_Icao\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirlineData","title":"AirlineData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <code>code</code> <code>_Iata_Icao</code> <code>short</code> <code>str</code>"},{"location":"api/types/#fr24.types.json.AirlineData.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirlineData.code","title":"code  <code>instance-attribute</code>","text":"<pre><code>code: _Iata_Icao\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirlineData.short","title":"short  <code>instance-attribute</code>","text":"<pre><code>short: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.CommonAirport","title":"CommonAirport","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <code>code</code> <code>_AirportCode</code> <code>position</code> <code>_AirportPosition</code> <code>timezone</code> <code>_Timezone</code> <code>visible</code> <code>NotRequired[bool]</code>"},{"location":"api/types/#fr24.types.json.CommonAirport.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.CommonAirport.code","title":"code  <code>instance-attribute</code>","text":"<pre><code>code: _AirportCode\n</code></pre>"},{"location":"api/types/#fr24.types.json.CommonAirport.position","title":"position  <code>instance-attribute</code>","text":"<pre><code>position: _AirportPosition\n</code></pre>"},{"location":"api/types/#fr24.types.json.CommonAirport.timezone","title":"timezone  <code>instance-attribute</code>","text":"<pre><code>timezone: _Timezone\n</code></pre>"},{"location":"api/types/#fr24.types.json.CommonAirport.visible","title":"visible  <code>instance-attribute</code>","text":"<pre><code>visible: NotRequired[bool]\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportPairData","title":"AirportPairData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>origin</code> <code>None | CommonAirport</code> <code>destination</code> <code>None | CommonAirport</code> <code>real</code> <code>None | CommonAirport</code> <p>Destination airport for diverted</p>"},{"location":"api/types/#fr24.types.json.AirportPairData.origin","title":"origin  <code>instance-attribute</code>","text":"<pre><code>origin: None | CommonAirport\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportPairData.destination","title":"destination  <code>instance-attribute</code>","text":"<pre><code>destination: None | CommonAirport\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportPairData.real","title":"real  <code>instance-attribute</code>","text":"<pre><code>real: None | CommonAirport\n</code></pre> <p>Destination airport for diverted</p>"},{"location":"api/types/#fr24.types.json.ImageCollection","title":"ImageCollection","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>large</code> <code>list[_Image]</code> <code>medium</code> <code>list[_Image]</code> <code>thumbnails</code> <code>list[_Image]</code>"},{"location":"api/types/#fr24.types.json.ImageCollection.large","title":"large  <code>instance-attribute</code>","text":"<pre><code>large: list[_Image]\n</code></pre>"},{"location":"api/types/#fr24.types.json.ImageCollection.medium","title":"medium  <code>instance-attribute</code>","text":"<pre><code>medium: list[_Image]\n</code></pre>"},{"location":"api/types/#fr24.types.json.ImageCollection.thumbnails","title":"thumbnails  <code>instance-attribute</code>","text":"<pre><code>thumbnails: list[_Image]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest","title":"FlightListRequest","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>callback</code> <code>None</code> <code>device</code> <code>None | str</code> <code>fetchBy</code> <code>Required[str]</code> <code>filterBy</code> <code>str | None</code> <code>format</code> <code>Literal['json']</code> <code>limit</code> <code>Required[int]</code> <code>olderThenFlightId</code> <code>None</code> <code>page</code> <code>int</code> <code>pk</code> <code>None</code> <code>query</code> <code>Required[str]</code> <code>timestamp</code> <code>IntTimestampS</code> <code>token</code> <code>None | str</code>"},{"location":"api/types/#fr24.types.json.FlightListRequest.callback","title":"callback  <code>instance-attribute</code>","text":"<pre><code>callback: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.device","title":"device  <code>instance-attribute</code>","text":"<pre><code>device: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.fetchBy","title":"fetchBy  <code>instance-attribute</code>","text":"<pre><code>fetchBy: Required[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.filterBy","title":"filterBy  <code>instance-attribute</code>","text":"<pre><code>filterBy: str | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.format","title":"format  <code>instance-attribute</code>","text":"<pre><code>format: Literal['json']\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.limit","title":"limit  <code>instance-attribute</code>","text":"<pre><code>limit: Required[int]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.olderThenFlightId","title":"olderThenFlightId  <code>instance-attribute</code>","text":"<pre><code>olderThenFlightId: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.page","title":"page  <code>instance-attribute</code>","text":"<pre><code>page: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.pk","title":"pk  <code>instance-attribute</code>","text":"<pre><code>pk: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.query","title":"query  <code>instance-attribute</code>","text":"<pre><code>query: Required[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListRequest.token","title":"token  <code>instance-attribute</code>","text":"<pre><code>token: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Item","title":"Item","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>current</code> <code>int</code> <code>total</code> <code>None | int</code> <code>limit</code> <code>int</code>"},{"location":"api/types/#fr24.types.json.Item.current","title":"current  <code>instance-attribute</code>","text":"<pre><code>current: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Item.total","title":"total  <code>instance-attribute</code>","text":"<pre><code>total: None | int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Item.limit","title":"limit  <code>instance-attribute</code>","text":"<pre><code>limit: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Page","title":"Page","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>current</code> <code>int</code> <code>more</code> <code>bool</code> <code>total</code> <code>None | int</code>"},{"location":"api/types/#fr24.types.json.Page.current","title":"current  <code>instance-attribute</code>","text":"<pre><code>current: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Page.more","title":"more  <code>instance-attribute</code>","text":"<pre><code>more: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.Page.total","title":"total  <code>instance-attribute</code>","text":"<pre><code>total: None | int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Identification","title":"Identification","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str | None</code> <p>icao hex</p> <code>row</code> <code>int</code> <p>internal row id</p> <code>number</code> <code>FlightNumber</code> <code>callsign</code> <code>str | None</code> <code>codeshare</code> <code>None</code>"},{"location":"api/types/#fr24.types.json.Identification.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: str | None\n</code></pre> <p>icao hex</p>"},{"location":"api/types/#fr24.types.json.Identification.row","title":"row  <code>instance-attribute</code>","text":"<pre><code>row: int\n</code></pre> <p>internal row id</p>"},{"location":"api/types/#fr24.types.json.Identification.number","title":"number  <code>instance-attribute</code>","text":"<pre><code>number: FlightNumber\n</code></pre>"},{"location":"api/types/#fr24.types.json.Identification.callsign","title":"callsign  <code>instance-attribute</code>","text":"<pre><code>callsign: str | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.Identification.codeshare","title":"codeshare  <code>instance-attribute</code>","text":"<pre><code>codeshare: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListCountry","title":"FlightListCountry","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int | None</code> <code>name</code> <code>str | None</code> <code>alpha2</code> <code>str | None</code> <code>alpha3</code> <code>str | None</code>"},{"location":"api/types/#fr24.types.json.FlightListCountry.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListCountry.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListCountry.alpha2","title":"alpha2  <code>instance-attribute</code>","text":"<pre><code>alpha2: str | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListCountry.alpha3","title":"alpha3  <code>instance-attribute</code>","text":"<pre><code>alpha3: str | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftInfo","title":"AircraftInfo","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>model</code> <code>AircraftModel</code> <code>registration</code> <code>None | str</code> <code>owner</code> <code>NotRequired[OwnerData]</code> <code>airline</code> <code>NotRequired[AirlineData]</code> <code>country</code> <code>None | FlightListCountry</code> <code>hex</code> <code>None | str</code> <code>restricted</code> <code>bool</code> <code>serialNo</code> <code>None | str</code> <code>age</code> <code>AircraftAge</code> <code>availability</code> <code>AircraftAvailability</code>"},{"location":"api/types/#fr24.types.json.AircraftInfo.model","title":"model  <code>instance-attribute</code>","text":"<pre><code>model: AircraftModel\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftInfo.registration","title":"registration  <code>instance-attribute</code>","text":"<pre><code>registration: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftInfo.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: NotRequired[OwnerData]\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftInfo.airline","title":"airline  <code>instance-attribute</code>","text":"<pre><code>airline: NotRequired[AirlineData]\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftInfo.country","title":"country  <code>instance-attribute</code>","text":"<pre><code>country: None | FlightListCountry\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftInfo.hex","title":"hex  <code>instance-attribute</code>","text":"<pre><code>hex: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftInfo.restricted","title":"restricted  <code>instance-attribute</code>","text":"<pre><code>restricted: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftInfo.serialNo","title":"serialNo  <code>instance-attribute</code>","text":"<pre><code>serialNo: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftInfo.age","title":"age  <code>instance-attribute</code>","text":"<pre><code>age: AircraftAge\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftInfo.availability","title":"availability  <code>instance-attribute</code>","text":"<pre><code>availability: AircraftAvailability\n</code></pre>"},{"location":"api/types/#fr24.types.json.Interval","title":"Interval","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>departure</code> <code>None | IntTimestampS</code> <code>arrival</code> <code>None | IntTimestampS</code>"},{"location":"api/types/#fr24.types.json.Interval.departure","title":"departure  <code>instance-attribute</code>","text":"<pre><code>departure: None | IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.Interval.arrival","title":"arrival  <code>instance-attribute</code>","text":"<pre><code>arrival: None | IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.TimeOther","title":"TimeOther","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>eta</code> <code>None | IntTimestampS</code> <code>updated</code> <code>None | IntTimestampS</code> <code>duration</code> <code>None | int</code>"},{"location":"api/types/#fr24.types.json.TimeOther.eta","title":"eta  <code>instance-attribute</code>","text":"<pre><code>eta: None | IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.TimeOther.updated","title":"updated  <code>instance-attribute</code>","text":"<pre><code>updated: None | IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.TimeOther.duration","title":"duration  <code>instance-attribute</code>","text":"<pre><code>duration: None | int\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListTime","title":"FlightListTime","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>scheduled</code> <code>Interval</code> <code>real</code> <code>Interval</code> <code>estimated</code> <code>Interval</code> <code>other</code> <code>TimeOther</code>"},{"location":"api/types/#fr24.types.json.FlightListTime.scheduled","title":"scheduled  <code>instance-attribute</code>","text":"<pre><code>scheduled: Interval\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListTime.real","title":"real  <code>instance-attribute</code>","text":"<pre><code>real: Interval\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListTime.estimated","title":"estimated  <code>instance-attribute</code>","text":"<pre><code>estimated: Interval\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListTime.other","title":"other  <code>instance-attribute</code>","text":"<pre><code>other: TimeOther\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListItem","title":"FlightListItem","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>identification</code> <code>Identification</code> <code>status</code> <code>StatusData</code> <code>aircraft</code> <code>AircraftInfo</code> <code>owner</code> <code>OwnerData</code> <code>airline</code> <code>AirlineData</code> <code>airport</code> <code>AirportPairData</code> <code>time</code> <code>FlightListTime</code>"},{"location":"api/types/#fr24.types.json.FlightListItem.identification","title":"identification  <code>instance-attribute</code>","text":"<pre><code>identification: Identification\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListItem.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: StatusData\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListItem.aircraft","title":"aircraft  <code>instance-attribute</code>","text":"<pre><code>aircraft: AircraftInfo\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListItem.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: OwnerData\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListItem.airline","title":"airline  <code>instance-attribute</code>","text":"<pre><code>airline: AirlineData\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListItem.airport","title":"airport  <code>instance-attribute</code>","text":"<pre><code>airport: AirportPairData\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListItem.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: FlightListTime\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftImage","title":"AircraftImage","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>registration</code> <code>str</code> <code>images</code> <code>ImageCollection</code>"},{"location":"api/types/#fr24.types.json.AircraftImage.registration","title":"registration  <code>instance-attribute</code>","text":"<pre><code>registration: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftImage.images","title":"images  <code>instance-attribute</code>","text":"<pre><code>images: ImageCollection\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListResponse","title":"FlightListResponse","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>item</code> <code>Item</code> <code>page</code> <code>Page</code> <code>timestamp</code> <code>IntTimestampS</code> <code>data</code> <code>list[FlightListItem] | None</code> <code>aircraftInfo</code> <code>AircraftInfo</code> <code>aircraftImages</code> <code>list[AircraftImage]</code>"},{"location":"api/types/#fr24.types.json.FlightListResponse.item","title":"item  <code>instance-attribute</code>","text":"<pre><code>item: Item\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListResponse.page","title":"page  <code>instance-attribute</code>","text":"<pre><code>page: Page\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListResponse.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[FlightListItem] | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListResponse.aircraftInfo","title":"aircraftInfo  <code>instance-attribute</code>","text":"<pre><code>aircraftInfo: AircraftInfo\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListResponse.aircraftImages","title":"aircraftImages  <code>instance-attribute</code>","text":"<pre><code>aircraftImages: list[AircraftImage]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListResult","title":"FlightListResult","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>request</code> <code>FlightListRequest</code> <code>response</code> <code>FlightListResponse</code>"},{"location":"api/types/#fr24.types.json.FlightListResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: FlightListRequest\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightListResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: FlightListResponse\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightList","title":"FlightList","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>result</code> <code>FlightListResult</code>"},{"location":"api/types/#fr24.types.json.FlightList.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: FlightListResult\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackRequest","title":"PlaybackRequest","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>callback</code> <code>None</code> <code>device</code> <code>None | str</code> <code>flightId</code> <code>Required[StrFlightIdHex]</code> <code>format</code> <code>Literal['json']</code> <code>pk</code> <code>None</code> <code>timestamp</code> <code>IntTimestampS | None</code> <code>token</code> <code>None | str</code>"},{"location":"api/types/#fr24.types.json.PlaybackRequest.callback","title":"callback  <code>instance-attribute</code>","text":"<pre><code>callback: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackRequest.device","title":"device  <code>instance-attribute</code>","text":"<pre><code>device: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackRequest.flightId","title":"flightId  <code>instance-attribute</code>","text":"<pre><code>flightId: Required[StrFlightIdHex]\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackRequest.format","title":"format  <code>instance-attribute</code>","text":"<pre><code>format: Literal['json']\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackRequest.pk","title":"pk  <code>instance-attribute</code>","text":"<pre><code>pk: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackRequest.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackRequest.token","title":"token  <code>instance-attribute</code>","text":"<pre><code>token: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightIdentification","title":"FlightIdentification","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>StrFlightIdHex | int</code> <code>number</code> <code>FlightNumber</code> <code>callsign</code> <code>str</code>"},{"location":"api/types/#fr24.types.json.FlightIdentification.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: StrFlightIdHex | int\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightIdentification.number","title":"number  <code>instance-attribute</code>","text":"<pre><code>number: FlightNumber\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightIdentification.callsign","title":"callsign  <code>instance-attribute</code>","text":"<pre><code>callsign: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftIdentification","title":"AircraftIdentification","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>modes</code> <code>str</code> <code>registration</code> <code>str</code> <code>serialNo</code> <code>None | str</code> <code>age</code> <code>NotRequired[AircraftAge]</code> <code>availability</code> <code>NotRequired[AircraftAvailability]</code>"},{"location":"api/types/#fr24.types.json.AircraftIdentification.modes","title":"modes  <code>instance-attribute</code>","text":"<pre><code>modes: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftIdentification.registration","title":"registration  <code>instance-attribute</code>","text":"<pre><code>registration: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftIdentification.serialNo","title":"serialNo  <code>instance-attribute</code>","text":"<pre><code>serialNo: None | str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftIdentification.age","title":"age  <code>instance-attribute</code>","text":"<pre><code>age: NotRequired[AircraftAge]\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftIdentification.availability","title":"availability  <code>instance-attribute</code>","text":"<pre><code>availability: NotRequired[AircraftAvailability]\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftData","title":"AircraftData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>model</code> <code>AircraftModel</code> <code>identification</code> <code>AircraftIdentification</code> <code>availability</code> <code>AircraftAvailability</code>"},{"location":"api/types/#fr24.types.json.AircraftData.model","title":"model  <code>instance-attribute</code>","text":"<pre><code>model: AircraftModel\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftData.identification","title":"identification  <code>instance-attribute</code>","text":"<pre><code>identification: AircraftIdentification\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftData.availability","title":"availability  <code>instance-attribute</code>","text":"<pre><code>availability: AircraftAvailability\n</code></pre>"},{"location":"api/types/#fr24.types.json.Median","title":"Median","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>time</code> <code>int | None</code> <code>delay</code> <code>int | None</code> <code>timestamp</code> <code>IntTimestampS | None</code>"},{"location":"api/types/#fr24.types.json.Median.time","title":"time  <code>instance-attribute</code>","text":"<pre><code>time: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.Median.delay","title":"delay  <code>instance-attribute</code>","text":"<pre><code>delay: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.Median.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.Altitude","title":"Altitude","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>feet</code> <code>int</code> <code>meters</code> <code>int</code>"},{"location":"api/types/#fr24.types.json.Altitude.feet","title":"feet  <code>instance-attribute</code>","text":"<pre><code>feet: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Altitude.meters","title":"meters  <code>instance-attribute</code>","text":"<pre><code>meters: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Speed","title":"Speed","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>kmh</code> <code>float</code> <code>kts</code> <code>int</code> <code>mph</code> <code>float</code>"},{"location":"api/types/#fr24.types.json.Speed.kmh","title":"kmh  <code>instance-attribute</code>","text":"<pre><code>kmh: float\n</code></pre>"},{"location":"api/types/#fr24.types.json.Speed.kts","title":"kts  <code>instance-attribute</code>","text":"<pre><code>kts: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Speed.mph","title":"mph  <code>instance-attribute</code>","text":"<pre><code>mph: float\n</code></pre>"},{"location":"api/types/#fr24.types.json.VerticalSpeed","title":"VerticalSpeed","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>fpm</code> <code>int | None</code> <code>ms</code> <code>int | None</code>"},{"location":"api/types/#fr24.types.json.VerticalSpeed.fpm","title":"fpm  <code>instance-attribute</code>","text":"<pre><code>fpm: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.VerticalSpeed.ms","title":"ms  <code>instance-attribute</code>","text":"<pre><code>ms: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS","title":"EMS","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>ts</code> <code>IntTimestampS</code> <code>ias</code> <code>int | None</code> <code>tas</code> <code>int | None</code> <code>mach</code> <code>int | None</code> <code>mcp</code> <code>int | None</code> <code>fms</code> <code>int | None</code> <code>autopilot</code> <code>None</code> <code>oat</code> <code>int | None</code> <code>trueTrack</code> <code>float | None</code> <code>rollAngle</code> <code>float | None</code> <code>qnh</code> <code>None</code> <code>windDir</code> <code>int | None</code> <code>windSpd</code> <code>int | None</code> <code>precision</code> <code>int | None</code> <code>altGPS</code> <code>int | None</code> <code>emergencyStatus</code> <code>int | None</code> <code>tcasAcasDtatus</code> <code>int | None</code> <code>heading</code> <code>int | None</code>"},{"location":"api/types/#fr24.types.json.EMS.ts","title":"ts  <code>instance-attribute</code>","text":"<pre><code>ts: IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.ias","title":"ias  <code>instance-attribute</code>","text":"<pre><code>ias: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.tas","title":"tas  <code>instance-attribute</code>","text":"<pre><code>tas: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.mach","title":"mach  <code>instance-attribute</code>","text":"<pre><code>mach: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.mcp","title":"mcp  <code>instance-attribute</code>","text":"<pre><code>mcp: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.fms","title":"fms  <code>instance-attribute</code>","text":"<pre><code>fms: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.autopilot","title":"autopilot  <code>instance-attribute</code>","text":"<pre><code>autopilot: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.oat","title":"oat  <code>instance-attribute</code>","text":"<pre><code>oat: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.trueTrack","title":"trueTrack  <code>instance-attribute</code>","text":"<pre><code>trueTrack: float | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.rollAngle","title":"rollAngle  <code>instance-attribute</code>","text":"<pre><code>rollAngle: float | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.qnh","title":"qnh  <code>instance-attribute</code>","text":"<pre><code>qnh: None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.windDir","title":"windDir  <code>instance-attribute</code>","text":"<pre><code>windDir: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.windSpd","title":"windSpd  <code>instance-attribute</code>","text":"<pre><code>windSpd: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.precision","title":"precision  <code>instance-attribute</code>","text":"<pre><code>precision: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.altGPS","title":"altGPS  <code>instance-attribute</code>","text":"<pre><code>altGPS: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.emergencyStatus","title":"emergencyStatus  <code>instance-attribute</code>","text":"<pre><code>emergencyStatus: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.tcasAcasDtatus","title":"tcasAcasDtatus  <code>instance-attribute</code>","text":"<pre><code>tcasAcasDtatus: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.EMS.heading","title":"heading  <code>instance-attribute</code>","text":"<pre><code>heading: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.TrackData","title":"TrackData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>latitude</code> <code>float</code> <code>longitude</code> <code>float</code> <code>altitude</code> <code>Altitude</code> <code>speed</code> <code>Speed</code> <code>verticalSpeed</code> <code>VerticalSpeed</code> <code>heading</code> <code>int</code> <p>Warning</p> <code>squawk</code> <code>str</code> <code>timestamp</code> <code>IntTimestampS</code> <code>ems</code> <code>None | EMS</code>"},{"location":"api/types/#fr24.types.json.TrackData.latitude","title":"latitude  <code>instance-attribute</code>","text":"<pre><code>latitude: float\n</code></pre>"},{"location":"api/types/#fr24.types.json.TrackData.longitude","title":"longitude  <code>instance-attribute</code>","text":"<pre><code>longitude: float\n</code></pre>"},{"location":"api/types/#fr24.types.json.TrackData.altitude","title":"altitude  <code>instance-attribute</code>","text":"<pre><code>altitude: Altitude\n</code></pre>"},{"location":"api/types/#fr24.types.json.TrackData.speed","title":"speed  <code>instance-attribute</code>","text":"<pre><code>speed: Speed\n</code></pre>"},{"location":"api/types/#fr24.types.json.TrackData.verticalSpeed","title":"verticalSpeed  <code>instance-attribute</code>","text":"<pre><code>verticalSpeed: VerticalSpeed\n</code></pre>"},{"location":"api/types/#fr24.types.json.TrackData.heading","title":"heading  <code>instance-attribute</code>","text":"<pre><code>heading: int\n</code></pre> <p>Warning</p> <p>The JSON response claims that <code>heading</code> is available, but ADS-B only transmits the ground track. Heading is only available in EMS data.</p> <p>This field is renamed to <code>track</code> to avoid confusion in fr24.json.playback_track_dict.</p>"},{"location":"api/types/#fr24.types.json.TrackData.squawk","title":"squawk  <code>instance-attribute</code>","text":"<pre><code>squawk: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.TrackData.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.TrackData.ems","title":"ems  <code>instance-attribute</code>","text":"<pre><code>ems: None | EMS\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightDataAvailability","title":"FlightDataAvailability","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>ems</code> <code>bool</code>"},{"location":"api/types/#fr24.types.json.FlightDataAvailability.ems","title":"ems  <code>instance-attribute</code>","text":"<pre><code>ems: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightData","title":"FlightData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>identification</code> <code>FlightIdentification</code> <code>status</code> <code>StatusData</code> <code>aircraft</code> <code>AircraftData | None</code> <code>owner</code> <code>OwnerData | None</code> <code>airline</code> <code>AirlineData | None</code> <code>airport</code> <code>AirportPairData</code> <code>median</code> <code>Median</code> <code>track</code> <code>list[TrackData]</code> <code>aircraftImages</code> <code>ImageCollection</code> <code>availability</code> <code>FlightDataAvailability</code>"},{"location":"api/types/#fr24.types.json.FlightData.identification","title":"identification  <code>instance-attribute</code>","text":"<pre><code>identification: FlightIdentification\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightData.status","title":"status  <code>instance-attribute</code>","text":"<pre><code>status: StatusData\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightData.aircraft","title":"aircraft  <code>instance-attribute</code>","text":"<pre><code>aircraft: AircraftData | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightData.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: OwnerData | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightData.airline","title":"airline  <code>instance-attribute</code>","text":"<pre><code>airline: AirlineData | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightData.airport","title":"airport  <code>instance-attribute</code>","text":"<pre><code>airport: AirportPairData\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightData.median","title":"median  <code>instance-attribute</code>","text":"<pre><code>median: Median\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightData.track","title":"track  <code>instance-attribute</code>","text":"<pre><code>track: list[TrackData]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightData.aircraftImages","title":"aircraftImages  <code>instance-attribute</code>","text":"<pre><code>aircraftImages: ImageCollection\n</code></pre>"},{"location":"api/types/#fr24.types.json.FlightData.availability","title":"availability  <code>instance-attribute</code>","text":"<pre><code>availability: FlightDataAvailability\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackData","title":"PlaybackData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>flight</code> <code>FlightData</code>"},{"location":"api/types/#fr24.types.json.PlaybackData.flight","title":"flight  <code>instance-attribute</code>","text":"<pre><code>flight: FlightData\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackResponse","title":"PlaybackResponse","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>IntTimestampS</code> <code>altitudeFiltered</code> <code>bool</code> <code>data</code> <code>PlaybackData</code>"},{"location":"api/types/#fr24.types.json.PlaybackResponse.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackResponse.altitudeFiltered","title":"altitudeFiltered  <code>instance-attribute</code>","text":"<pre><code>altitudeFiltered: bool\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackResponse.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: PlaybackData\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackResult","title":"PlaybackResult","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>request</code> <code>PlaybackRequest</code> <code>response</code> <code>PlaybackResponse</code>"},{"location":"api/types/#fr24.types.json.PlaybackResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: PlaybackRequest\n</code></pre>"},{"location":"api/types/#fr24.types.json.PlaybackResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: PlaybackResponse\n</code></pre>"},{"location":"api/types/#fr24.types.json.Playback","title":"Playback","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>result</code> <code>PlaybackResult</code>"},{"location":"api/types/#fr24.types.json.Playback.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: PlaybackResult\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportListScheduleSetting","title":"AirportListScheduleSetting","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>mode</code> <code>Literal['departures', 'arrivals'] | None</code> <code>timestamp</code> <code>IntTimestampS</code>"},{"location":"api/types/#fr24.types.json.AirportListScheduleSetting.mode","title":"mode  <code>instance-attribute</code>","text":"<pre><code>mode: Literal['departures', 'arrivals'] | None\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportListScheduleSetting.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.json.PluginSetting","title":"PluginSetting","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>schedule</code> <code>AirportListScheduleSetting</code>"},{"location":"api/types/#fr24.types.json.PluginSetting.schedule","title":"schedule  <code>instance-attribute</code>","text":"<pre><code>schedule: AirportListScheduleSetting\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportSchedule","title":"AirportSchedule","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>arrivals</code> <code>FlightListResponse</code> <code>departures</code> <code>FlightListResponse</code>"},{"location":"api/types/#fr24.types.json.AirportSchedule.arrivals","title":"arrivals  <code>instance-attribute</code>","text":"<pre><code>arrivals: FlightListResponse\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportSchedule.departures","title":"departures  <code>instance-attribute</code>","text":"<pre><code>departures: FlightListResponse\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportPluginData","title":"AirportPluginData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>schedule</code> <code>AirportSchedule</code>"},{"location":"api/types/#fr24.types.json.AirportPluginData.schedule","title":"schedule  <code>instance-attribute</code>","text":"<pre><code>schedule: AirportSchedule\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportListData","title":"AirportListData","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>pluginData</code> <code>AirportPluginData</code>"},{"location":"api/types/#fr24.types.json.AirportListData.pluginData","title":"pluginData  <code>instance-attribute</code>","text":"<pre><code>pluginData: AirportPluginData\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportResponse","title":"AirportResponse","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>airport</code> <code>AirportListData</code>"},{"location":"api/types/#fr24.types.json.AirportResponse.airport","title":"airport  <code>instance-attribute</code>","text":"<pre><code>airport: AirportListData\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportResult","title":"AirportResult","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>request</code> <code>AirportRequest</code> <code>response</code> <code>AirportResponse</code>"},{"location":"api/types/#fr24.types.json.AirportResult.request","title":"request  <code>instance-attribute</code>","text":"<pre><code>request: AirportRequest\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportResult.response","title":"response  <code>instance-attribute</code>","text":"<pre><code>response: AirportResponse\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportList","title":"AirportList","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>result</code> <code>AirportResult</code>"},{"location":"api/types/#fr24.types.json.AirportList.result","title":"result  <code>instance-attribute</code>","text":"<pre><code>result: AirportResult\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live","title":"Live","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>operator_id</code> <code>NotRequired[int]</code> <code>lat</code> <code>float</code> <code>lon</code> <code>float</code> <code>schd_from</code> <code>str</code> <code>schd_to</code> <code>NotRequired[str]</code> <code>ac_type</code> <code>str</code> <code>route</code> <code>str</code> <code>logo</code> <code>NotRequired[str]</code> <code>reg</code> <code>str</code> <code>callsign</code> <code>NotRequired[str]</code> <code>flight</code> <code>NotRequired[str]</code> <code>operator</code> <code>NotRequired[str]</code>"},{"location":"api/types/#fr24.types.json.Live.operator_id","title":"operator_id  <code>instance-attribute</code>","text":"<pre><code>operator_id: NotRequired[int]\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.lat","title":"lat  <code>instance-attribute</code>","text":"<pre><code>lat: float\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.lon","title":"lon  <code>instance-attribute</code>","text":"<pre><code>lon: float\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.schd_from","title":"schd_from  <code>instance-attribute</code>","text":"<pre><code>schd_from: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.schd_to","title":"schd_to  <code>instance-attribute</code>","text":"<pre><code>schd_to: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.ac_type","title":"ac_type  <code>instance-attribute</code>","text":"<pre><code>ac_type: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.route","title":"route  <code>instance-attribute</code>","text":"<pre><code>route: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.logo","title":"logo  <code>instance-attribute</code>","text":"<pre><code>logo: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.reg","title":"reg  <code>instance-attribute</code>","text":"<pre><code>reg: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.callsign","title":"callsign  <code>instance-attribute</code>","text":"<pre><code>callsign: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.flight","title":"flight  <code>instance-attribute</code>","text":"<pre><code>flight: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.Live.operator","title":"operator  <code>instance-attribute</code>","text":"<pre><code>operator: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FindAirportDetail","title":"FindAirportDetail","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>lat</code> <code>float</code> <code>lon</code> <code>float</code> <code>size</code> <code>float</code>"},{"location":"api/types/#fr24.types.json.FindAirportDetail.lat","title":"lat  <code>instance-attribute</code>","text":"<pre><code>lat: float\n</code></pre>"},{"location":"api/types/#fr24.types.json.FindAirportDetail.lon","title":"lon  <code>instance-attribute</code>","text":"<pre><code>lon: float\n</code></pre>"},{"location":"api/types/#fr24.types.json.FindAirportDetail.size","title":"size  <code>instance-attribute</code>","text":"<pre><code>size: float\n</code></pre>"},{"location":"api/types/#fr24.types.json.Operator","title":"Operator","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>operator_id</code> <code>int</code> <code>iata</code> <code>NotRequired[str]</code> <code>logo</code> <code>NotRequired[str]</code>"},{"location":"api/types/#fr24.types.json.Operator.operator_id","title":"operator_id  <code>instance-attribute</code>","text":"<pre><code>operator_id: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Operator.iata","title":"iata  <code>instance-attribute</code>","text":"<pre><code>iata: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.Operator.logo","title":"logo  <code>instance-attribute</code>","text":"<pre><code>logo: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FindScheduleDetail","title":"FindScheduleDetail","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>logo</code> <code>NotRequired[str]</code> <code>callsign</code> <code>NotRequired[str]</code> <code>flight</code> <code>str</code> <code>operator</code> <code>NotRequired[str]</code> <code>operator_id</code> <code>NotRequired[int]</code> <code>schd_from</code> <code>NotRequired[str]</code> <code>schd_to</code> <code>NotRequired[str]</code>"},{"location":"api/types/#fr24.types.json.FindScheduleDetail.logo","title":"logo  <code>instance-attribute</code>","text":"<pre><code>logo: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FindScheduleDetail.callsign","title":"callsign  <code>instance-attribute</code>","text":"<pre><code>callsign: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FindScheduleDetail.flight","title":"flight  <code>instance-attribute</code>","text":"<pre><code>flight: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.FindScheduleDetail.operator","title":"operator  <code>instance-attribute</code>","text":"<pre><code>operator: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FindScheduleDetail.operator_id","title":"operator_id  <code>instance-attribute</code>","text":"<pre><code>operator_id: NotRequired[int]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FindScheduleDetail.schd_from","title":"schd_from  <code>instance-attribute</code>","text":"<pre><code>schd_from: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.FindScheduleDetail.schd_to","title":"schd_to  <code>instance-attribute</code>","text":"<pre><code>schd_to: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.Aircraft","title":"Aircraft","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>owner</code> <code>str</code> <code>equip</code> <code>str</code> <code>hex</code> <code>str</code> <code>operator_id</code> <code>int</code> <code>logo</code> <code>str</code>"},{"location":"api/types/#fr24.types.json.Aircraft.owner","title":"owner  <code>instance-attribute</code>","text":"<pre><code>owner: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Aircraft.equip","title":"equip  <code>instance-attribute</code>","text":"<pre><code>equip: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Aircraft.hex","title":"hex  <code>instance-attribute</code>","text":"<pre><code>hex: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.Aircraft.operator_id","title":"operator_id  <code>instance-attribute</code>","text":"<pre><code>operator_id: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Aircraft.logo","title":"logo  <code>instance-attribute</code>","text":"<pre><code>logo: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.EntryBase","title":"EntryBase","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>label</code> <code>str</code> <code>name</code> <code>NotRequired[str]</code>"},{"location":"api/types/#fr24.types.json.EntryBase.label","title":"label  <code>instance-attribute</code>","text":"<pre><code>label: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.EntryBase.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportEntry","title":"AirportEntry","text":"<p>               Bases: <code>EntryBase</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>Iata | Icao</code> <code>detail</code> <code>FindAirportDetail</code> <code>type</code> <code>Literal['airport']</code> <code>match</code> <code>Literal['icao', 'iata', 'begins', 'contains']</code> <code>label</code> <code>str</code> <code>name</code> <code>NotRequired[str]</code>"},{"location":"api/types/#fr24.types.json.AirportEntry.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: Iata | Icao\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportEntry.detail","title":"detail  <code>instance-attribute</code>","text":"<pre><code>detail: FindAirportDetail\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportEntry.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: Literal['airport']\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportEntry.match","title":"match  <code>instance-attribute</code>","text":"<pre><code>match: Literal['icao', 'iata', 'begins', 'contains']\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportEntry.label","title":"label  <code>instance-attribute</code>","text":"<pre><code>label: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AirportEntry.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.OperatorEntry","title":"OperatorEntry","text":"<p>               Bases: <code>EntryBase</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <code>detail</code> <code>Operator</code> <code>type</code> <code>Literal['operator']</code> <code>match</code> <code>Literal['begins', 'icao']</code> <code>label</code> <code>str</code> <code>name</code> <code>NotRequired[str]</code>"},{"location":"api/types/#fr24.types.json.OperatorEntry.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.OperatorEntry.detail","title":"detail  <code>instance-attribute</code>","text":"<pre><code>detail: Operator\n</code></pre>"},{"location":"api/types/#fr24.types.json.OperatorEntry.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: Literal['operator']\n</code></pre>"},{"location":"api/types/#fr24.types.json.OperatorEntry.match","title":"match  <code>instance-attribute</code>","text":"<pre><code>match: Literal['begins', 'icao']\n</code></pre>"},{"location":"api/types/#fr24.types.json.OperatorEntry.label","title":"label  <code>instance-attribute</code>","text":"<pre><code>label: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.OperatorEntry.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.LiveEntry","title":"LiveEntry","text":"<p>               Bases: <code>EntryBase</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <code>detail</code> <code>Live</code> <code>type</code> <code>Literal['live']</code> <code>match</code> <code>Literal['route', 'begins']</code> <code>label</code> <code>str</code> <code>name</code> <code>NotRequired[str]</code>"},{"location":"api/types/#fr24.types.json.LiveEntry.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.LiveEntry.detail","title":"detail  <code>instance-attribute</code>","text":"<pre><code>detail: Live\n</code></pre>"},{"location":"api/types/#fr24.types.json.LiveEntry.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: Literal['live']\n</code></pre>"},{"location":"api/types/#fr24.types.json.LiveEntry.match","title":"match  <code>instance-attribute</code>","text":"<pre><code>match: Literal['route', 'begins']\n</code></pre>"},{"location":"api/types/#fr24.types.json.LiveEntry.label","title":"label  <code>instance-attribute</code>","text":"<pre><code>label: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.LiveEntry.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.ScheduleEntry","title":"ScheduleEntry","text":"<p>               Bases: <code>EntryBase</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <code>detail</code> <code>FindScheduleDetail</code> <code>type</code> <code>Literal['schedule']</code> <code>match</code> <code>Literal['route', 'begins']</code> <code>label</code> <code>str</code> <code>name</code> <code>NotRequired[str]</code>"},{"location":"api/types/#fr24.types.json.ScheduleEntry.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.ScheduleEntry.detail","title":"detail  <code>instance-attribute</code>","text":"<pre><code>detail: FindScheduleDetail\n</code></pre>"},{"location":"api/types/#fr24.types.json.ScheduleEntry.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: Literal['schedule']\n</code></pre>"},{"location":"api/types/#fr24.types.json.ScheduleEntry.match","title":"match  <code>instance-attribute</code>","text":"<pre><code>match: Literal['route', 'begins']\n</code></pre>"},{"location":"api/types/#fr24.types.json.ScheduleEntry.label","title":"label  <code>instance-attribute</code>","text":"<pre><code>label: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.ScheduleEntry.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftEntry","title":"AircraftEntry","text":"<p>               Bases: <code>EntryBase</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>str</code> <code>detail</code> <code>Aircraft</code> <code>type</code> <code>Literal['aircraft']</code> <code>match</code> <code>Literal['begins']</code> <code>label</code> <code>str</code> <code>name</code> <code>NotRequired[str]</code>"},{"location":"api/types/#fr24.types.json.AircraftEntry.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftEntry.detail","title":"detail  <code>instance-attribute</code>","text":"<pre><code>detail: Aircraft\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftEntry.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: Literal['aircraft']\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftEntry.match","title":"match  <code>instance-attribute</code>","text":"<pre><code>match: Literal['begins']\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftEntry.label","title":"label  <code>instance-attribute</code>","text":"<pre><code>label: str\n</code></pre>"},{"location":"api/types/#fr24.types.json.AircraftEntry.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: NotRequired[str]\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatsEntry","title":"StatsEntry","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>all</code> <code>NotRequired[int]</code> <code>airport</code> <code>int</code> <code>operator</code> <code>int</code> <code>live</code> <code>int</code> <code>schedule</code> <code>int</code> <code>aircraft</code> <code>int</code>"},{"location":"api/types/#fr24.types.json.StatsEntry.all","title":"all  <code>instance-attribute</code>","text":"<pre><code>all: NotRequired[int]\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatsEntry.airport","title":"airport  <code>instance-attribute</code>","text":"<pre><code>airport: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatsEntry.operator","title":"operator  <code>instance-attribute</code>","text":"<pre><code>operator: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatsEntry.live","title":"live  <code>instance-attribute</code>","text":"<pre><code>live: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatsEntry.schedule","title":"schedule  <code>instance-attribute</code>","text":"<pre><code>schedule: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.StatsEntry.aircraft","title":"aircraft  <code>instance-attribute</code>","text":"<pre><code>aircraft: int\n</code></pre>"},{"location":"api/types/#fr24.types.json.Stats","title":"Stats","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>total</code> <code>StatsEntry</code> <code>count</code> <code>StatsEntry</code>"},{"location":"api/types/#fr24.types.json.Stats.total","title":"total  <code>instance-attribute</code>","text":"<pre><code>total: StatsEntry\n</code></pre>"},{"location":"api/types/#fr24.types.json.Stats.count","title":"count  <code>instance-attribute</code>","text":"<pre><code>count: StatsEntry\n</code></pre>"},{"location":"api/types/#fr24.types.json.Find","title":"Find","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>results</code> <code>list[Entry]</code> <code>stats</code> <code>Stats</code>"},{"location":"api/types/#fr24.types.json.Find.results","title":"results  <code>instance-attribute</code>","text":"<pre><code>results: list[Entry]\n</code></pre>"},{"location":"api/types/#fr24.types.json.Find.stats","title":"stats  <code>instance-attribute</code>","text":"<pre><code>stats: Stats\n</code></pre>"},{"location":"api/types/#fr24.types.json.is_airport","title":"is_airport","text":"<pre><code>is_airport(entry: Entry) -&gt; TypeGuard[AirportEntry]\n</code></pre>"},{"location":"api/types/#fr24.types.json.is_operator","title":"is_operator","text":"<pre><code>is_operator(entry: Entry) -&gt; TypeGuard[OperatorEntry]\n</code></pre>"},{"location":"api/types/#fr24.types.json.is_live","title":"is_live","text":"<pre><code>is_live(entry: Entry) -&gt; TypeGuard[LiveEntry]\n</code></pre>"},{"location":"api/types/#fr24.types.json.is_schedule","title":"is_schedule","text":"<pre><code>is_schedule(entry: Entry) -&gt; TypeGuard[ScheduleEntry]\n</code></pre>"},{"location":"api/types/#fr24.types.json.is_aircraft","title":"is_aircraft","text":"<pre><code>is_aircraft(entry: Entry) -&gt; TypeGuard[AircraftEntry]\n</code></pre>"},{"location":"api/types/#fr24.types.static","title":"static","text":"<p>Classes:</p> Name Description <code>Model</code> <code>AircraftFamilyRow</code> <code>AircraftFamily</code> <code>Airline</code> <code>Airlines</code> <code>Timezone</code> <code>Airport</code> <code>Airports</code> <code>CountryName</code> <code>CountryCode</code> <code>Country</code> <code>Metadata</code> <code>Countries</code> <p>Attributes:</p> Name Type Description <code>StaticData</code>"},{"location":"api/types/#fr24.types.static.StaticData","title":"StaticData  <code>module-attribute</code>","text":"<pre><code>StaticData = Union[\n    AircraftFamily, Airlines, Airports, Countries\n]\n</code></pre>"},{"location":"api/types/#fr24.types.static.Model","title":"Model","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>Name</code> <code>str</code> <code>Code</code> <code>str</code>"},{"location":"api/types/#fr24.types.static.Model.Name","title":"Name  <code>instance-attribute</code>","text":"<pre><code>Name: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Model.Code","title":"Code  <code>instance-attribute</code>","text":"<pre><code>Code: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.AircraftFamilyRow","title":"AircraftFamilyRow","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>description</code> <code>str</code> <code>models</code> <code>list[Model]</code>"},{"location":"api/types/#fr24.types.static.AircraftFamilyRow.description","title":"description  <code>instance-attribute</code>","text":"<pre><code>description: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.AircraftFamilyRow.models","title":"models  <code>instance-attribute</code>","text":"<pre><code>models: list[Model]\n</code></pre>"},{"location":"api/types/#fr24.types.static.AircraftFamily","title":"AircraftFamily","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>version</code> <code>int</code> <code>rows</code> <code>list[AircraftFamilyRow]</code>"},{"location":"api/types/#fr24.types.static.AircraftFamily.version","title":"version  <code>instance-attribute</code>","text":"<pre><code>version: int\n</code></pre>"},{"location":"api/types/#fr24.types.static.AircraftFamily.rows","title":"rows  <code>instance-attribute</code>","text":"<pre><code>rows: list[AircraftFamilyRow]\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airline","title":"Airline","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>Name</code> <code>str</code> <code>Code</code> <code>str</code> <code>ICAO</code> <code>str</code>"},{"location":"api/types/#fr24.types.static.Airline.Name","title":"Name  <code>instance-attribute</code>","text":"<pre><code>Name: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airline.Code","title":"Code  <code>instance-attribute</code>","text":"<pre><code>Code: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airline.ICAO","title":"ICAO  <code>instance-attribute</code>","text":"<pre><code>ICAO: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airlines","title":"Airlines","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>version</code> <code>int</code> <code>rows</code> <code>list[Airline]</code>"},{"location":"api/types/#fr24.types.static.Airlines.version","title":"version  <code>instance-attribute</code>","text":"<pre><code>version: int\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airlines.rows","title":"rows  <code>instance-attribute</code>","text":"<pre><code>rows: list[Airline]\n</code></pre>"},{"location":"api/types/#fr24.types.static.Timezone","title":"Timezone","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <code>offset</code> <code>int | None</code> <code>offsetHours</code> <code>str</code> <code>abbr</code> <code>str</code> <code>abbrName</code> <code>str | None</code> <code>isDst</code> <code>bool</code>"},{"location":"api/types/#fr24.types.static.Timezone.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Timezone.offset","title":"offset  <code>instance-attribute</code>","text":"<pre><code>offset: int | None\n</code></pre>"},{"location":"api/types/#fr24.types.static.Timezone.offsetHours","title":"offsetHours  <code>instance-attribute</code>","text":"<pre><code>offsetHours: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Timezone.abbr","title":"abbr  <code>instance-attribute</code>","text":"<pre><code>abbr: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Timezone.abbrName","title":"abbrName  <code>instance-attribute</code>","text":"<pre><code>abbrName: str | None\n</code></pre>"},{"location":"api/types/#fr24.types.static.Timezone.isDst","title":"isDst  <code>instance-attribute</code>","text":"<pre><code>isDst: bool\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport","title":"Airport","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <code>name</code> <code>str</code> <code>iata</code> <code>str</code> <code>icao</code> <code>str</code> <code>city</code> <code>str</code> <code>lat</code> <code>float</code> <code>lon</code> <code>float</code> <code>country</code> <code>str</code> <code>alt</code> <code>int | Literal['-1']</code> <code>size</code> <code>int</code> <code>timezone</code> <code>Timezone</code> <code>countryId</code> <code>int</code>"},{"location":"api/types/#fr24.types.static.Airport.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: int\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.iata","title":"iata  <code>instance-attribute</code>","text":"<pre><code>iata: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.icao","title":"icao  <code>instance-attribute</code>","text":"<pre><code>icao: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.city","title":"city  <code>instance-attribute</code>","text":"<pre><code>city: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.lat","title":"lat  <code>instance-attribute</code>","text":"<pre><code>lat: float\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.lon","title":"lon  <code>instance-attribute</code>","text":"<pre><code>lon: float\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.country","title":"country  <code>instance-attribute</code>","text":"<pre><code>country: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.alt","title":"alt  <code>instance-attribute</code>","text":"<pre><code>alt: int | Literal['-1']\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.size","title":"size  <code>instance-attribute</code>","text":"<pre><code>size: int\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.timezone","title":"timezone  <code>instance-attribute</code>","text":"<pre><code>timezone: Timezone\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airport.countryId","title":"countryId  <code>instance-attribute</code>","text":"<pre><code>countryId: int\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airports","title":"Airports","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>version</code> <code>str</code> <code>rows</code> <code>list[Airport]</code>"},{"location":"api/types/#fr24.types.static.Airports.version","title":"version  <code>instance-attribute</code>","text":"<pre><code>version: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Airports.rows","title":"rows  <code>instance-attribute</code>","text":"<pre><code>rows: list[Airport]\n</code></pre>"},{"location":"api/types/#fr24.types.static.CountryName","title":"CountryName","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>default</code> <code>str</code> <code>full</code> <code>str</code>"},{"location":"api/types/#fr24.types.static.CountryName.default","title":"default  <code>instance-attribute</code>","text":"<pre><code>default: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.CountryName.full","title":"full  <code>instance-attribute</code>","text":"<pre><code>full: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.CountryCode","title":"CountryCode","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>alpha2</code> <code>str</code> <code>alpha3</code> <code>str</code>"},{"location":"api/types/#fr24.types.static.CountryCode.alpha2","title":"alpha2  <code>instance-attribute</code>","text":"<pre><code>alpha2: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.CountryCode.alpha3","title":"alpha3  <code>instance-attribute</code>","text":"<pre><code>alpha3: str\n</code></pre>"},{"location":"api/types/#fr24.types.static.Country","title":"Country","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>id</code> <code>int</code> <code>name</code> <code>CountryName</code> <code>code</code> <code>CountryCode</code>"},{"location":"api/types/#fr24.types.static.Country.id","title":"id  <code>instance-attribute</code>","text":"<pre><code>id: int\n</code></pre>"},{"location":"api/types/#fr24.types.static.Country.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: CountryName\n</code></pre>"},{"location":"api/types/#fr24.types.static.Country.code","title":"code  <code>instance-attribute</code>","text":"<pre><code>code: CountryCode\n</code></pre>"},{"location":"api/types/#fr24.types.static.Metadata","title":"Metadata","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>timestamp</code> <code>IntTimestampS</code> <code>count</code> <code>int</code>"},{"location":"api/types/#fr24.types.static.Metadata.timestamp","title":"timestamp  <code>instance-attribute</code>","text":"<pre><code>timestamp: IntTimestampS\n</code></pre>"},{"location":"api/types/#fr24.types.static.Metadata.count","title":"count  <code>instance-attribute</code>","text":"<pre><code>count: int\n</code></pre>"},{"location":"api/types/#fr24.types.static.Countries","title":"Countries","text":"<p>               Bases: <code>TypedDict</code></p> <p>Attributes:</p> Name Type Description <code>metadata</code> <code>Metadata</code> <code>data</code> <code>list[Country]</code>"},{"location":"api/types/#fr24.types.static.Countries.metadata","title":"metadata  <code>instance-attribute</code>","text":"<pre><code>metadata: Metadata\n</code></pre>"},{"location":"api/types/#fr24.types.static.Countries.data","title":"data  <code>instance-attribute</code>","text":"<pre><code>data: list[Country]\n</code></pre>"},{"location":"api/utils/","title":"Utilities","text":"<p>Mostly used in the service.</p>"},{"location":"api/utils/#fr24.utils","title":"utils","text":"<p>Classes:</p> Name Description <code>BarePath</code> <code>SupportsToDict</code> <code>SupportsToPolars</code> <code>Ok</code> <code>Err</code> <code>UnwrapError</code> <code>ParamDetail</code> <code>SphinxParser</code> <p>A poor man's parser for Sphinx docstrings and its <code>:param:</code> directive.</p> <p>Functions:</p> Name Description <code>dataclass_frozen</code> <code>to_unix_timestamp</code> <p>Casts timestamp-like object to a Unix timestamp in integer seconds.</p> <code>get_current_timestamp</code> <p>Returns the current Unix timestamp in seconds.</p> <code>parse_server_timestamp</code> <code>to_flight_id</code> <code>to_flight_id_hex</code> <p>Converts flight ID to a hex string.</p> <code>format_bare_path</code> <code>write_table</code> <p>Writes the table as the specified format via polars.</p> <code>scan_table</code> <p>Reads the table as the specified format via polars.</p> <code>static_check_signature</code> <p>Marker to signal the static analyser that the decorated method or</p> <p>Attributes:</p> Name Type Description <code>dataclass_opts</code> <code>dict[str, bool]</code> <code>logger</code> <code>DEFAULT_HEADERS</code> <code>FileLike</code> <code>FileExistsBehaviour</code> <code>TypeAlias</code> <code>DictT_co</code> <p>The dictionary representation of an object, e.g. <code>TypedDict</code>.</p> <code>T</code> <code>E</code> <code>Result</code> <code>TypeAlias</code> <p>A type that represents either success (<code>Ok</code>) or failure (<code>Err</code>).</p> <code>M</code>"},{"location":"api/utils/#fr24.utils.dataclass_opts","title":"dataclass_opts  <code>module-attribute</code>","text":"<pre><code>dataclass_opts: dict[str, bool] = {}\n</code></pre>"},{"location":"api/utils/#fr24.utils.logger","title":"logger  <code>module-attribute</code>","text":"<pre><code>logger = getLogger(__name__)\n</code></pre>"},{"location":"api/utils/#fr24.utils.DEFAULT_HEADERS","title":"DEFAULT_HEADERS  <code>module-attribute</code>","text":"<pre><code>DEFAULT_HEADERS = {\n    \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:136.0) Gecko/20100101 Firefox/136.0\",\n    \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\",\n    \"Accept-Language\": \"en-US,en;q=0.5\",\n    \"Accept-Encoding\": \"gzip, deflate, zstd\",\n    \"Origin\": \"https://www.flightradar24.com\",\n    \"Connection\": \"keep-alive\",\n    \"Referer\": \"https://www.flightradar24.com/\",\n    \"Sec-Fetch-Dest\": \"empty\",\n    \"Sec-Fetch-Mode\": \"cors\",\n    \"Sec-Fetch-Site\": \"same-site\",\n    \"TE\": \"trailers\",\n}\n</code></pre>"},{"location":"api/utils/#fr24.utils.FileLike","title":"FileLike  <code>module-attribute</code>","text":"<pre><code>FileLike = Union[str, Path, IO[bytes], BarePath]\n</code></pre>"},{"location":"api/utils/#fr24.utils.FileExistsBehaviour","title":"FileExistsBehaviour  <code>module-attribute</code>","text":"<pre><code>FileExistsBehaviour: TypeAlias = Literal[\n    \"backup\", \"error\", \"overwrite\"\n]\n</code></pre>"},{"location":"api/utils/#fr24.utils.DictT_co","title":"DictT_co  <code>module-attribute</code>","text":"<pre><code>DictT_co = TypeVar('DictT_co', covariant=True)\n</code></pre> <p>The dictionary representation of an object, e.g. <code>TypedDict</code>.</p>"},{"location":"api/utils/#fr24.utils.T","title":"T  <code>module-attribute</code>","text":"<pre><code>T = TypeVar('T')\n</code></pre>"},{"location":"api/utils/#fr24.utils.E","title":"E  <code>module-attribute</code>","text":"<pre><code>E = TypeVar('E')\n</code></pre>"},{"location":"api/utils/#fr24.utils.Result","title":"Result  <code>module-attribute</code>","text":"<pre><code>Result: TypeAlias = Union[Ok[T], Err[E]]\n</code></pre> <p>A type that represents either success (<code>Ok</code>) or failure (<code>Err</code>).</p>"},{"location":"api/utils/#fr24.utils.M","title":"M  <code>module-attribute</code>","text":"<pre><code>M = TypeVar('M', bound=Callable[..., Any])\n</code></pre>"},{"location":"api/utils/#fr24.utils.BarePath","title":"BarePath","text":"<p>Attributes:</p> Name Type Description <code>path</code> <code>Path</code>"},{"location":"api/utils/#fr24.utils.BarePath.path","title":"path  <code>instance-attribute</code>","text":"<pre><code>path: Path\n</code></pre>"},{"location":"api/utils/#fr24.utils.SupportsToDict","title":"SupportsToDict","text":"<p>               Bases: <code>Protocol[DictT_co]</code></p> <p>Methods:</p> Name Description <code>to_dict</code> <p>Converts the object into a dictionary.</p>"},{"location":"api/utils/#fr24.utils.SupportsToDict.to_dict","title":"to_dict","text":"<pre><code>to_dict() -&gt; DictT_co\n</code></pre> <p>Converts the object into a dictionary.</p>"},{"location":"api/utils/#fr24.utils.SupportsToPolars","title":"SupportsToPolars","text":"<p>               Bases: <code>Protocol</code></p> <p>Methods:</p> Name Description <code>to_polars</code> <p>Converts the object into a polars dataframe.</p>"},{"location":"api/utils/#fr24.utils.SupportsToPolars.to_polars","title":"to_polars","text":"<pre><code>to_polars() -&gt; DataFrame\n</code></pre> <p>Converts the object into a polars dataframe.</p>"},{"location":"api/utils/#fr24.utils.Ok","title":"Ok","text":"<p>               Bases: <code>Generic[T]</code></p> <p>Methods:</p> Name Description <code>ok</code> <code>err</code> <code>is_ok</code> <code>is_err</code> <code>unwrap</code>"},{"location":"api/utils/#fr24.utils.Ok.ok","title":"ok","text":"<pre><code>ok() -&gt; T\n</code></pre>"},{"location":"api/utils/#fr24.utils.Ok.err","title":"err","text":"<pre><code>err() -&gt; None\n</code></pre>"},{"location":"api/utils/#fr24.utils.Ok.is_ok","title":"is_ok","text":"<pre><code>is_ok() -&gt; Literal[True]\n</code></pre>"},{"location":"api/utils/#fr24.utils.Ok.is_err","title":"is_err","text":"<pre><code>is_err() -&gt; Literal[False]\n</code></pre>"},{"location":"api/utils/#fr24.utils.Ok.unwrap","title":"unwrap","text":"<pre><code>unwrap() -&gt; T\n</code></pre>"},{"location":"api/utils/#fr24.utils.Err","title":"Err","text":"<p>               Bases: <code>Generic[E]</code></p> <p>Methods:</p> Name Description <code>ok</code> <code>err</code> <code>is_ok</code> <code>is_err</code> <code>unwrap</code>"},{"location":"api/utils/#fr24.utils.Err.ok","title":"ok","text":"<pre><code>ok() -&gt; None\n</code></pre>"},{"location":"api/utils/#fr24.utils.Err.err","title":"err","text":"<pre><code>err() -&gt; E\n</code></pre>"},{"location":"api/utils/#fr24.utils.Err.is_ok","title":"is_ok","text":"<pre><code>is_ok() -&gt; Literal[False]\n</code></pre>"},{"location":"api/utils/#fr24.utils.Err.is_err","title":"is_err","text":"<pre><code>is_err() -&gt; Literal[True]\n</code></pre>"},{"location":"api/utils/#fr24.utils.Err.unwrap","title":"unwrap","text":"<pre><code>unwrap() -&gt; NoReturn\n</code></pre>"},{"location":"api/utils/#fr24.utils.UnwrapError","title":"UnwrapError","text":"<pre><code>UnwrapError(err: Any, message: str)\n</code></pre> <p>               Bases: <code>Exception</code></p> <p>Attributes:</p> Name Type Description <code>err</code> <code>Any</code>"},{"location":"api/utils/#fr24.utils.UnwrapError.err","title":"err  <code>property</code>","text":"<pre><code>err: Any\n</code></pre>"},{"location":"api/utils/#fr24.utils.ParamDetail","title":"ParamDetail","text":"<p>               Bases: <code>NamedTuple</code></p> <p>Attributes:</p> Name Type Description <code>name</code> <code>str</code> <code>description</code> <code>str</code>"},{"location":"api/utils/#fr24.utils.ParamDetail.name","title":"name  <code>instance-attribute</code>","text":"<pre><code>name: str\n</code></pre>"},{"location":"api/utils/#fr24.utils.ParamDetail.description","title":"description  <code>instance-attribute</code>","text":"<pre><code>description: str\n</code></pre>"},{"location":"api/utils/#fr24.utils.SphinxParser","title":"SphinxParser  <code>dataclass</code>","text":"<pre><code>SphinxParser(\n    text: str,\n    name: str | None = None,\n    doc_lines: list[str] = list(),\n)\n</code></pre> <p>A poor man's parser for Sphinx docstrings and its <code>:param:</code> directive.</p> <p>Methods:</p> Name Description <code>__iter__</code> <p>Attributes:</p> Name Type Description <code>text</code> <code>str</code> <code>name</code> <code>str | None</code> <code>doc_lines</code> <code>list[str]</code>"},{"location":"api/utils/#fr24.utils.SphinxParser.text","title":"text  <code>instance-attribute</code>","text":"<pre><code>text: str\n</code></pre>"},{"location":"api/utils/#fr24.utils.SphinxParser.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str | None = None\n</code></pre>"},{"location":"api/utils/#fr24.utils.SphinxParser.doc_lines","title":"doc_lines  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>doc_lines: list[str] = field(default_factory=list)\n</code></pre>"},{"location":"api/utils/#fr24.utils.SphinxParser.__iter__","title":"__iter__","text":"<pre><code>__iter__() -&gt; Iterator[str | ParamDetail]\n</code></pre>"},{"location":"api/utils/#fr24.utils.dataclass_frozen","title":"dataclass_frozen","text":"<pre><code>dataclass_frozen(cls: type[_D]) -&gt; type[_D]\n</code></pre>"},{"location":"api/utils/#fr24.utils.to_unix_timestamp","title":"to_unix_timestamp","text":"<pre><code>to_unix_timestamp(\n    timestamp: IntoTimestamp | Literal[\"now\"] | str,\n) -&gt; IntTimestampS | Literal[\"now\"]\n</code></pre><pre><code>to_unix_timestamp(timestamp: None) -&gt; None\n</code></pre> <pre><code>to_unix_timestamp(\n    timestamp: IntoTimestamp | str | Literal[\"now\"] | None,\n) -&gt; IntTimestampS | Literal[\"now\"] | None\n</code></pre> <p>Casts timestamp-like object to a Unix timestamp in integer seconds.</p>"},{"location":"api/utils/#fr24.utils.get_current_timestamp","title":"get_current_timestamp","text":"<pre><code>get_current_timestamp() -&gt; IntTimestampS\n</code></pre> <p>Returns the current Unix timestamp in seconds.</p>"},{"location":"api/utils/#fr24.utils.parse_server_timestamp","title":"parse_server_timestamp","text":"<pre><code>parse_server_timestamp(\n    response: Response,\n) -&gt; IntTimestampS | None\n</code></pre>"},{"location":"api/utils/#fr24.utils.to_flight_id","title":"to_flight_id","text":"<pre><code>to_flight_id(flight_id: IntoFlightId) -&gt; IntFlightId\n</code></pre>"},{"location":"api/utils/#fr24.utils.to_flight_id_hex","title":"to_flight_id_hex","text":"<pre><code>to_flight_id_hex(flight_id: IntoFlightId) -&gt; StrFlightIdHex\n</code></pre> <p>Converts flight ID to a hex string.</p>"},{"location":"api/utils/#fr24.utils.format_bare_path","title":"format_bare_path","text":"<pre><code>format_bare_path(\n    path: BarePath, format: TabularFileFmt\n) -&gt; Path\n</code></pre>"},{"location":"api/utils/#fr24.utils.write_table","title":"write_table","text":"<pre><code>write_table(\n    result: SupportsToPolars,\n    file: FileLike,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    when_file_exists: FileExistsBehaviour = \"backup\",\n    **kwargs: Any,\n) -&gt; None\n</code></pre> <p>Writes the table as the specified format via polars.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>FileLike</code> <p>File path or writable file-like object. The path will be given an appropriate suffix if it is a BarePath.</p> required"},{"location":"api/utils/#fr24.utils.scan_table","title":"scan_table","text":"<pre><code>scan_table(\n    file: FileLike,\n    *,\n    format: TabularFileFmt = \"parquet\",\n    schema: dict[str, DataType] | None = None,\n) -&gt; LazyFrame\n</code></pre> <p>Reads the table as the specified format via polars.</p> <p>Parameters:</p> Name Type Description Default <code>file</code> <code>FileLike</code> <p>File path or readable file-like object. The path will be given an appropriate suffix if it is a BarePath.</p> required <code>schema</code> <code>dict[str, DataType] | None</code> <p>The schema to enforce when reading the table. For CSV files, this should be specified to properly parse datetimes from strings.</p> <code>None</code>"},{"location":"api/utils/#fr24.utils.static_check_signature","title":"static_check_signature","text":"<pre><code>static_check_signature(\n    dataclass: Any,\n) -&gt; Callable[[M], M]\n</code></pre> <p>Marker to signal the static analyser that the decorated method or function should be checked against the signature of the given dataclass.</p> <p>Many of our low level APIs use 1) parameters stored in a single flat dataclass, and 2) functions that take in this dataclass: <pre><code>@dataclass\nclass LiveFeedParams:\n    bbox_south: float\n    \"\"\"Latitude, minimum, degrees\"\"\"\n    bbox_north: float\n    bbox_west: float\n    bbox_east: float\n    flight_id: int\n    # ... other params ...\n\ndef live_feed(params: LiveFeedParams, ...):\n    ...\n</code></pre> but service methods and CLIs expect a flat signature: <pre><code>from fr24.utils import static_check_signature\n\n@static_check_signature(LiveFeedParams)\ndef live_feed_cli(\n    bbox_south: float,\n    bbox_north: float,\n    bbox_west: float,\n    bbox_east: float,\n    flight_id: int\n    # ... other params ...\n):\n    \"\"\":param bbox_south: The southern latitude of the bounding box.\n    ...\"\"\"\n    ...\n</code></pre> <code>./scripts/check_signature.py</code> uses static analysis to:</p> <ol> <li>scan for all uses of the decorator</li> <li>for each member of the dataclass, collect all docstrings, members names    and types</li> <li>for each argument of the decorated method, parse the sphinx docstring,    names and types</li> <li>compare them.</li> </ol>"},{"location":"usage/authentication/","title":"Authentication","text":"<p>By default, the client is not authenticated. You can check the status using the CLI:</p> ShellOutput <pre><code>fr24 auth show\n</code></pre> <pre><code>warning: not authenticated\nhelp: provide your credentials in environment variables, either:\n- `fr24_username` and `fr24_password`, or\n- `fr24_subscription_key` and `fr24_token`\nhelp: alternatively, create a template configuration file at\n`/home/user/.config/fr24/fr24.conf` with the command `fr24 auth create`.\n</code></pre> <p>You should be authenticated if you would like to access more history or use the data for commercial purposes.</p> <p>Set the following environment variables:</p> <ul> <li><code>fr24_username</code> and <code>fr24_password</code>: (not recommended<sup>1</sup>); OR</li> <li><code>fr24_subscription_key</code> and <code>fr24_token</code><sup>2</sup>;</li> </ul>"},{"location":"usage/authentication/#config-file","title":"Config File","text":"<p>Alternatively, you can also create a configuration file in the config directory.</p> <p>An example of it can be found at <code>fr24.example.conf</code>, and can be generated with the command:</p> ShellOutput <pre><code>fr24 auth create\n</code></pre> <pre><code>success: created template configuration file at /home/user/.config/fr24/fr24.conf\n</code></pre> <p>Examples:</p> username + passwordsubscription_key + token <pre><code>[global]\nusername=example13@example.com\npassword=example13\n</code></pre> <pre><code>[global]\nsubscription_key=dQw4w9WgXcQdQw4w9WgXcQdQw4w9WgXcQdQw4w9WgXcQ\ntoken=eyq2IlMJ5ip3ElLJ5aMKWmqT9fo3MyrJ91n25iq3EbMKW1oTImLJ5xp29xo2x=\n</code></pre> <ol> <li> <p>When the FR24 class' context is entered, a request is automatically made to retrieve the OAuth tokens\u00a0\u21a9</p> </li> <li> <p><code>fr24_token</code> should be a JWT with the <code>exp</code> claim in a month, while <code>fr24_subscription_key</code> should be the shorter one. <code>fr24_token</code> is optional but live feed will fail without it. Be sure to update the JWT in time.\u00a0\u21a9</p> </li> </ol>"},{"location":"usage/cli/","title":"CLI","text":"<p>List all commands and show help:</p> <pre><code>$ fr24 --help\n\nUsage: fr24 [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --install-completion  Install completion for the current shell.\n  --show-completion     Show completion for the current shell, to copy it or\n                        customize the installation.\n  --help                Show this message and exit.\n\nCommands:\n  dirs                 Shows relevant directories\n  tui                  Starts the TUI\n  flight-list          Fetch the flight list.\n  flight-list-all      Fetch all pages of the flight list.\n  playback             Fetch the playback data for a flight.\n  live-feed            Fetch the live feed.\n  live-feed-playback   Fetch a playback of the live feed.\n  nearest-flights      Fetch the nearest flights.\n  live-flights-status  Fetch the live flights status.\n  flight-details       Fetch flight details.\n  top-flights          Fetch the top flights.\n  playback-flight      Fetch playback flight details.\n  auth                 Commands for authentication\n</code></pre>"},{"location":"usage/cli/#live-feed-live-feed-playback","title":"<code>live-feed</code> &amp; <code>live-feed-playback</code>","text":"<p>Dump the current (or playback of) live feed data.</p> ShellHelp Output (<code>live-feed</code>)Help Output (<code>live-feed-playback</code>)Example Output <pre><code>fr24 live-feed --help\n# by default, parquet\nfr24 live-feed --bounding-box \"42.0,52.0,-8.0,10.0\"\n\n# write to stdout in csv format\nfr24 live-feed --bounding-box \"42.0,52.0,-8.0,10.0\" --format csv -o -\n\n# at a specific time\nfr24 live-feed-playback --bounding-box \"42.0,52.0,-8.0,10.0\" --timestamp \"2024-01-01T12:00:00\"\n</code></pre> <pre><code>$ fr24 live-feed --help\n\nUsage: fr24 [OPTIONS]\n\n  Fetch the live feed.\n\nOptions:\n  --bounding-box SOUTH,NORTH,WEST,EAST\n                                  Example (france UIR): `42.0, 52.0, -8.0,\n                                  10.0`  [required]\n  --stats / --no-stats            Whether to include stats in the given area.\n                                  [default: no-stats]\n  --limit INTEGER                 Maximum number of flights (should be set to\n                                  1500 for unauthorized users, 2000 for\n                                  authorized users).  [default: 1500]\n  --maxage INTEGER                Maximum time since last message update,\n                                  seconds.  [default: 14400]\n  --fields [flight|reg|route|type|squawk|vspeed|airspace|logo_id|age]\n                                  Fields to include. For unauthenticated\n                                  users, a maximum of 4 fields can be\n                                  included. When authenticated, `squawk`,\n                                  `vspeed`, `airspace`, `logo_id` and `age`\n                                  can be included.  [default: {'reg',\n                                  'flight', 'route', 'type'}]\n  -o, --output FILEPATH|CACHE|-   Save results to a specific filepath. If `-`,\n                                  results will be printed to stdout. If\n                                  `cache`, results will be saved to the\n                                  default cache.  [default:\n                                  live_feed.parquet]\n  -f, --format [parquet|csv]      Output format  [default: parquet]\n  --when-file-exists [backup|error|overwrite]\n                                  Action when output file path already exists.\n                                  [default: backup]\n  --help                          Show this message and exit.\n</code></pre> <pre><code>$ fr24 live-feed-playback --help\n\nUsage: fr24 [OPTIONS]\n\n  Fetch a playback of the live feed.\n\nOptions:\n  --bounding-box SOUTH,NORTH,WEST,EAST\n                                  Example (france UIR): `42.0, 52.0, -8.0,\n                                  10.0`  [required]\n  --stats / --no-stats            Whether to include stats in the given area.\n                                  [default: no-stats]\n  --limit INTEGER                 Maximum number of flights (should be set to\n                                  1500 for unauthorized users, 2000 for\n                                  authorized users).  [default: 1500]\n  --maxage INTEGER                Maximum time since last message update,\n                                  seconds.  [default: 14400]\n  --fields [flight|reg|route|type|squawk|vspeed|airspace|logo_id|age]\n                                  Fields to include. For unauthenticated\n                                  users, a maximum of 4 fields can be\n                                  included. When authenticated, `squawk`,\n                                  `vspeed`, `airspace`, `logo_id` and `age`\n                                  can be included.  [default: {'reg',\n                                  'flight', 'route', 'type'}]\n  --timestamp TIMESTAMP_S         Start timestamp  [default: now]\n  --duration INTEGER              Duration of prefetch,\n                                  `floor(7.5*(multiplier))` seconds  For 1x\n                                  playback, this should be 7 seconds.\n                                  [default: 7]\n  --hfreq INTEGER                 High frequency mode\n  -o, --output FILEPATH|CACHE|-   Save results to a specific filepath. If `-`,\n                                  results will be printed to stdout. If\n                                  `cache`, results will be saved to the\n                                  default cache.  [default:\n                                  live_feed_playback.parquet]\n  -f, --format [parquet|csv]      Output format  [default: parquet]\n  --when-file-exists [backup|error|overwrite]\n                                  Action when output file path already exists.\n                                  [default: backup]\n  --help                          Show this message and exit.\n</code></pre> <pre><code>$ fr24 live-feed --bounding-box \"42.0,52.0,-8.0,10.0\"\n[00:00:00] INFO     using environment `subscription_key` and      __init__.py:98\n                `token`                                                     \n[00:00:00] INFO     HTTP Request: POST                           _client.py:1740\n                    https://data-feed.flightradar24.com/fr24.fee                \n                    d.api.v1.Feed/LiveFeed \"HTTP/2 200 OK\"                      \n           INFO     wrote 982 rows to                               utils.py:229\n                       `/home/user/live_feed.parquet`\n\n$ duckdb -c \"describe select * from 'live_feed.parquet';\"\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   column_name   \u2502     column_type      \u2502  null   \u2502 \u2026 \u2502 default \u2502  extra  \u2502\n\u2502     varchar     \u2502       varchar        \u2502 varchar \u2502   \u2502 varchar \u2502 varchar \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 timestamp       \u2502 TIMESTAMP WITH TIM\u2026  \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 flightid        \u2502 UINTEGER             \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 latitude        \u2502 FLOAT                \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 longitude       \u2502 FLOAT                \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 track           \u2502 USMALLINT            \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 altitude        \u2502 INTEGER              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 ground_speed    \u2502 SMALLINT             \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 on_ground       \u2502 BOOLEAN              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 callsign        \u2502 VARCHAR              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 source          \u2502 UTINYINT             \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 registration    \u2502 VARCHAR              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 origin          \u2502 VARCHAR              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 destination     \u2502 VARCHAR              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 typecode        \u2502 VARCHAR              \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 eta             \u2502 UINTEGER             \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 squawk          \u2502 USMALLINT            \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 vertical_speed  \u2502 SMALLINT             \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u2502 position_buffer \u2502 STRUCT(delta_lat I\u2026  \u2502 YES     \u2502 \u2026 \u2502 NULL    \u2502 NULL    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 18 rows                                              6 columns (5 shown) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/cli/#flight-list-flight-list-all","title":"<code>flight-list</code> &amp; <code>flight-list-all</code>","text":"<p>Dump the flight list for a given registration or flight number.</p> ShellHelp Output (<code>flight-list</code>)Help Output (<code>flight-list-all</code>)Example Output <pre><code>fr24 flight-list --help\nfr24 flight-list --reg B-HPB -o - --format csv\nfr24 flight-list-all --flight CX488 -o cache\n</code></pre> <pre><code>$ fr24 flight-list --help\n\nUsage: fr24 [OPTIONS]\n\n  Fetch the flight list.\n\nOptions:\n  --reg TEXT                      Aircraft registration (e.g. `B-HUJ`)\n  --flight TEXT                   Flight number (e.g. `CX8747`)\n  --page INTEGER                  Page number  [default: 1]\n  --limit INTEGER                 Number of results per page - use `100` if\n                                  authenticated.  [default: 10]\n  --timestamp TIMESTAMP_S         Show flights with ATD before this Unix\n                                  timestamp  [default: now]\n  -o, --output FILEPATH|CACHE|-   Save results to a specific filepath. If `-`,\n                                  results will be printed to stdout. If\n                                  `cache`, results will be saved to the\n                                  default cache.  [default:\n                                  flight_list.parquet]\n  -f, --format [parquet|csv]      Output format  [default: parquet]\n  --when-file-exists [backup|error|overwrite]\n                                  Action when output file path already exists.\n                                  [default: backup]\n  --help                          Show this message and exit.\n</code></pre> <pre><code>$ fr24 flight-list-all --help\n\nUsage: fr24 [OPTIONS]\n\n  Fetch all pages of the flight list.\n\nOptions:\n  --reg TEXT                      Aircraft registration (e.g. `B-HUJ`)\n  --flight TEXT                   Flight number (e.g. `CX8747`)\n  --page INTEGER                  Page number  [default: 1]\n  --limit INTEGER                 Number of results per page - use `100` if\n                                  authenticated.  [default: 10]\n  --timestamp TIMESTAMP_S         Show flights with ATD before this Unix\n                                  timestamp  [default: now]\n  --delay INTEGER                 Delay between requests in seconds.\n                                  [default: 5]\n  --max-pages INTEGER             Maximum number of pages to fetch.\n  -o, --output FILEPATH|CACHE|-   Save results to a specific filepath. If `-`,\n                                  results will be printed to stdout. If\n                                  `cache`, results will be saved to the\n                                  default cache.  [default:\n                                  flight_list_all.parquet]\n  -f, --format [parquet|csv]      Output format  [default: parquet]\n  --when-file-exists [backup|error|overwrite]\n                                  Action when output file path already exists.\n                                  [default: backup]\n  --help                          Show this message and exit.\n</code></pre> <pre><code>$ fr24 flight-list --reg B-HPB -o - --format csv\n[00:00:00] INFO     using environment `subscription_key` and      __init__.py:98\n                `token`                                                     \n[00:00:00] INFO     HTTP Request: GET                            _client.py:1740\n                    https://api.flightradar24.com/common/v1/flig                \n                    ht/list.json?query=B-HPB&amp;fetchBy=reg&amp;page=1&amp;                \n                    limit=10 \"HTTP/200 OK\"                                                     \nflight_id,number,callsign,icao24,registration,typecode,origin,destination,status,STOD,ETOD,ATOD,STOA,ETOA,ATOA\n996322074,CX742,CPA742,7901768,B-HPB,A21N,VVNB,VHHH,Landed 21:46,2025-07-23T12:05:00.000+0000,,2025-07-23T12:23:33.000+0000,2025-07-23T14:10:00.000+0000,,2025-07-23T13:46:15.000+0000\n996286687,CX743,CPA743,7901768,B-HPB,A21N,VHHH,VVNB,Landed 17:51,2025-07-23T08:55:00.000+0000,,2025-07-23T09:21:44.000+0000,2025-07-23T11:05:00.000+0000,,2025-07-23T10:51:39.000+0000\n996244655,CX608,CPA608,7901768,B-HPB,A21N,VDPP,VHHH,Landed 14:51,2025-07-23T04:25:00.000+0000,,2025-07-23T04:39:01.000+0000,2025-07-23T07:15:00.000+0000,,2025-07-23T06:51:29.000+0000\n996213423,CX607,CPA607,7901768,B-HPB,A21N,VHHH,VDPP,Landed 10:04,2025-07-23T00:35:00.000+0000,,2025-07-23T01:00:29.000+0000,2025-07-23T03:15:00.000+0000,,2025-07-23T03:04:00.000+0000\n996039556,CX926,CPA926,7901768,B-HPB,A21N,RPVM,VHHH,Landed 21:47,2025-07-22T11:15:00.000+0000,,2025-07-22T11:25:42.000+0000,2025-07-22T14:15:00.000+0000,,2025-07-22T13:47:05.000+0000\n996004405,CX925,CPA925,7901768,B-HPB,A21N,VHHH,RPVM,Landed 17:56,2025-07-22T07:15:00.000+0000,,2025-07-22T07:41:27.000+0000,2025-07-22T10:05:00.000+0000,,2025-07-22T09:56:45.000+0000\n995970644,CX906,CPA906,7901768,B-HPB,A21N,RPLL,VHHH,Landed 13:10,2025-07-22T02:45:00.000+0000,,2025-07-22T03:31:12.000+0000,2025-07-22T05:15:00.000+0000,,2025-07-22T05:10:58.000+0000\n995937230,CX907,CPA907,7901768,B-HPB,A21N,VHHH,RPLL,Landed 09:42,2025-07-21T23:20:00.000+0000,,2025-07-21T23:55:22.000+0000,2025-07-22T01:35:00.000+0000,,2025-07-22T01:42:25.000+0000\n995808068,CX963,CPA963,7901768,B-HPB,A21N,ZSHC,VHHH,Landed 23:06,2025-07-21T11:35:00.000+0000,,2025-07-21T13:02:20.000+0000,2025-07-21T14:20:00.000+0000,,2025-07-21T15:06:00.000+0000\n995766910,CX962,CPA962,7901768,B-HPB,A21N,VHHH,ZSHC,Landed 19:12,2025-07-21T08:00:00.000+0000,,2025-07-21T09:22:59.000+0000,2025-07-21T10:20:00.000+0000,,2025-07-21T11:12:56.000+0000\n        INFO     wrote 10 rows to `&lt;_io.BufferedWriter           utils.py:229\n                    name='&lt;stdout&gt;'&gt;`\n</code></pre>"},{"location":"usage/cli/#playback","title":"<code>playback</code>","text":"<p>Dump the historical track playback data.</p> ShellHelp Output <pre><code>fr24 playback --help\nfr24 playback --flight-id 2d81a27 -o playback.parquet\n</code></pre> <pre><code>$ fr24 playback --help\n\nUsage: fr24 [OPTIONS]\n\n  Fetch the playback data for a flight.\n\nOptions:\n  --flight-id FLIGHT_ID           fr24 flight id, represented in hex\n                                  [required]\n  --timestamp TIMESTAMP_S         Actual time of departure (ATD) of the\n                                  historic flight, Unix timestamp in seconds.\n                                  Optional, but it is recommended to include\n                                  it.\n  -o, --output FILEPATH|CACHE|-   Save results to a specific filepath. If `-`,\n                                  results will be printed to stdout. If\n                                  `cache`, results will be saved to the\n                                  default cache.  [default: playback.parquet]\n  -f, --format [parquet|csv]      Output format  [default: parquet]\n  --when-file-exists [backup|error|overwrite]\n                                  Action when output file path already exists.\n                                  [default: backup]\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"usage/cli/#nearest-flights-live-flights-status-flight-details-top-flights-playback-flight","title":"<code>nearest-flights</code>, <code>live-flights-status</code>, <code>flight-details</code>, <code>top-flights</code>, <code>playback-flight</code>","text":"<p>Dump various gRPC-based flight data.</p> <pre><code>fr24 nearest-flights --lat 22.3 --lon 113.9\nfr24 live-flights-status --flight-ids 3963916d 3963a803\nfr24 flight-details --flight-id 3963916d\nfr24 top-flights --limit 5\nfr24 playback-flight --flight-id 3963916d --timestamp \"2025-07-24T00:00:00\"\n</code></pre> <pre><code>$ fr24 nearest-flights --help\n\nUsage: fr24 [OPTIONS]\n\n  Fetch the nearest flights.\n\nOptions:\n  --lat FLOAT                     Latitude, degrees, -90 to 90  [required]\n  --lon FLOAT                     Longitude, degrees, -180 to 180  [required]\n  --radius INTEGER                Radius, metres  [default: 10000]\n  --limit INTEGER                 Maximum number of aircraft to return\n                                  [default: 1500]\n  -o, --output FILEPATH|CACHE|-   Save results to a specific filepath. If `-`,\n                                  results will be printed to stdout. If\n                                  `cache`, results will be saved to the\n                                  default cache.  [default:\n                                  nearest_flights.parquet]\n  -f, --format [parquet|csv]      Output format  [default: parquet]\n  --when-file-exists [backup|error|overwrite]\n                                  Action when output file path already exists.\n                                  [default: backup]\n  --help                          Show this message and exit.\n</code></pre> <pre><code>$ fr24 live-flights-status --help\n\nUsage: fr24 [OPTIONS]\n\n  Fetch the live flights status.\n\nOptions:\n  --flight-ids FLIGHT_ID          List of flight IDs to get status for\n                                  [required]\n  -o, --output FILEPATH|CACHE|-   Save results to a specific filepath. If `-`,\n                                  results will be printed to stdout. If\n                                  `cache`, results will be saved to the\n                                  default cache.  [default:\n                                  live_flights_status.parquet]\n  -f, --format [parquet|csv]      Output format  [default: parquet]\n  --when-file-exists [backup|error|overwrite]\n                                  Action when output file path already exists.\n                                  [default: backup]\n  --help                          Show this message and exit.\n</code></pre> <pre><code>$ fr24 flight-details --help\n\nUsage: fr24 [OPTIONS]\n\n  Fetch flight details.\n\nOptions:\n  --flight-id FLIGHT_ID           Flight ID to fetch details for. Must be\n                                  live, or the response will contain an empty\n                                  `DATA` frame error.  [required]\n  --restriction-mode FLIGHT_ID    [FAA LADD](https://www.faa.gov/pilots/ladd)\n                                  visibility mode.  [default: 0]\n  --verbose / --no-verbose        Whether to include [fr24.proto.v1_pb2.Flight\n                                  DetailsResponse.flight_plan] and [fr24.proto\n                                  .v1_pb2.FlightDetailsResponse.aircraft_detai\n                                  ls] in the response.  [default: verbose]\n  -o, --output FILEPATH|CACHE|-   Save results to a specific filepath. If `-`,\n                                  results will be printed to stdout. If\n                                  `cache`, results will be saved to the\n                                  default cache.  [default:\n                                  flight_details.parquet]\n  -f, --format [parquet|csv]      Output format  [default: parquet]\n  --when-file-exists [backup|error|overwrite]\n                                  Action when output file path already exists.\n                                  [default: backup]\n  --help                          Show this message and exit.\n</code></pre> <pre><code>$ fr24 top-flights --help\n\nUsage: fr24 [OPTIONS]\n\n  Fetch the top flights.\n\nOptions:\n  --limit INTEGER                 Maximum number of top flights to return\n                                  (1-10)  [default: 10]\n  -o, --output FILEPATH|CACHE|-   Save results to a specific filepath. If `-`,\n                                  results will be printed to stdout. If\n                                  `cache`, results will be saved to the\n                                  default cache.  [default:\n                                  top_flights.parquet]\n  -f, --format [parquet|csv]      Output format  [default: parquet]\n  --when-file-exists [backup|error|overwrite]\n                                  Action when output file path already exists.\n                                  [default: backup]\n  --help                          Show this message and exit.\n</code></pre> <pre><code>$ fr24 playback-flight --help\n\nUsage: fr24 [OPTIONS]\n\n  Fetch playback flight details.\n\nOptions:\n  --flight-id FLIGHT_ID           Flight ID to fetch details for. Must not be\n                                  live, or the response will contain an empty\n                                  `DATA` frame error.  [required]\n  --timestamp TIMESTAMP_S         Actual time of departure (ATD) of the\n                                  historic flight  [required]\n  -o, --output FILEPATH|CACHE|-   Save results to a specific filepath. If `-`,\n                                  results will be printed to stdout. If\n                                  `cache`, results will be saved to the\n                                  default cache.  [default:\n                                  playback_flight.parquet]\n  -f, --format [parquet|csv]      Output format  [default: parquet]\n  --when-file-exists [backup|error|overwrite]\n                                  Action when output file path already exists.\n                                  [default: backup]\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"usage/cli/#tui","title":"<code>tui</code>","text":"<p>Start the Text User Interface.</p> <pre><code>fr24 tui\n</code></pre>"},{"location":"usage/directories/","title":"Directories","text":"<p>Check the location of the config and cache directories with:</p> <pre><code>fr24 dirs\n</code></pre> <p>Here are possible outputs:</p> OS Config File Cache Directory Linux <code>$HOME/.config/fr24/fr24.conf</code> <code>$HOME/.cache/fr24</code> macOS <code>$HOME/Library/Preferences/fr24.conf</code> <code>$HOME/Library/Caches/fr24</code> Windows <code>%LOCALAPPDATA%\\Acme\\fr24\\Cache\\fr24.conf</code> <code>%LOCALAPPDATA%\\Acme\\fr24\\Cache</code> <p>On Unix-based systems, you can override the configuration and cache directory with the environment variable <code>XDG_CACHE_HOME</code> and <code>XDG_CONFIG_HOME</code> respectively.</p>"},{"location":"usage/examples/","title":"Overview","text":"Name Low-level API Service and Cache Location Flight ListJSON <code>flight_list</code><code>flight_list_df</code> <code>FlightListService</code>Cache Location:<code>flight_list/</code><code>\u2514\u2500\u2500 reg/</code><code>\u2514\u2500\u2500 {reg.upper()}.parquet</code><code>\u2514\u2500\u2500 flight_list/</code><code>\u2514\u2500\u2500 {iata_flight_num.upper()}.parquet</code> PlaybackJSON <code>playback</code><code>playback_df</code> <code>PlaybackService</code>Cache Location:<code>playback/</code><code>\u2514\u2500\u2500 {fr24_hex_id.upper()}.parquet</code> Live FeedgRPC <code>live_feed</code><code>live_feed_df</code> <code>LiveFeedService</code>Cache Location:<code>feed/</code><code>\u2514\u2500\u2500 {timestamp_s}.parquet</code> Live Feed PlaybackgRPC <code>live_feed_playback</code><code>live_feed_df</code> <code>LiveFeedPlaybackService</code>Cache Location:<code>feed/</code><code>\u2514\u2500\u2500 {timestamp_s}.parquet</code> Airport ListJSON <code>airport_list</code> <code>AirportListService</code> Airport SearchJSON <code>find</code> <code>FindService</code> Nearest FlightsgRPC <code>nearest_flights</code> <code>NearestFlightsService</code>Cache Location:<code>nearest_flights/</code><code>\u2514\u2500\u2500 {lon_x1e6}_{lat_x1e6}_{timestamp_s}.parquet</code> Live Flight StatusgRPC <code>live_flights_status</code> <code>LiveFlightsStatusService</code>Cache Location:<code>live_flights_status/</code><code>\u2514\u2500\u2500 {timestamp_s}.parquet</code> Search IndexgRPC <code>search_index</code> - Follow FlightgRPC <code>follow_flight_stream</code> <code>FollowFlightService</code> Top FlightsgRPC <code>top_flights</code> <code>TopFlightsService</code>Cache Location:<code>top_flights/</code><code>\u2514\u2500\u2500 {timestamp_s}.parquet</code> Live TrailgRPC <code>live_trail</code> - Historic TrailgRPC <code>historic_trail</code> - Flight DetailsgRPC <code>flight_details</code> <code>FlightDetailsService</code>Cache Location:<code>flight_details/</code><code>\u2514\u2500\u2500 {flight_id}_{timestamp_s}.parquet</code> Playback FlightgRPC <code>playback_flight</code> <code>PlaybackFlightService</code>Cache Location:<code>playback_flight/</code><code>\u2514\u2500\u2500 {flight_id}_{timestamp_s}.parquet</code> <p>You can find even more usage examples under <code>tests/</code>.</p> <p>Skip to Low Level API</p>"},{"location":"usage/examples/#fr24-services","title":"<code>FR24</code> services","text":""},{"location":"usage/examples/#flight-list","title":"Flight list","text":""},{"location":"usage/examples/#single-page","title":"Single page","text":"Jupyter cell<code>result.to_polars()</code> <pre><code>from fr24 import FR24, FR24Cache\n\nasync def my_list() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.flight_list.fetch(reg=\"B-LRA\")\n        print(result.to_polars())\n        result.write_table(FR24Cache.default())\n\nawait my_list()\n</code></pre> <pre><code>shape: (10, 15)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 flight_id \u2506 number \u2506 callsign \u2506 icao24  \u2506 \u2026 \u2506 ATOD        \u2506 STOA       \u2506 ETOA       \u2506 ATOA       \u2502\n\u2502 ---       \u2506 ---    \u2506 ---      \u2506 ---     \u2506   \u2506 ---         \u2506 ---        \u2506 ---        \u2506 ---        \u2502\n\u2502 u64       \u2506 str    \u2506 str      \u2506 u32     \u2506   \u2506 datetime[ms \u2506 datetime[m \u2506 datetime[m \u2506 datetime[m \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 , UTC]      \u2506 s, UTC]    \u2506 s, UTC]    \u2506 s, UTC]    \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 952283415 \u2506 CX382  \u2506 CPA382   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-17  \u2506 2025-01-17 \u2506 null       \u2506 2025-01-17 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 11:14:41    \u2506 22:25:00   \u2506            \u2506 22:15:37   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 952264050 \u2506 CX383  \u2506 CPA383   \u2506 7867035 \u2506 \u2026 \u2506 null        \u2506 null       \u2506 null       \u2506 null       \u2502\n\u2502 952125211 \u2506 CX383  \u2506 CPA383   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-16  \u2506 2025-01-17 \u2506 null       \u2506 2025-01-17 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 17:57:05    \u2506 06:30:00   \u2506            \u2506 06:53:54   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951961210 \u2506 CX710  \u2506 CPA710   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-16  \u2506 2025-01-16 \u2506 null       \u2506 2025-01-16 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 00:15:55    \u2506 03:55:00   \u2506            \u2506 03:38:15   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951777224 \u2506 CX735  \u2506 CPA735   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-15  \u2506 2025-01-15 \u2506 null       \u2506 2025-01-15 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 06:44:49    \u2506 10:25:00   \u2506            \u2506 10:31:32   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951575574 \u2506 CX372  \u2506 CPA372   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-14  \u2506 2025-01-14 \u2506 null       \u2506 2025-01-14 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 10:48:22    \u2506 22:55:00   \u2506            \u2506 23:04:26   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951418869 \u2506 CX315  \u2506 CPA315   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-13  \u2506 2025-01-14 \u2506 null       \u2506 2025-01-14 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 17:21:14    \u2506 07:30:00   \u2506            \u2506 07:00:28   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951229708 \u2506 CX624  \u2506 CPA624   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-12  \u2506 2025-01-13 \u2506 null       \u2506 2025-01-13 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 20:15:14    \u2506 01:30:00   \u2506            \u2506 00:59:37   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951146643 \u2506 CX623  \u2506 CPA623   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-12  \u2506 2025-01-12 \u2506 null       \u2506 2025-01-12 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 12:57:58    \u2506 18:55:00   \u2506            \u2506 18:23:19   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951012767 \u2506 CX714  \u2506 CPA714   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-11  \u2506 2025-01-11 \u2506 null       \u2506 2025-01-11 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 18:55:20    \u2506 21:10:00   \u2506            \u2506 22:05:36   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#paginate-all-pages","title":"Paginate all pages","text":"<p>Queries for next page as long as user doesn't enter <code>x</code>, or if there are no pages left. In each iteration, rows are upserted and saved to the cache.</p> <p>Note that pagination cannot be run in parallel: fetching page N requires information from page N-1.</p> Jupyter cell<code>results.to_polars()</code> <pre><code>from fr24 import FR24, FR24Cache\n\ncache = FR24Cache.default()\n\nasync def my_full_list() -&gt; None:\n    async with FR24() as fr24:\n        results = fr24.flight_list.new_result_collection()  # (1)!\n        async for result in fr24.flight_list.fetch_all(reg=\"B-LRA\"):\n            results.append(result)  # (2)!\n            if input() == \"x\":\n                break\n            results.write_table(cache)\n        print(results.to_polars()) # (3)!\n\nawait my_full_list()\n</code></pre> <ol> <li>Create a new result collections, a list under the hood.</li> <li>Appends the current flight list to the collection. Note that it does not remove duplicates.</li> <li>Merges the collections into a single table. Removes duplicates (if any).</li> </ol> <pre><code>shape: (22, 15)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 flight_id \u2506 number \u2506 callsign \u2506 icao24  \u2506 \u2026 \u2506 ATOD        \u2506 STOA       \u2506 ETOA       \u2506 ATOA       \u2502\n\u2502 ---       \u2506 ---    \u2506 ---      \u2506 ---     \u2506   \u2506 ---         \u2506 ---        \u2506 ---        \u2506 ---        \u2502\n\u2502 u64       \u2506 str    \u2506 str      \u2506 u32     \u2506   \u2506 datetime[ms \u2506 datetime[m \u2506 datetime[m \u2506 datetime[m \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 , UTC]      \u2506 s, UTC]    \u2506 s, UTC]    \u2506 s, UTC]    \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 952283415 \u2506 CX382  \u2506 CPA382   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-17  \u2506 2025-01-17 \u2506 null       \u2506 2025-01-17 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 11:14:41    \u2506 22:25:00   \u2506            \u2506 22:15:37   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 952264050 \u2506 CX383  \u2506 CPA383   \u2506 7867035 \u2506 \u2026 \u2506 null        \u2506 null       \u2506 null       \u2506 null       \u2502\n\u2502 952125211 \u2506 CX383  \u2506 CPA383   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-16  \u2506 2025-01-17 \u2506 null       \u2506 2025-01-17 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 17:57:05    \u2506 06:30:00   \u2506            \u2506 06:53:54   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951961210 \u2506 CX710  \u2506 CPA710   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-16  \u2506 2025-01-16 \u2506 null       \u2506 2025-01-16 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 00:15:55    \u2506 03:55:00   \u2506            \u2506 03:38:15   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951777224 \u2506 CX735  \u2506 CPA735   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-15  \u2506 2025-01-15 \u2506 null       \u2506 2025-01-15 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 06:44:49    \u2506 10:25:00   \u2506            \u2506 10:31:32   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 \u2026         \u2506 \u2026      \u2506 \u2026        \u2506 \u2026       \u2506 \u2026 \u2506 \u2026           \u2506 \u2026          \u2506 \u2026          \u2506 \u2026          \u2502\n\u2502 951229708 \u2506 CX624  \u2506 CPA624   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-12  \u2506 2025-01-13 \u2506 null       \u2506 2025-01-13 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 20:15:14    \u2506 01:30:00   \u2506            \u2506 00:59:37   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951146643 \u2506 CX623  \u2506 CPA623   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-12  \u2506 2025-01-12 \u2506 null       \u2506 2025-01-12 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 12:57:58    \u2506 18:55:00   \u2506            \u2506 18:23:19   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951012767 \u2506 CX714  \u2506 CPA714   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-11  \u2506 2025-01-11 \u2506 null       \u2506 2025-01-11 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 18:55:20    \u2506 21:10:00   \u2506            \u2506 22:05:36   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 950956719 \u2506 CX715  \u2506 CPA715   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-11  \u2506 2025-01-11 \u2506 null       \u2506 2025-01-11 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 13:03:44    \u2506 16:25:00   \u2506            \u2506 16:29:15   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 950873921 \u2506 CX162  \u2506 CPA162   \u2506 7867035 \u2506 \u2026 \u2506 2025-01-11  \u2506 2025-01-11 \u2506 null       \u2506 2025-01-11 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 01:09:49    \u2506 09:30:00   \u2506            \u2506 09:41:27   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#playback","title":"Playback","text":""},{"location":"usage/examples/#miracle-on-the-hudson","title":"Miracle on the Hudson","text":"<p>Downloads the flight trajectory for UA1549</p> Jupyter cell<code>data.df</code><code>data.metadata</code> <pre><code>import rich\nfrom fr24 import FR24, FR24Cache\n\nasync def my_playback() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.playback.fetch(0x2FB3041)  # (1)!\n        df = result.to_polars()\n        print(df)\n        rich.print(result.metadata())\n        result.write_table(FR24Cache.default())\n\nawait my_playback()\n</code></pre> <ol> <li>From https://www.flightradar24.com/data/pinned/ua1549-2fb3041#2fb3041.</li> </ol> <pre><code>shape: (363, 9)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 timestamp  \u2506 latitude  \u2506 longitude  \u2506 altitude \u2506 \u2026 \u2506 vertical_spee \u2506 track \u2506 squawk \u2506 ems        \u2502\n\u2502 ---        \u2506 ---       \u2506 ---        \u2506 ---      \u2506   \u2506 d             \u2506 ---   \u2506 ---    \u2506 ---        \u2502\n\u2502 u32        \u2506 f32       \u2506 f32        \u2506 i32      \u2506   \u2506 ---           \u2506 i16   \u2506 u16    \u2506 struct[18] \u2502\n\u2502            \u2506           \u2506            \u2506          \u2506   \u2506 i16           \u2506       \u2506        \u2506            \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 1232049993 \u2506 40.770302 \u2506 -73.862801 \u2506 0        \u2506 \u2026 \u2506 null          \u2506 59    \u2506 0      \u2506 null       \u2502\n\u2502 1232049997 \u2506 40.770302 \u2506 -73.862503 \u2506 0        \u2506 \u2026 \u2506 null          \u2506 65    \u2506 0      \u2506 null       \u2502\n\u2502 1232050001 \u2506 40.770302 \u2506 -73.862198 \u2506 0        \u2506 \u2026 \u2506 null          \u2506 71    \u2506 0      \u2506 null       \u2502\n\u2502 1232050005 \u2506 40.770302 \u2506 -73.862198 \u2506 0        \u2506 \u2026 \u2506 null          \u2506 76    \u2506 0      \u2506 null       \u2502\n\u2502 1232050009 \u2506 40.770302 \u2506 -73.862198 \u2506 0        \u2506 \u2026 \u2506 null          \u2506 82    \u2506 0      \u2506 null       \u2502\n\u2502 \u2026          \u2506 \u2026         \u2506 \u2026          \u2506 \u2026        \u2506 \u2026 \u2506 \u2026             \u2506 \u2026     \u2506 \u2026      \u2506 \u2026          \u2502\n\u2502 1232051425 \u2506 40.781399 \u2506 -73.998199 \u2506 326      \u2506 \u2026 \u2506 null          \u2506 223   \u2506 0      \u2506 null       \u2502\n\u2502 1232051429 \u2506 40.779202 \u2506 -73.999603 \u2506 274      \u2506 \u2026 \u2506 null          \u2506 226   \u2506 0      \u2506 null       \u2502\n\u2502 1232051433 \u2506 40.777199 \u2506 -74.001297 \u2506 187      \u2506 \u2026 \u2506 null          \u2506 222   \u2506 0      \u2506 null       \u2502\n\u2502 1232051437 \u2506 40.775002 \u2506 -74.002899 \u2506 106      \u2506 \u2026 \u2506 null          \u2506 223   \u2506 0      \u2506 null       \u2502\n\u2502 1232051441 \u2506 40.773102 \u2506 -74.004303 \u2506 42       \u2506 \u2026 \u2506 null          \u2506 223   \u2506 0      \u2506 null       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <pre><code>{\n    'flight_id': 50016321,\n    'callsign': 'AWE1549',\n    'flight_number': 'UA1549',\n    'status_type': 'departure',\n    'status_text': None,\n    'status_diverted': None,\n    'status_time': None,\n    'model_code': 'A320',\n    'icao24': 10493137,\n    'registration': 'N106US',\n    'owner': None,\n    'airline': None,\n    'origin': 'KLGA',\n    'destination': 'KCLT',\n    'median_delay': None,\n    'median_time': None\n}\n</code></pre>"},{"location":"usage/examples/#file-operations","title":"File operations","text":"<p>Saves trajectory data to disk, reads the track and metadata from it.</p> Jupyter cell<code>data_local.df</code><code>data_local.metadata</code> <pre><code>import rich\nfrom fr24 import FR24, FR24Cache\n\ncache = FR24Cache.default()\n\nasync def my_playback() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.playback.fetch(0x2FB3041)\n        result.write_table(cache)  # (1)!\n    # some time later...\n    df_local = cache.playback.scan_table(0x2FB3041).collect()  # (2)!\n    print(df_local)\n\nawait my_playback()\n</code></pre> <ol> <li>Saves the parquet to the cache.</li> <li>Load the parquet from the cache.</li> </ol> <pre><code>shape: (363, 9)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 timestamp  \u2506 latitude  \u2506 longitude  \u2506 altitude \u2506 \u2026 \u2506 vertical_spee \u2506 track \u2506 squawk \u2506 ems        \u2502\n\u2502 ---        \u2506 ---       \u2506 ---        \u2506 ---      \u2506   \u2506 d             \u2506 ---   \u2506 ---    \u2506 ---        \u2502\n\u2502 u32        \u2506 f32       \u2506 f32        \u2506 i32      \u2506   \u2506 ---           \u2506 i16   \u2506 u16    \u2506 struct[18] \u2502\n\u2502            \u2506           \u2506            \u2506          \u2506   \u2506 i16           \u2506       \u2506        \u2506            \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 1232049993 \u2506 40.770302 \u2506 -73.862801 \u2506 0        \u2506 \u2026 \u2506 null          \u2506 59    \u2506 0      \u2506 null       \u2502\n\u2502 1232049997 \u2506 40.770302 \u2506 -73.862503 \u2506 0        \u2506 \u2026 \u2506 null          \u2506 65    \u2506 0      \u2506 null       \u2502\n\u2502 1232050001 \u2506 40.770302 \u2506 -73.862198 \u2506 0        \u2506 \u2026 \u2506 null          \u2506 71    \u2506 0      \u2506 null       \u2502\n\u2502 1232050005 \u2506 40.770302 \u2506 -73.862198 \u2506 0        \u2506 \u2026 \u2506 null          \u2506 76    \u2506 0      \u2506 null       \u2502\n\u2502 1232050009 \u2506 40.770302 \u2506 -73.862198 \u2506 0        \u2506 \u2026 \u2506 null          \u2506 82    \u2506 0      \u2506 null       \u2502\n\u2502 \u2026          \u2506 \u2026         \u2506 \u2026          \u2506 \u2026        \u2506 \u2026 \u2506 \u2026             \u2506 \u2026     \u2506 \u2026      \u2506 \u2026          \u2502\n\u2502 1232051425 \u2506 40.781399 \u2506 -73.998199 \u2506 326      \u2506 \u2026 \u2506 null          \u2506 223   \u2506 0      \u2506 null       \u2502\n\u2502 1232051429 \u2506 40.779202 \u2506 -73.999603 \u2506 274      \u2506 \u2026 \u2506 null          \u2506 226   \u2506 0      \u2506 null       \u2502\n\u2502 1232051433 \u2506 40.777199 \u2506 -74.001297 \u2506 187      \u2506 \u2026 \u2506 null          \u2506 222   \u2506 0      \u2506 null       \u2502\n\u2502 1232051437 \u2506 40.775002 \u2506 -74.002899 \u2506 106      \u2506 \u2026 \u2506 null          \u2506 223   \u2506 0      \u2506 null       \u2502\n\u2502 1232051441 \u2506 40.773102 \u2506 -74.004303 \u2506 42       \u2506 \u2026 \u2506 null          \u2506 223   \u2506 0      \u2506 null       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <pre><code>{\n    'flight_id': 50016321,\n    'callsign': 'AWE1549',\n    'flight_number': 'UA1549',\n    'status_type': 'departure',\n    'status_text': None,\n    'status_diverted': None,\n    'status_time': None,\n    'model_code': 'A320',\n    'icao24': 10493137,\n    'registration': 'N106US',\n    'owner': None,\n    'airline': None,\n    'origin': 'KLGA',\n    'destination': 'KCLT',\n    'median_delay': None,\n    'median_time': None\n}\n</code></pre>"},{"location":"usage/examples/#airport-list","title":"Airport List","text":"Jupyter cell<code>df</code> <pre><code>import httpx\n\nfrom fr24.types.json import AirportList\nfrom fr24.json import airport_list, AirportListParams\nfrom fr24.proto.headers import get_grpc_headers\n\nimport polars as pl\n\nasync def my_arrivals() -&gt; AirportList:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        response = await airport_list(\n            client,\n            AirportListParams(airport=\"tls\", mode=\"arrivals\"),\n            headers=headers,\n            auth=None\n        )\n        response.raise_for_status()\n        list_ = response.json()\n        return list_  # type: ignore\n\n\nairports = await my_arrivals()\narrivals = airports[\"result\"][\"response\"][\"airport\"][\"pluginData\"][\"schedule\"][\n    \"arrivals\"\n][\"data\"]\nassert arrivals is not None\ndf = pl.json_normalize(arrivals)\nprint(df)\n</code></pre> <pre><code>shape: (10, 76)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 flight.id \u2506 flight.id \u2506 flight.id \u2506 flight.id \u2506 \u2026 \u2506 flight.ti \u2506 flight.ai \u2506 flight.ow \u2506 flight.a \u2502\n\u2502 entificat \u2506 entificat \u2506 entificat \u2506 entificat \u2506   \u2506 me.other. \u2506 rcraft.im \u2506 ner       \u2506 irline   \u2502\n\u2502 ion.id    \u2506 ion.row   \u2506 ion.numbe \u2506 ion.numbe \u2506   \u2506 duration  \u2506 ages      \u2506 ---       \u2506 ---      \u2502\n\u2502 ---       \u2506 ---       \u2506 r.d\u2026      \u2506 r.a\u2026      \u2506   \u2506 ---       \u2506 ---       \u2506 null      \u2506 null     \u2502\n\u2502 str       \u2506 i64       \u2506 ---       \u2506 ---       \u2506   \u2506 null      \u2506 null      \u2506           \u2506          \u2502\n\u2502           \u2506           \u2506 str       \u2506 str       \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 3963916d  \u2506 563063588 \u2506 AF6132    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 1         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 null      \u2506 563365562 \u2506 null      \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 4         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 39638d76  \u2506 563085809 \u2506 T71527    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 2         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 3963a803  \u2506 563063662 \u2506 AF7408    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 2         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 396399a4  \u2506 563087474 \u2506 U24849    \u2506 EC4849    \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 7         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 null      \u2506 563088423 \u2506 V72371    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 4         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 3963978d  \u2506 563085809 \u2506 T73718    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 1         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 3963ab98  \u2506 563089434 \u2506 XK720     \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 8         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 396398ab  \u2506 563071223 \u2506 FR3903    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 6         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 3963b61f  \u2506 563072081 \u2506 GP155     \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 9         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#airport-search","title":"Airport Search","text":"Jupyter cell<code>df</code> <pre><code>from fr24.types.json import Find\nfrom fr24 import FR24\n\nimport polars as pl\n\n\nasync def my_find() -&gt; Find:\n    async with FR24() as fr24:\n        result = await fr24.find.fetch(query=\"paris\")\n        return result.to_dict()\n\n\nresults = await my_find()\ndf = pl.json_normalize(results[\"results\"])\nprint(df)\n</code></pre> <pre><code>shape: (9, 7)\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id  \u2506 label                         \u2506 type    \u2506 match    \u2506 detail.lat \u2506 detail.lon \u2506 detail.size \u2502\n\u2502 --- \u2506 ---                           \u2506 ---     \u2506 ---      \u2506 ---        \u2506 ---        \u2506 ---         \u2502\n\u2502 str \u2506 str                           \u2506 str     \u2506 str      \u2506 f64        \u2506 f64        \u2506 i64         \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 CDG \u2506 Paris Charles de Gaulle       \u2506 airport \u2506 begins   \u2506 49.012516  \u2506 2.555752   \u2506 201280      \u2502\n\u2502     \u2506 Airpor\u2026                       \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 ORY \u2506 Paris Orly Airport (ORY /     \u2506 airport \u2506 begins   \u2506 48.723331  \u2506 2.379444   \u2506 84510       \u2502\n\u2502     \u2506 LFPO\u2026                         \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 LBG \u2506 Paris Le Bourget Airport (LBG \u2506 airport \u2506 begins   \u2506 48.958801  \u2506 2.4336     \u2506 24465       \u2502\n\u2502     \u2506 \u2026                             \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 BVA \u2506 Paris Beauvais-Tille Airport  \u2506 airport \u2506 begins   \u2506 49.453465  \u2506 2.115138   \u2506 15939       \u2502\n\u2502     \u2506 (\u2026                            \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 VIY \u2506 Paris Villacoublay Velizy Air \u2506 airport \u2506 begins   \u2506 48.774399  \u2506 2.20154    \u2506 1038        \u2502\n\u2502     \u2506 \u2026                             \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 PRX \u2506 Paris Cox Field (PRX / KPRX)  \u2506 airport \u2506 begins   \u2506 33.636665  \u2506 -95.450279 \u2506 953         \u2502\n\u2502 XCR \u2506 Paris Vatry Chalons Airport   \u2506 airport \u2506 begins   \u2506 48.759998  \u2506 4.2        \u2506 710         \u2502\n\u2502     \u2506 (X\u2026                           \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 PHT \u2506 Paris Henry County Airport    \u2506 airport \u2506 begins   \u2506 36.336384  \u2506 -88.38427  \u2506 199         \u2502\n\u2502     \u2506 (PH\u2026                          \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 OPL \u2506 Opelousas St. Landry Parish   \u2506 airport \u2506 contains \u2506 30.555695  \u2506 -92.098915 \u2506 194         \u2502\n\u2502     \u2506 Ai\u2026                           \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#live-feed","title":"Live Feed","text":""},{"location":"usage/examples/#live","title":"Live","text":"<p>This example is covered in detail in the quickstart.</p> Jupyter cell<code>result</code><code>result.to_dict()</code><code>result.to_polars()</code> <pre><code>from fr24 import FR24, FR24Cache, BoundingBox\n\nbbox = BoundingBox(south=42, north=52, west=-8, east=10)\n\nasync def my_feed() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.live_feed.fetch(bbox)\n        print(result)\n        print(result.to_dict())\n        print(result.to_polars())\n        result.write_table(FR24Cache.default())\n\nawait my_feed()\n</code></pre> <pre><code>LiveFeedResult(\n    request=LiveFeedParams(\n        bounding_box=BoundingBox(south=42, north=52, west=-8, east=10),\n        stats=False,\n        limit=1500,\n        maxage=14400,\n        fields={\"reg\", \"route\", \"flight\", \"type\"},\n    ),\n    response=&lt;Response [200 OK]&gt;,\n    timestamp=1753150332,\n)\n</code></pre> <pre><code>{\n    \"flights_list\": [\n        {\n            \"flightid\": 995827034,\n            \"lat\": 43.11081,\n            \"lon\": -4.72674,\n            \"track\": 23,\n            \"alt\": 43000,\n            \"speed\": 513,\n            \"icon\": \"A330\",\n            \"timestamp\": 1753150329,\n            \"callsign\": \"AFR407\",\n            \"extra_info\": {\n                \"flight\": \"AF407\",\n                \"reg\": \"F-HTYA\",\n                \"route\": {\"from\": \"SCL\", \"to\": \"CDG\"},\n                \"type\": \"A359\",\n            },\n            \"position_buffer\": {\n                \"recent_positions_list\": [\n                    {\"delta_lat\": 247, \"delta_lon\": 146, \"delta_ms\": 1088},\n                    {\"delta_lat\": 434, \"delta_lon\": 255, \"delta_ms\": 2013},\n                    {\"delta_lat\": 664, \"delta_lon\": 392, \"delta_ms\": 3038},\n                    {\"delta_lat\": 958, \"delta_lon\": 568, \"delta_ms\": 4375},\n                    {\"delta_lat\": 1172, \"delta_lon\": 699, \"delta_ms\": 5375},\n                    {\"delta_lat\": 1382, \"delta_lon\": 817, \"delta_ms\": 6313},\n                    {\"delta_lat\": 1707, \"delta_lon\": 1013, \"delta_ms\": 7875},\n                    {\"delta_lat\": 2000, \"delta_lon\": 1189, \"delta_ms\": 9163},\n                    {\"delta_lat\": 2252, \"delta_lon\": 1334, \"delta_ms\": 10288},\n                ]\n            },\n            \"timestamp_ms\": \"1753150329391\",\n        },\n        ...\n    ],\n    \"server_time_ms\": \"1753150332065\",\n}\n</code></pre> <pre><code>shape: (171, 18)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 timestamp    \u2506 flightid  \u2506 latitude  \u2506 longitude \u2506 \u2026 \u2506 eta \u2506 squawk \u2506 vertical_spe \u2506 position_bu \u2502\n\u2502 ---          \u2506 ---       \u2506 ---       \u2506 ---       \u2506   \u2506 --- \u2506 ---    \u2506 ed           \u2506 ffer        \u2502\n\u2502 datetime[ms, \u2506 u32       \u2506 f32       \u2506 f32       \u2506   \u2506 u32 \u2506 u16    \u2506 ---          \u2506 ---         \u2502\n\u2502 UTC]         \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506 i16          \u2506 list[struct \u2502\n\u2502              \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 [3]]        \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 2025-07-22   \u2506 995827034 \u2506 43.110809 \u2506 -4.72674  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{247,146,1 \u2502\n\u2502 02:12:09.391 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 088}, {434, \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 255,2013\u2026   \u2502\n\u2502 2025-07-22   \u2506 995947452 \u2506 43.176819 \u2506 -3.079877 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{210,95,10 \u2502\n\u2502 02:12:09.762 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 90}, {421,1 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 91,2110}\u2026   \u2502\n\u2502 2025-07-22   \u2506 995945816 \u2506 42.667923 \u2506 -2.855509 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{45,-137,1 \u2502\n\u2502 02:12:10.242 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 140}, {149, \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 -455,377\u2026   \u2502\n\u2502 2025-07-22   \u2506 995924443 \u2506 45.168983 \u2506 -3.100891 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{299,307,1 \u2502\n\u2502 02:12:10.116 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 540}, {514, \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 529,2610\u2026   \u2502\n\u2502 2025-07-22   \u2506 995916683 \u2506 45.573853 \u2506 -2.016594 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{192,174,9 \u2502\n\u2502 02:12:09.579 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 90}, {370,3 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 28,1880}\u2026   \u2502\n\u2502 \u2026            \u2506 \u2026         \u2506 \u2026         \u2506 \u2026         \u2506 \u2026 \u2506 \u2026   \u2506 \u2026      \u2506 \u2026            \u2506 \u2026           \u2502\n\u2502 2025-07-22   \u2506 995956094 \u2506 51.458233 \u2506 5.390149  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{0,0,4902} \u2502\n\u2502 02:12:06.528 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 , {0,0,1000 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 4}]         \u2502\n\u2502 2025-07-22   \u2506 995956104 \u2506 51.45718  \u2506 5.388998  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{0,0,5030} \u2502\n\u2502 02:12:06.722 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 , {0,0,1010 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 0}]         \u2502\n\u2502 2025-07-22   \u2506 995957785 \u2506 51.915054 \u2506 6.172904  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{21,-324,9 \u2502\n\u2502 02:12:09.788 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 85}, {53,-6 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 82,1980}\u2026   \u2502\n\u2502 2025-07-22   \u2506 995959079 \u2506 51.789047 \u2506 8.022098  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{123,475,2 \u2502\n\u2502 02:12:09.029 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 309}, {186, \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 711,3455\u2026   \u2502\n\u2502 2025-07-22   \u2506 995949304 \u2506 51.774536 \u2506 8.631542  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{27,-527,1 \u2502\n\u2502 02:12:09.460 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 535}, {45,- \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 920,2677\u2026   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\"\"\"\n# %%\nfrom fr24 import FR24, BoundingBox\nimport time\n\nyesterday = int(time.time() - 86400)\nbbox = BoundingBox(south=42, north=52, west=-8, east=10)\n\nasync def my_feed() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.live_feed_playback.fetch(bbox, timestamp=yesterday)\n        print(result.to_polars())\n\nawait my_feed()\n\n# %%\n\"\"\"\nshape: (139, 18)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 timestamp    \u2506 flightid  \u2506 latitude  \u2506 longitude \u2506 \u2026 \u2506 eta \u2506 squawk \u2506 vertical_spe \u2506 position_bu \u2502\n\u2502 ---          \u2506 ---       \u2506 ---       \u2506 ---       \u2506   \u2506 --- \u2506 ---    \u2506 ed           \u2506 ffer        \u2502\n\u2502 datetime[ms, \u2506 u32       \u2506 f32       \u2506 f32       \u2506   \u2506 u32 \u2506 u16    \u2506 ---          \u2506 ---         \u2502\n\u2502 UTC]         \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506 i16          \u2506 list[struct \u2502\n\u2502              \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 [3]]        \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 2025-07-21   \u2506 995593418 \u2506 43.238297 \u2506 -4.690012 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.408 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995708427 \u2506 42.489532 \u2506 1.29364   \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.430 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995704634 \u2506 42.442608 \u2506 -2.886849 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.895 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995658391 \u2506 43.957397 \u2506 -7.309677 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.852 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995709110 \u2506 42.351471 \u2506 4.712822  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:59.310 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 \u2026            \u2506 \u2026         \u2506 \u2026         \u2506 \u2026         \u2506 \u2026 \u2506 \u2026   \u2506 \u2026      \u2506 \u2026            \u2506 \u2026           \u2502\n\u2502 2025-07-21   \u2506 995713747 \u2506 50.823303 \u2506 7.588361  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:59.020 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995713721 \u2506 50.925819 \u2506 7.402649  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.966 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995714247 \u2506 50.87875  \u2506 7.124541  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:54.967 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995715577 \u2506 50.983913 \u2506 7.240559  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.219 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995714961 \u2506 50.878696 \u2506 7.126026  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:59.524 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\"\"\"\n</code></pre>"},{"location":"usage/examples/#playback_1","title":"Playback","text":"<p>Fetches the live feed three days ago.</p> Jupyter cell<code>result.to_polars()</code> <pre><code>from fr24 import FR24, BoundingBox\nimport time\n\nyesterday = int(time.time() - 86400)\nbbox = BoundingBox(south=42, north=52, west=-8, east=10)\n\nasync def my_feed() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.live_feed_playback.fetch(bbox, timestamp=yesterday)\n        print(result.to_polars())\n\nawait my_feed()\n</code></pre> <pre><code>shape: (139, 18)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 timestamp    \u2506 flightid  \u2506 latitude  \u2506 longitude \u2506 \u2026 \u2506 eta \u2506 squawk \u2506 vertical_spe \u2506 position_bu \u2502\n\u2502 ---          \u2506 ---       \u2506 ---       \u2506 ---       \u2506   \u2506 --- \u2506 ---    \u2506 ed           \u2506 ffer        \u2502\n\u2502 datetime[ms, \u2506 u32       \u2506 f32       \u2506 f32       \u2506   \u2506 u32 \u2506 u16    \u2506 ---          \u2506 ---         \u2502\n\u2502 UTC]         \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506 i16          \u2506 list[struct \u2502\n\u2502              \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 [3]]        \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 2025-07-21   \u2506 995593418 \u2506 43.238297 \u2506 -4.690012 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.408 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995708427 \u2506 42.489532 \u2506 1.29364   \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.430 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995704634 \u2506 42.442608 \u2506 -2.886849 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.895 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995658391 \u2506 43.957397 \u2506 -7.309677 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.852 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995709110 \u2506 42.351471 \u2506 4.712822  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:59.310 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 \u2026            \u2506 \u2026         \u2506 \u2026         \u2506 \u2026         \u2506 \u2026 \u2506 \u2026   \u2506 \u2026      \u2506 \u2026            \u2506 \u2026           \u2502\n\u2502 2025-07-21   \u2506 995713747 \u2506 50.823303 \u2506 7.588361  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:59.020 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995713721 \u2506 50.925819 \u2506 7.402649  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.966 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995714247 \u2506 50.87875  \u2506 7.124541  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:54.967 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995715577 \u2506 50.983913 \u2506 7.240559  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:58.219 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 2025-07-21   \u2506 995714961 \u2506 50.878696 \u2506 7.126026  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 []          \u2502\n\u2502 02:15:59.524 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#nearest-flights","title":"Nearest Flights","text":"Jupyter cell<code>result</code><code>result.to_dict()</code><code>result.to_polars()</code> <pre><code>from fr24 import FR24, FR24Cache\n\nasync def my_nearest_flights() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.nearest_flights.fetch(\n            lat=22.31257,\n            lon=113.92708,\n            radius=10000,\n            limit=1500\n        )\n        print(result)\n        print(result.to_dict())\n        print(result.to_polars())\n        result.write_table(FR24Cache.default())\n\nawait my_nearest_flights()\n</code></pre> <pre><code>NearestFlightsResult(\n    request=NearestFlightsParams(\n        lat=22.31257,\n        lon=113.92708,\n        radius=10000,\n        limit=1500\n    ),\n    response=&lt;Response [200 OK]&gt;,\n    timestamp=1748177063\n)\n</code></pre> <pre><code>{\n    'flights_list': [\n        {\n            'flight': {\n                'flightid': 981376678,\n                'lat': 22.315142,\n                'lon': 113.92878,\n                'track': 67,\n                'timestamp': 1748178906,\n                'on_ground': True,\n                'extra_info': {'reg': 'B-18663', 'route': {'from': 'HKG'}, 'type': 'B738', 'logo_id': 86},\n                'timestamp_ms': '1748178906661'\n            },\n            'distance': 334\n        },\n        ...\n        {\n            'flight': {\n                'flightid': 981339515,\n                'lat': 22.305908,\n                'lon': 113.83389,\n                'track': 71,\n                'alt': 875,\n                'speed': 130,\n                'icon': 'A330',\n                'timestamp': 1748178957,\n                'callsign': 'CPA381',\n                'extra_info': {\n                    'flight': 'CX381',\n                    'reg': 'B-LBJ',\n                    'route': {'from': 'PVG', 'to': 'HKG'},\n                    'type': 'A333',\n                    'logo_id': 57\n                },\n                'timestamp_ms': '1748178957019'\n            },\n            'distance': 9629\n        }\n    ]\n}\n</code></pre> <pre><code>shape: (20, 19)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 timestamp  \u2506 flightid  \u2506 latitude  \u2506 longitude  \u2506 \u2026 \u2506 vertical_s \u2506 squawk \u2506 position_ \u2506 distance \u2502\n\u2502 ---        \u2506 ---       \u2506 ---       \u2506 ---        \u2506   \u2506 peed       \u2506 ---    \u2506 buffer    \u2506 ---      \u2502\n\u2502 u32        \u2506 u32       \u2506 f32       \u2506 f32        \u2506   \u2506 ---        \u2506 u16    \u2506 ---       \u2506 u32      \u2502\n\u2502            \u2506           \u2506           \u2506            \u2506   \u2506 i16        \u2506        \u2506 list[stru \u2506          \u2502\n\u2502            \u2506           \u2506           \u2506            \u2506   \u2506            \u2506        \u2506 ct[3]]    \u2506          \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 1748178906 \u2506 981376678 \u2506 22.315142 \u2506 113.92878  \u2506 \u2026 \u2506 0          \u2506 0      \u2506 []        \u2506 334      \u2502\n\u2502 1748178954 \u2506 981376632 \u2506 22.313118 \u2506 113.923676 \u2506 \u2026 \u2506 0          \u2506 0      \u2506 []        \u2506 355      \u2502\n\u2502 1748178953 \u2506 981376221 \u2506 22.31551  \u2506 113.929932 \u2506 \u2026 \u2506 0          \u2506 0      \u2506 []        \u2506 438      \u2502\n\u2502 1748178957 \u2506 981355789 \u2506 22.315166 \u2506 113.923164 \u2506 \u2026 \u2506 0          \u2506 0      \u2506 []        \u2506 495      \u2502\n\u2502 1748178958 \u2506 981375544 \u2506 22.313187 \u2506 113.921371 \u2506 \u2026 \u2506 0          \u2506 0      \u2506 []        \u2506 591      \u2502\n\u2502 \u2026          \u2506 \u2026         \u2506 \u2026         \u2506 \u2026          \u2506 \u2026 \u2506 \u2026          \u2506 \u2026      \u2506 \u2026         \u2506 \u2026        \u2502\n\u2502 1748178954 \u2506 981325451 \u2506 22.310371 \u2506 113.901993 \u2506 \u2026 \u2506 0          \u2506 0      \u2506 []        \u2506 2596     \u2502\n\u2502 1748178953 \u2506 981374338 \u2506 22.299173 \u2506 113.89856  \u2506 \u2026 \u2506 0          \u2506 0      \u2506 []        \u2506 3291     \u2502\n\u2502 1748178957 \u2506 981372281 \u2506 22.297474 \u2506 113.898857 \u2506 \u2026 \u2506 0          \u2506 0      \u2506 []        \u2506 3354     \u2502\n\u2502 1748178957 \u2506 981376434 \u2506 22.293045 \u2506 113.970421 \u2506 \u2026 \u2506 0          \u2506 0      \u2506 []        \u2506 4961     \u2502\n\u2502 1748178957 \u2506 981339515 \u2506 22.305908 \u2506 113.833893 \u2506 \u2026 \u2506 0          \u2506 0      \u2506 []        \u2506 9629     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#live-flights-status","title":"Live Flights Status","text":"<p>Retrieve the flight status for the closest flights from a location</p> Jupyter cell<code>result</code><code>result.to_dict()</code><code>result.to_polars()</code> <pre><code>from fr24 import FR24, FR24Cache\n\nasync def get_nearest_flight_ids(fr24: FR24) -&gt; list[int]:\n    nearest_result = await fr24.nearest_flights.fetch(\n        lat=22.31257, lon=113.92708, radius=10000, limit=1500\n    )\n    return [\n        flight.flight.flightid\n        for flight in nearest_result.to_proto().flights_list\n    ]\n\nasync def my_live_flights_status() -&gt; None:\n    async with FR24() as fr24:\n        nearest_flight_ids = await get_nearest_flight_ids(fr24)\n        result = await fr24.live_flights_status.fetch(\n            flight_ids=nearest_flight_ids[:5]\n        )\n        print(result)\n        print(result.to_dict())\n        print(result.to_polars())\n        result.write_table(FR24Cache.default())\n\n\nawait my_live_flights_status()\n</code></pre> <pre><code>LiveFlightsStatusResult(\n    request=LiveFlightsStatusParams(\n        flight_ids=[981395112, 981399624, 981364304, 981357406, 981398399]\n    ),\n    response=&lt;Response [200 OK]&gt;,\n    timestamp=1748186042\n)\n</code></pre> <pre><code>{\n    'flights_map': [\n        {'flight_id': 981395112, 'data': {'lat': 22.311754, 'lon': 113.92508, 'status': 'LIVE'}},\n        {'flight_id': 981398399, 'data': {'lat': 22.313644, 'lon': 113.915115, 'status': 'LIVE'}},\n        {'flight_id': 981364304, 'data': {'lat': 22.318283, 'lon': 113.928314, 'status': 'LIVE'}},\n        {'flight_id': 981357406, 'data': {'lat': 22.313244, 'lon': 113.934654, 'status': 'LIVE'}},\n        {'flight_id': 981399624, 'data': {'lat': 22.310404, 'lon': 113.93139, 'status': 'LIVE'}}\n    ]\n}\n</code></pre> <pre><code>shape: (5, 5)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 flight_id \u2506 latitude  \u2506 longitude  \u2506 status \u2506 squawk \u2502\n\u2502 ---       \u2506 ---       \u2506 ---        \u2506 ---    \u2506 ---    \u2502\n\u2502 u32       \u2506 f32       \u2506 f32        \u2506 u8     \u2506 u16    \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 981395112 \u2506 22.311754 \u2506 113.925079 \u2506 4      \u2506 0      \u2502\n\u2502 981398399 \u2506 22.313644 \u2506 113.915115 \u2506 4      \u2506 0      \u2502\n\u2502 981364304 \u2506 22.318283 \u2506 113.928314 \u2506 4      \u2506 0      \u2502\n\u2502 981357406 \u2506 22.313244 \u2506 113.934654 \u2506 4      \u2506 0      \u2502\n\u2502 981399624 \u2506 22.310404 \u2506 113.931389 \u2506 4      \u2506 0      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#follow-flight","title":"Follow Flight","text":"<p>Stream real-time updates to the state vector of an aircraft.</p> <p>Note</p> <p>This is a streaming service which endlessly yields the latest updates.</p> <p>Unlike other services, it does not offer a default serialisation strategy (i.e. <code>result.write_parquet</code> does not exist). For a local setup, consider inserting the updates to a SQLite database manually.</p> <p>The first packet of data contains useful initial metadata (<code>aircraft_info</code>, <code>flight_plan</code> and <code>flight_trail_list</code>), which will not be re-transmitted in the subsequent updates.</p> <p>Tip</p> <p>The server often sends state vector packets every 1-60 seconds, but <code>httpx</code> by default closes the stream after 5 seconds. We increase the timeout to 120 seconds to avoid premature closure.</p> Jupyter cell<code>result.to_proto()</code> <pre><code>import httpx\n\nfrom fr24 import FR24\nfrom fr24.proto.v1_pb2 import NearestFlightsResponse\n\nasync def get_nearest_flights(fr24: FR24) -&gt; NearestFlightsResponse:\n    nearest_result = await fr24.nearest_flights.fetch(\n        lat=22.31257, lon=113.92708, radius=10000, limit=1500\n    )\n    return nearest_result.to_proto()\n\nasync def my_follow_flight() -&gt; None:\n    timeout = httpx.Timeout(5, read=120)\n    async with FR24(client=httpx.AsyncClient(timeout=timeout)) as fr24:\n        nearest_flights_result = await get_nearest_flights(fr24)\n        flight_id = nearest_flights_result.flights_list[0].flight.flightid\n        i = 0\n        async for result in fr24.follow_flight.stream(flight_id=flight_id):\n            print(f\"##### {i} #####\")\n            print(result.to_proto())\n            i += 1\n            if i &gt; 2:\n                break\n\nawait my_follow_flight()\n</code></pre> <pre><code>##### 0 #####\naircraft_info {\n  icao_address: 5031041\n  type: \"B744\"\n  icon: B747\n  full_description: \"Boeing 747-48EF\"\n  service: CARGO\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11372499\"\n    copyright: \"R Skywalker\"\n    thumbnail: \"https://cdn.jetphotos.com/200/5/609890_1717848712_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/5/609890_1717848712.jpg\"\n    large: \"https://cdn.jetphotos.com/640/5/609890_1717848712.jpg\"\n  }\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11358154\"\n    copyright: \"Tim-Patrick M\u00fcller\"\n    thumbnail: \"https://cdn.jetphotos.com/200/5/1615840_1716633484_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/5/1615840_1716633484.jpg\"\n    large: \"https://cdn.jetphotos.com/640/5/1615840_1716633484.jpg\"\n  }\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11337719\"\n    copyright: \"Siegi N.\"\n    thumbnail: \"https://cdn.jetphotos.com/200/6/417379_1714816605_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/6/417379_1714816605.jpg\"\n    large: \"https://cdn.jetphotos.com/640/6/417379_1714816605.jpg\"\n  }\n  msn_available: true\n  age_available: true\n  registered_owners: \"Network Aviation\"\n}\nflight_plan {\n}\nschedule_info {\n  flight_number: \"CC4400\"\n  operated_by_id: 437\n  origin_id: 1366\n  actual_departure: 1720074023\n}\nflight_progress {\n  elapsed_time: 1611\n}\nflight_info {\n  flightid: 905705829\n  lat: 21.2512665\n  lon: 112.568764\n  track: 278\n  alt: 31000\n  speed: 512\n  timestamp: 1720075629\n  callsign: \"ABD4400\"\n  ems_availability {\n    amcp_availability: true\n    oat_availability: true\n    tas_availability: true\n    mach_availability: true\n    agps_availability: true\n    agpsdiff_availability: true\n    wind_dir_availability: true\n    wind_speed_availability: true\n  }\n  squawk_availability: true\n  vspeed_availability: true\n  airspace_availability: true\n}\nflight_trail_list {\n  snapshot_id: 1720073072\n  lat: 22.3014889\n  lon: 113.923706\n  heading: 340\n}\nflight_trail_list {\n  snapshot_id: 1720073114\n  lat: 22.3012848\n  lon: 113.92379\n  spd: 3\n  heading: 340\n}\n\n...\n  altitude: 31000\n  spd: 512\n  heading: 278\n}\n\n##### 1 #####\nschedule_info {\n  flight_number: \"CC4400\"\n  operated_by_id: 437\n  origin_id: 1366\n  actual_departure: 1720074023\n}\nflight_progress {\n  elapsed_time: 1615\n}\nflight_info {\n  flightid: 905705829\n  lat: 21.2530975\n  lon: 112.555733\n  track: 278\n  alt: 31000\n  speed: 512\n  timestamp: 1720075634\n  callsign: \"ABD4400\"\n  ems_availability {\n    amcp_availability: true\n    oat_availability: true\n    tas_availability: true\n    mach_availability: true\n    agps_availability: true\n    agpsdiff_availability: true\n    wind_dir_availability: true\n    wind_speed_availability: true\n  }\n  squawk_availability: true\n  vspeed_availability: true\n  airspace_availability: true\n}\n\n##### 2 #####\nschedule_info {\n  flight_number: \"CC4400\"\n  operated_by_id: 437\n  origin_id: 1366\n  actual_departure: 1720074023\n}\nflight_progress {\n  elapsed_time: 1619\n}\nflight_info {\n  flightid: 905705829\n  lat: 21.2530975\n  lon: 112.555733\n  track: 278\n  alt: 31000\n  speed: 512\n  timestamp: 1720075634\n  callsign: \"ABD4400\"\n  ems_availability {\n    amcp_availability: true\n    oat_availability: true\n    tas_availability: true\n    mach_availability: true\n    agps_availability: true\n    agpsdiff_availability: true\n    wind_dir_availability: true\n    wind_speed_availability: true\n  }\n  squawk_availability: true\n  vspeed_availability: true\n  airspace_availability: true\n}\n\n##### 3 #####\nschedule_info {\n  flight_number: \"CC4400\"\n  operated_by_id: 437\n  origin_id: 1366\n  actual_departure: 1720074023\n}\nflight_progress {\n  elapsed_time: 1623\n}\nflight_info {\n  flightid: 905705829\n  lat: 21.2557068\n  lon: 112.537407\n  track: 278\n  alt: 31000\n  speed: 512\n  timestamp: 1720075641\n  callsign: \"ABD4400\"\n...\n</code></pre>"},{"location":"usage/examples/#top-flights","title":"Top Flights","text":"Jupyter cell<code>result</code><code>result.to_dict()</code><code>result.to_polars()</code> <pre><code>from fr24 import FR24, FR24Cache\nfrom rich import print\n\n\nasync def my_top_flights() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.top_flights.fetch(limit=10)\n        print(result)\n        print(result.to_dict())\n        print(result.to_polars())\n        result.write_table(FR24Cache.default())\n\n\nawait my_top_flights()\n</code></pre> <pre><code>TopFlightsResult(\n    request=TopFlightsParams(limit=10),\n    response=&lt;Response [200 OK]&gt;,\n    timestamp=1748188667\n)\n</code></pre> <pre><code>{\n    'scoreboard_list': [\n        {\n            'flight_id': 981367259,\n            'live_clicks': 1438,\n            'total_clicks': 1438,\n            'flight_number': 'DOC72',\n            'callsign': 'DOC72',\n            'from_iata': 'FRG',\n            'from_city': 'Farmingdale',\n            'to_iata': 'FRG',\n            'to_city': 'Farmingdale',\n            'type': 'B29',\n            'full_description': 'Boeing TB-29 Superfortress'\n        },\n        ...\n        {\n            'flight_id': 981290224,\n            'live_clicks': 514,\n            'total_clicks': 514,\n            'flight_number': 'SQ326',\n            'callsign': 'SIA326',\n            'from_iata': 'SIN',\n            'from_city': 'Singapore',\n            'to_iata': 'FRA',\n            'to_city': 'Frankfurt',\n            'type': 'A388',\n            'full_description': 'Airbus A380-841'\n        }\n    ]\n}\n</code></pre> <pre><code>shape: (10, 12)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 flight_id \u2506 live_clicks \u2506 total_clic \u2506 flight_num \u2506 \u2026 \u2506 to_iata \u2506 to_city    \u2506 type \u2506 full_descr \u2502\n\u2502 ---       \u2506 ---         \u2506 ks         \u2506 ber        \u2506   \u2506 ---     \u2506 ---        \u2506 ---  \u2506 iption     \u2502\n\u2502 u32       \u2506 u32         \u2506 ---        \u2506 ---        \u2506   \u2506 str     \u2506 str        \u2506 str  \u2506 ---        \u2502\n\u2502           \u2506             \u2506 u32        \u2506 str        \u2506   \u2506         \u2506            \u2506      \u2506 str        \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 981367259 \u2506 1438        \u2506 1438       \u2506 DOC72      \u2506 \u2026 \u2506 FRG     \u2506 Farmingdal \u2506 B29  \u2506 Boeing     \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506 e          \u2506      \u2506 TB-29 Supe \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 rfortress  \u2502\n\u2502 981383686 \u2506 1066        \u2506 1066       \u2506 RRR4952    \u2506 \u2026 \u2506 RZE     \u2506 Rzeszow    \u2506 A400 \u2506 Airbus     \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 A400M      \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 Atlas      \u2502\n\u2502 981393352 \u2506 890         \u2506 890        \u2506            \u2506 \u2026 \u2506         \u2506            \u2506 DC3  \u2506 Douglas    \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 DC-3C      \u2502\n\u2502 981407748 \u2506 831         \u2506 831        \u2506            \u2506 \u2026 \u2506         \u2506            \u2506 EC35 \u2506 Airbus Hel \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 icopters   \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 H135       \u2502\n\u2502 981398120 \u2506 707         \u2506 707        \u2506            \u2506 \u2026 \u2506 RTM     \u2506 Rotterdam  \u2506 SR22 \u2506 Cirrus     \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 SR22       \u2502\n\u2502 981400483 \u2506 673         \u2506 673        \u2506            \u2506 \u2026 \u2506         \u2506            \u2506 BR23 \u2506 BRM Aero   \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 Bristell   \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 B23        \u2502\n\u2502 981402316 \u2506 616         \u2506 616        \u2506            \u2506 \u2026 \u2506         \u2506            \u2506 DHC6 \u2506 Viking     \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 DHC-6-400  \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 Twin Otter \u2502\n\u2502 981368239 \u2506 554         \u2506 554        \u2506 VJT750     \u2506 \u2026 \u2506 GIG     \u2506 Rio de     \u2506 GL7T \u2506 Bombardier \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506 Janeiro    \u2506      \u2506 Global     \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 7500       \u2502\n\u2502 981404508 \u2506 535         \u2506 535        \u2506            \u2506 \u2026 \u2506         \u2506            \u2506 GLID \u2506 Alexander  \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 Schleicher \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 ASK-23B    \u2502\n\u2502 981290224 \u2506 514         \u2506 514        \u2506 SQ326      \u2506 \u2026 \u2506 FRA     \u2506 Frankfurt  \u2506 A388 \u2506 Airbus     \u2502\n\u2502           \u2506             \u2506            \u2506            \u2506   \u2506         \u2506            \u2506      \u2506 A380-841   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#flight-details","title":"Flight Details","text":"<p>Retrieve detailed information about a flight</p> Jupyter cell<code>result</code><code>result.to_dict()</code><code>result.to_polars()</code> <pre><code>from fr24 import FR24, FR24Cache\n\nasync def get_farthest_flight_id(fr24: FR24) -&gt; int:\n    nearest_result = await fr24.nearest_flights.fetch(\n        lat=22.31257, lon=113.92708, radius=10000, limit=1500\n    )\n    return nearest_result.to_proto().flights_list[-1].flight.flightid\n\nasync def my_flight_details() -&gt; None:\n    async with FR24() as fr24:\n        flight_id = await get_farthest_flight_id(fr24)\n        result = await fr24.flight_details.fetch(flight_id=flight_id)\n        print(result)\n        print(result.to_dict())\n        print(result.to_polars())\n        result.write_table(FR24Cache.default())\n\nawait my_flight_details()\n</code></pre> <pre><code>FlightDetailsResult(\n    request=FlightDetailsParams(flight_id=981435745, restriction_mode=0, verbose=True),\n    response=&lt;Response [200 OK]&gt;,\n    timestamp=1748198596\n)\n</code></pre> <pre><code>{\n    'aircraft_info': {\n        'icao_address': 7901836,\n        'reg': 'B-LPR',\n        'type': 'A321',\n        'icon': 'A320',\n        'full_description': 'Airbus A321-231',\n        'images_list': [\n            {\n                'url': 'https://www.jetphotos.com/photo/11710285',\n                'copyright': 'Hayashi_008',\n                'thumbnail': 'https://cdn.jetphotos.com/200/5/1052205_1745736486_tb.jpg',\n                'medium': 'https://cdn.jetphotos.com/400/5/1052205_1745736486.jpg',\n                'large': 'https://cdn.jetphotos.com/640/5/1052205_1745736486.jpg'\n            },\n            {\n                'url': 'https://www.jetphotos.com/photo/11710266',\n                'copyright': 'Jhang yao yun',\n                'thumbnail': 'https://cdn.jetphotos.com/200/6/430972_1745733519_tb.jpg',\n                'medium': 'https://cdn.jetphotos.com/400/6/430972_1745733519.jpg',\n                'large': 'https://cdn.jetphotos.com/640/6/430972_1745733519.jpg'\n            },\n            {\n                'url': 'https://www.jetphotos.com/photo/11701103',\n                'copyright': 'verduyn',\n                'thumbnail': 'https://cdn.jetphotos.com/200/6/862976_1744865774_tb.jpg',\n                'medium': 'https://cdn.jetphotos.com/400/6/862976_1744865774.jpg',\n                'large': 'https://cdn.jetphotos.com/640/6/862976_1744865774.jpg'\n            }\n        ],\n        'msn_available': True,\n        'age_available': True,\n        'registered_owners': 'Hong Kong Airlines',\n        'is_country_of_reg_available': True\n    },\n    'schedule_info': {\n        'flight_number': 'HX606',\n        'operated_by_id': 641,\n        'painted_as_id': 641,\n        'origin_id': 1366,\n        'destination_id': 2505,\n        'scheduled_departure': 1748198100,\n        'scheduled_arrival': 1748215200,\n        'arr_terminal': '1'\n    },\n    'flight_progress': {\n        'traversed_distance': 2389,\n        'remaining_distance': 2964062,\n        'great_circle_distance': 2963825,\n        'mean_flight_time': 13490,\n        'flight_stage': 'ON_GROUND'\n    },\n    'flight_info': {\n        'flightid': 981435745,\n        'lat': 22.325708,\n        'lon': 113.90078,\n        'track': 250,\n        'speed': 14,\n        'timestamp_ms': '1748198593883',\n        'on_ground': True,\n        'callsign': 'CRK606',\n        'ems_availability': {},\n        'squawk_availability': True,\n        'airspace_availability': True,\n        'server_time_ms': '1748198596450'\n    },\n    'flight_plan': {},\n    'flight_trail_list': [\n        {'snapshot_id': '1748197476', 'lat': 22.30672, 'lon': 113.9181, 'heading': 180},\n        ...\n        {'snapshot_id': '1748198570', 'lat': 22.32614, 'lon': 113.90211, 'spd': 9, 'heading': 247},\n        {'snapshot_id': '1748198575', 'lat': 22.32605, 'lon': 113.901855, 'spd': 10, 'heading': 250}\n    ]\n}\n</code></pre> <pre><code>shape: (1, 31)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 icao_addres \u2506 reg   \u2506 typecode \u2506 flight_numb \u2506 \u2026 \u2506 callsign \u2506 squawk \u2506 ems         \u2506 flight_trai \u2502\n\u2502 s           \u2506 ---   \u2506 ---      \u2506 er          \u2506   \u2506 ---      \u2506 ---    \u2506 ---         \u2506 l_list      \u2502\n\u2502 ---         \u2506 str   \u2506 str      \u2506 ---         \u2506   \u2506 str      \u2506 u16    \u2506 struct[13]  \u2506 ---         \u2502\n\u2502 u32         \u2506       \u2506          \u2506 str         \u2506   \u2506          \u2506        \u2506             \u2506 list[struct \u2502\n\u2502             \u2506       \u2506          \u2506             \u2506   \u2506          \u2506        \u2506             \u2506 [7]]        \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 7901836     \u2506 B-LPR \u2506 A321     \u2506 HX606       \u2506 \u2026 \u2506 CRK606   \u2506 0      \u2506 {0,0,0,0,0, \u2506 [{174819747 \u2502\n\u2502             \u2506       \u2506          \u2506             \u2506   \u2506          \u2506        \u2506 0,0,0,0,0,0 \u2506 6,22.306721 \u2502\n\u2502             \u2506       \u2506          \u2506             \u2506   \u2506          \u2506        \u2506 ,0,0}       \u2506 ,113.918\u2026   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#playback-flight","title":"Playback Flight","text":"<p>Retrieve detailed historical flight information including complete trail</p> Jupyter cell<code>result</code><code>result.to_dict()</code><code>result.to_polars()</code> <pre><code>from fr24 import FR24, FR24Cache\nimport polars as pl\n\n\nasync def get_last_flight(fr24: FR24, *, reg: str = \"B-LRA\") -&gt; tuple[int, int]:\n    flight_list_result = await fr24.flight_list.fetch(reg=reg)\n    df = flight_list_result.to_polars()\n\n    landed = df.filter(pl.col(\"status\").str.starts_with(\"Landed\"))\n    assert landed.height &gt; 0, \"no landed flights found\"\n\n    flight_id = landed[0, \"flight_id\"]\n    stod = int(landed[0, \"ATOD\"].timestamp())\n    return flight_id, stod\n\n\nasync def my_playback_flight() -&gt; None:\n    async with FR24() as fr24:\n        flight_id, timestamp = await get_last_flight(fr24)\n        result = await fr24.playback_flight.fetch(\n            flight_id=flight_id, timestamp=timestamp\n        )\n        print(result)\n        print(result.to_dict())\n        print(result.to_polars())\n        result.write_table(FR24Cache.default())\n\n\nawait my_playback_flight()\n</code></pre> <pre><code>PlaybackFlightResult(\n    request=PlaybackFlightParams(flight_id=981308334, timestamp=1748151914),\n    response=&lt;Response [200 OK]&gt;\n)\n</code></pre> <pre><code>{\n    'aircraft_info': {\n        'icao_address': 7867035,\n        'reg': 'B-LRA',\n        'type': 'A359',\n        'icon': 'A330',\n        'full_description': 'Airbus A350-941',\n        'images_list': [\n            {\n                'url': 'https://www.jetphotos.com/photo/11633658',\n                'copyright': 'lix1aolu',\n                'thumbnail': 'https://cdn.jetphotos.com/200/6/850117_1739185739_tb.jpg',\n                'medium': 'https://cdn.jetphotos.com/400/6/850117_1739185739.jpg',\n                'large': 'https://cdn.jetphotos.com/640/6/850117_1739185739.jpg'\n            },\n            {\n                'url': 'https://www.jetphotos.com/photo/11634217',\n                'copyright': 'Waibibabu',\n                'thumbnail': 'https://cdn.jetphotos.com/200/6/591483_1739217827_tb.jpg',\n                'medium': 'https://cdn.jetphotos.com/400/6/591483_1739217827.jpg',\n                'large': 'https://cdn.jetphotos.com/640/6/591483_1739217827.jpg'\n            },\n            {\n                'url': 'https://www.jetphotos.com/photo/11620028',\n                'copyright': 'ZBAA cao',\n                'thumbnail': 'https://cdn.jetphotos.com/200/6/723478_1737987561_tb.jpg',\n                'medium': 'https://cdn.jetphotos.com/400/6/723478_1737987561.jpg',\n                'large': 'https://cdn.jetphotos.com/640/6/723478_1737987561.jpg'\n            }\n        ],\n        'msn_available': True,\n        'age_available': True,\n        'registered_owners': 'Cathay Pacific',\n        'is_country_of_reg_available': True\n    },\n    'schedule_info': {\n        'flight_number': 'CX758',\n        'operated_by_id': 57,\n        'painted_as_id': 57,\n        'origin_id': 3182,\n        'destination_id': 1366,\n        'scheduled_departure': 1748150700,\n        'scheduled_arrival': 1748165700,\n        'actual_departure': 1748151914,\n        'actual_arrival': 1748164743,\n        'arr_terminal': '1',\n        'baggage_belt': '5'\n    },\n    'flight_info': {\n        'flightid': 981308334,\n        'lat': 1.3314638,\n        'lon': 103.986115,\n        'track': 22,\n        'speed': 55,\n        'timestamp_ms': '1748151902672',\n        'on_ground': True,\n        'callsign': 'CPA758',\n        'ems_availability': {},\n        'squawk_availability': True,\n        'vspeed_availability': True,\n        'airspace_availability': True,\n        'server_time_ms': '1748202193168'\n    },\n    'flight_trail_list': [\n        {'snapshot_id': '1748151113', 'lat': 1.341973, 'lon': 103.98659, 'heading': 202},\n        {'snapshot_id': '1748151183', 'lat': 1.342232, 'lon': 103.98668, 'heading': 208},\n        ...\n        {'snapshot_id': '1748165435', 'lat': 22.314384, 'lon': 113.92283, 'spd': 3, 'heading': 42}\n    ]\n}\n</code></pre> <pre><code>shape: (1, 24)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 icao_addres \u2506 reg   \u2506 typecode \u2506 flight_numb \u2506 \u2026 \u2506 callsign \u2506 squawk \u2506 ems         \u2506 flight_trai \u2502\n\u2502 s           \u2506 ---   \u2506 ---      \u2506 er          \u2506   \u2506 ---      \u2506 ---    \u2506 ---         \u2506 l_list      \u2502\n\u2502 ---         \u2506 str   \u2506 str      \u2506 ---         \u2506   \u2506 str      \u2506 u16    \u2506 struct[13]  \u2506 ---         \u2502\n\u2502 u32         \u2506       \u2506          \u2506 str         \u2506   \u2506          \u2506        \u2506             \u2506 list[struct \u2502\n\u2502             \u2506       \u2506          \u2506             \u2506   \u2506          \u2506        \u2506             \u2506 [7]]        \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 7867035     \u2506 B-LRA \u2506 A359     \u2506 CX758       \u2506 \u2026 \u2506 CPA758   \u2506 0      \u2506 {0,0,0,0,0, \u2506 [{174815111 \u2502\n\u2502             \u2506       \u2506          \u2506             \u2506   \u2506          \u2506        \u2506 0,0,0,0,0,0 \u2506 3,1.341973, \u2502\n\u2502             \u2506       \u2506          \u2506             \u2506   \u2506          \u2506        \u2506 ,0,0}       \u2506 103.9865\u2026   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#low-level-api","title":"Low Level API","text":"<p>For maximum control, you can also use <code>fr24</code> in a procedural style. You will have to manage the headers, authentication yourself. It is highly recommended to use services instead.</p>"},{"location":"usage/examples/#flight-list_1","title":"Flight list","text":"Jupyter cell<code>df</code> <pre><code>import httpx\nfrom datetime import datetime\n\nfrom fr24.authentication import login\nfrom fr24.json import flight_list, flight_list_df, FlightListParams\nfrom fr24.types.json import FlightList\nfrom fr24.proto.headers import get_grpc_headers\n\nasync def my_list() -&gt; FlightList:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        auth = await login(client)\n        if auth is not None:\n            print(auth.get(\"message\"))\n        response = await flight_list(\n            client,\n            FlightListParams(\n                flight=\"AF291\",\n                timestamp=datetime.strptime(\"2025-01-16\", \"%Y-%m-%d\"),  # (1)!\n            ),\n            headers=headers,\n            auth=auth,\n        )\n        response.raise_for_status()\n        list_ = response.json()\n        return list_ # type: ignore\n\n\nlist_ = await my_list()\ndf = flight_list_df(list_)\ndf\n</code></pre> <ol> <li>Replace it with the current time.</li> </ol> <pre><code>shape: (6, 15)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 flight_id \u2506 number \u2506 callsign \u2506 icao24  \u2506 \u2026 \u2506 ATOD        \u2506 STOA       \u2506 ETOA       \u2506 ATOA       \u2502\n\u2502 ---       \u2506 ---    \u2506 ---      \u2506 ---     \u2506   \u2506 ---         \u2506 ---        \u2506 ---        \u2506 ---        \u2502\n\u2502 u64       \u2506 str    \u2506 str      \u2506 u32     \u2506   \u2506 datetime[ms \u2506 datetime[m \u2506 datetime[m \u2506 datetime[m \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 , UTC]      \u2506 s, UTC]    \u2506 s, UTC]    \u2506 s, UTC]    \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 null      \u2506 AF291  \u2506 null     \u2506 null    \u2506 \u2026 \u2506 null        \u2506 2025-01-24 \u2506 null       \u2506 null       \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506             \u2506 18:00:00   \u2506            \u2506            \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506             \u2506 UTC        \u2506            \u2506            \u2502\n\u2502 null      \u2506 AF291  \u2506 null     \u2506 null    \u2506 \u2026 \u2506 null        \u2506 2025-01-22 \u2506 null       \u2506 null       \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506             \u2506 18:00:00   \u2506            \u2506            \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506             \u2506 UTC        \u2506            \u2506            \u2502\n\u2502 null      \u2506 AF291  \u2506 null     \u2506 null    \u2506 \u2026 \u2506 null        \u2506 2025-01-19 \u2506 null       \u2506 null       \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506             \u2506 18:00:00   \u2506            \u2506            \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506             \u2506 UTC        \u2506            \u2506            \u2502\n\u2502 952249857 \u2506 AF291  \u2506 AFR291   \u2506 3789477 \u2506 \u2026 \u2506 2025-01-17  \u2506 2025-01-17 \u2506 null       \u2506 2025-01-17 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 05:13:55    \u2506 18:00:00   \u2506            \u2506 19:30:15   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951756645 \u2506 AF291  \u2506 AFR291   \u2506 3789486 \u2506 \u2026 \u2506 2025-01-15  \u2506 2025-01-15 \u2506 null       \u2506 2025-01-15 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 03:45:20    \u2506 18:00:00   \u2506            \u2506 17:58:06   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2502 951093039 \u2506 AF291  \u2506 AFR291   \u2506 3789475 \u2506 \u2026 \u2506 2025-01-12  \u2506 2025-01-12 \u2506 null       \u2506 2025-01-12 \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 05:15:13    \u2506 18:00:00   \u2506            \u2506 19:03:13   \u2502\n\u2502           \u2506        \u2506          \u2506         \u2506   \u2506 UTC         \u2506 UTC        \u2506            \u2506 UTC        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#playback_2","title":"Playback","text":"Jupyter cell<code>df</code> <pre><code>import httpx\n\nfrom fr24.authentication import login\nfrom fr24.json import playback, playback_df, PlaybackParams\nfrom fr24.types.json import Playback\nfrom fr24.proto.headers import get_grpc_headers\n\nasync def my_playback() -&gt; Playback:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        auth = await login(client)\n        if auth is not None:\n            print(auth.get(\"message\"))\n        response = await playback(\n            client,\n            PlaybackParams(flight_id=\"38c59db3\"),\n            headers=headers,\n            auth=auth,\n        )\n        response.raise_for_status()\n        list_ = response.json()\n        return list_ # type: ignore\n\n\nlist_ = await my_playback()\ndf = playback_df(list_)\ndf\n</code></pre> <pre><code>shape: (203, 9)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 timestamp  \u2506 latitude  \u2506 longitude  \u2506 altitude \u2506 \u2026 \u2506 vertical_spee \u2506 track \u2506 squawk \u2506 ems        \u2502\n\u2502 ---        \u2506 ---       \u2506 ---        \u2506 ---      \u2506   \u2506 d             \u2506 ---   \u2506 ---    \u2506 ---        \u2502\n\u2502 u32        \u2506 f32       \u2506 f32        \u2506 i32      \u2506   \u2506 ---           \u2506 i16   \u2506 u16    \u2506 struct[18] \u2502\n\u2502            \u2506           \u2506            \u2506          \u2506   \u2506 i16           \u2506       \u2506        \u2506            \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 1737166526 \u2506 22.313072 \u2506 113.931381 \u2506 0        \u2506 \u2026 \u2506 0             \u2506 317   \u2506 0      \u2506 null       \u2502\n\u2502 1737166557 \u2506 22.312778 \u2506 113.931618 \u2506 0        \u2506 \u2026 \u2506 0             \u2506 270   \u2506 0      \u2506 null       \u2502\n\u2502 1737166584 \u2506 22.312763 \u2506 113.931953 \u2506 0        \u2506 \u2026 \u2506 0             \u2506 250   \u2506 0      \u2506 null       \u2502\n\u2502 1737166816 \u2506 22.312626 \u2506 113.931557 \u2506 0        \u2506 \u2026 \u2506 0             \u2506 250   \u2506 3041   \u2506 null       \u2502\n\u2502 1737166864 \u2506 22.312477 \u2506 113.931068 \u2506 0        \u2506 \u2026 \u2506 0             \u2506 250   \u2506 3041   \u2506 null       \u2502\n\u2502 \u2026          \u2506 \u2026         \u2506 \u2026          \u2506 \u2026        \u2506 \u2026 \u2506 \u2026             \u2506 \u2026     \u2506 \u2026      \u2506 \u2026          \u2502\n\u2502 1737167965 \u2506 22.200348 \u2506 114.345802 \u2506 13500    \u2506 \u2026 \u2506 3328          \u2506 142   \u2506 3041   \u2506 null       \u2502\n\u2502 1737167997 \u2506 22.154388 \u2506 114.382454 \u2506 14850    \u2506 \u2026 \u2506 1536          \u2506 143   \u2506 3041   \u2506 null       \u2502\n\u2502 1737168028 \u2506 22.107239 \u2506 114.419304 \u2506 16050    \u2506 \u2026 \u2506 2368          \u2506 143   \u2506 3041   \u2506 null       \u2502\n\u2502 1737168060 \u2506 22.059942 \u2506 114.456535 \u2506 17200    \u2506 \u2026 \u2506 2048          \u2506 143   \u2506 3041   \u2506 null       \u2502\n\u2502 1737168092 \u2506 22.008501 \u2506 114.497017 \u2506 18350    \u2506 \u2026 \u2506 2048          \u2506 143   \u2506 3041   \u2506 null       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#airport-list_1","title":"Airport List","text":"Jupyter cell<code>df</code> <pre><code>import httpx\n\nfrom fr24.types.json import AirportList\nfrom fr24.json import airport_list, AirportListParams\nfrom fr24.proto.headers import get_grpc_headers\n\nimport polars as pl\n\nasync def my_arrivals() -&gt; AirportList:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        response = await airport_list(\n            client,\n            AirportListParams(airport=\"tls\", mode=\"arrivals\"),\n            headers=headers,\n            auth=None\n        )\n        response.raise_for_status()\n        list_ = response.json()\n        return list_  # type: ignore\n\n\nairports = await my_arrivals()\narrivals = airports[\"result\"][\"response\"][\"airport\"][\"pluginData\"][\"schedule\"][\n    \"arrivals\"\n][\"data\"]\nassert arrivals is not None\ndf = pl.json_normalize(arrivals)\nprint(df)\n</code></pre> <pre><code>shape: (10, 76)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 flight.id \u2506 flight.id \u2506 flight.id \u2506 flight.id \u2506 \u2026 \u2506 flight.ti \u2506 flight.ai \u2506 flight.ow \u2506 flight.a \u2502\n\u2502 entificat \u2506 entificat \u2506 entificat \u2506 entificat \u2506   \u2506 me.other. \u2506 rcraft.im \u2506 ner       \u2506 irline   \u2502\n\u2502 ion.id    \u2506 ion.row   \u2506 ion.numbe \u2506 ion.numbe \u2506   \u2506 duration  \u2506 ages      \u2506 ---       \u2506 ---      \u2502\n\u2502 ---       \u2506 ---       \u2506 r.d\u2026      \u2506 r.a\u2026      \u2506   \u2506 ---       \u2506 ---       \u2506 null      \u2506 null     \u2502\n\u2502 str       \u2506 i64       \u2506 ---       \u2506 ---       \u2506   \u2506 null      \u2506 null      \u2506           \u2506          \u2502\n\u2502           \u2506           \u2506 str       \u2506 str       \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 3963916d  \u2506 563063588 \u2506 AF6132    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 1         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 null      \u2506 563365562 \u2506 null      \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 4         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 39638d76  \u2506 563085809 \u2506 T71527    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 2         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 3963a803  \u2506 563063662 \u2506 AF7408    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 2         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 396399a4  \u2506 563087474 \u2506 U24849    \u2506 EC4849    \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 7         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 null      \u2506 563088423 \u2506 V72371    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 4         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 3963978d  \u2506 563085809 \u2506 T73718    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 1         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 3963ab98  \u2506 563089434 \u2506 XK720     \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 8         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 396398ab  \u2506 563071223 \u2506 FR3903    \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 6         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2502 3963b61f  \u2506 563072081 \u2506 GP155     \u2506 null      \u2506 \u2026 \u2506 null      \u2506 null      \u2506 null      \u2506 null     \u2502\n\u2502           \u2506 9         \u2506           \u2506           \u2506   \u2506           \u2506           \u2506           \u2506          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#airport-search_1","title":"Airport Search","text":"Jupyter cell<code>df</code> <pre><code>from fr24.types.json import Find\nfrom fr24.json import find, FindParams\nfrom fr24.proto.headers import get_grpc_headers\n\nimport polars as pl\nimport httpx\n\nasync def my_find() -&gt; Find:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        response = await find(\n            client,\n            FindParams(query=\"paris\"),\n            headers=headers,\n            auth=None\n        )\n        response.raise_for_status()\n        results = response.json()\n        return results  # type: ignore\n\n\nresults = await my_find()\ndf = pl.json_normalize(results[\"results\"])\nprint(df)\n</code></pre> <pre><code>shape: (9, 7)\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 id  \u2506 label                         \u2506 type    \u2506 match    \u2506 detail.lat \u2506 detail.lon \u2506 detail.size \u2502\n\u2502 --- \u2506 ---                           \u2506 ---     \u2506 ---      \u2506 ---        \u2506 ---        \u2506 ---         \u2502\n\u2502 str \u2506 str                           \u2506 str     \u2506 str      \u2506 f64        \u2506 f64        \u2506 i64         \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 CDG \u2506 Paris Charles de Gaulle       \u2506 airport \u2506 begins   \u2506 49.012516  \u2506 2.555752   \u2506 201280      \u2502\n\u2502     \u2506 Airpor\u2026                       \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 ORY \u2506 Paris Orly Airport (ORY /     \u2506 airport \u2506 begins   \u2506 48.723331  \u2506 2.379444   \u2506 84510       \u2502\n\u2502     \u2506 LFPO\u2026                         \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 LBG \u2506 Paris Le Bourget Airport (LBG \u2506 airport \u2506 begins   \u2506 48.958801  \u2506 2.4336     \u2506 24465       \u2502\n\u2502     \u2506 \u2026                             \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 BVA \u2506 Paris Beauvais-Tille Airport  \u2506 airport \u2506 begins   \u2506 49.453465  \u2506 2.115138   \u2506 15939       \u2502\n\u2502     \u2506 (\u2026                            \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 VIY \u2506 Paris Villacoublay Velizy Air \u2506 airport \u2506 begins   \u2506 48.774399  \u2506 2.20154    \u2506 1038        \u2502\n\u2502     \u2506 \u2026                             \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 PRX \u2506 Paris Cox Field (PRX / KPRX)  \u2506 airport \u2506 begins   \u2506 33.636665  \u2506 -95.450279 \u2506 953         \u2502\n\u2502 XCR \u2506 Paris Vatry Chalons Airport   \u2506 airport \u2506 begins   \u2506 48.759998  \u2506 4.2        \u2506 710         \u2502\n\u2502     \u2506 (X\u2026                           \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 PHT \u2506 Paris Henry County Airport    \u2506 airport \u2506 begins   \u2506 36.336384  \u2506 -88.38427  \u2506 199         \u2502\n\u2502     \u2506 (PH\u2026                          \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2502 OPL \u2506 Opelousas St. Landry Parish   \u2506 airport \u2506 contains \u2506 30.555695  \u2506 -92.098915 \u2506 194         \u2502\n\u2502     \u2506 Ai\u2026                           \u2506         \u2506          \u2506            \u2506            \u2506             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/examples/#live-feed_1","title":"Live feed","text":"<p>Demonstrates custom bounding boxes.</p> Jupyter cellProtobuf Output <pre><code>import httpx\nfrom fr24.grpc import (\n    LiveFeedParams,\n    BoundingBox,\n    live_feed,\n)\nfrom fr24.proto.v1_pb2 import LiveFeedResponse\nfrom fr24.proto import parse_data\nfrom fr24.proto.headers import get_grpc_headers\n\nasync def france_data() -&gt; LiveFeedResponse:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        params = LiveFeedParams(bounding_box=BoundingBox(north=50, west=-7, south=40, east=10))\n        response = await live_feed(client, params, headers)\n        result = parse_data(response.content, LiveFeedResponse)\n        return result.unwrap() # (1)!\n\n\ndata = await france_data()\ndata\n</code></pre> <ol> <li>The type is a <code>Result[LiveFeedResponse, ProtoError]</code>, calling the <code>.unwrap()</code> method raises an exception if there is an error.</li> </ol> <pre><code>flights_list {\n  flightid: 941292228\n  lat: 40.0058289\n  lon: -5.02393532\n  track: 225\n  alt: 26800\n  speed: 427\n  icon: A320\n  timestamp: 1732481230\n  callsign: \"IBS15MA\"\n  extra_info {\n    flight: \"IB1589\"\n    reg: \"EC-OAS\"\n    route {\n      from: \"MAD\"\n      to: \"TFN\"\n    }\n    type: \"A21N\"\n  }\n  position_buffer {\n    recent_positions_list {\n      delta_lat: -418\n      delta_lon: -562\n      delta_ms: 3000\n    }\n...\n      delta_lon: -1958\n      delta_ms: 10000\n    }\n  }\n}\n</code></pre> <p>In JSON format:</p> Jupyter cellOutput <pre><code>from google.protobuf.json_format import MessageToDict\n\nMessageToDict(data)[\"flightsList\"]\n</code></pre> <pre><code>[{'flightid': 941292228,\n  'lat': 40.00583,\n  'lon': -5.0239353,\n  'track': 225,\n  'alt': 26800,\n  'speed': 427,\n  'icon': 'A320',\n  'timestamp': 1732481230,\n  'callsign': 'IBS15MA',\n  'extraInfo': {'flight': 'IB1589',\n   'reg': 'EC-OAS',\n   'route': {'from': 'MAD', 'to': 'TFN'},\n   'type': 'A21N'},\n  'positionBuffer': {'recentPositionsList': [{'deltaLat': -418,\n     'deltaLon': -562,\n     'deltaMs': 3000}]}},\n {'flightid': 941277503,\n  'lat': 40.050613,\n  'lon': -6.7190137,\n  'track': 24,\n  'alt': 38000,\n  'speed': 481,\n  'icon': 'A320',\n  'timestamp': 1732481230,\n  'callsign': 'VOE2RY',\n...\n  'positionBuffer': {'recentPositionsList': [{'deltaLat': 315,\n     'deltaLon': -660,\n     'deltaMs': 3000},\n    {'deltaLat': 553, 'deltaLon': -1170, 'deltaMs': 6000},\n    {'deltaLat': 929, 'deltaLon': -1958, 'deltaMs': 10000}]}}]\n</code></pre>"},{"location":"usage/examples/#nearest-flights_1","title":"Nearest Flights","text":"Jupyter cellProtobuf Output <pre><code>import httpx\nfrom fr24.grpc import nearest_flights\nfrom fr24.proto.v1_pb2 import NearestFlightsResponse, NearestFlightsRequest, Geolocation\nfrom fr24.proto import parse_data\nfrom fr24.proto.headers import get_grpc_headers\n\nasync def nearest_flights_data() -&gt; NearestFlightsResponse:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        message = NearestFlightsRequest(\n            location=Geolocation(lat=22.31257, lon=113.92708),\n            radius=1000,\n            limit=1500\n        )\n        response = await nearest_flights(client, message, headers)\n        return parse_data(response.content, NearestFlightsResponse).unwrap()\n\n\ndata = await nearest_flights_data()\ndata\n</code></pre> <pre><code>flights_list {\n  flight {\n    flightid: 905701578\n    lat: 22.3095245\n    lon: 113.930717\n    track: 78\n    speed: 9\n    timestamp: 1720071634\n    on_ground: true\n    callsign: \"CES502\"\n    extra_info {\n      flight: \"MU502\"\n      reg: \"B-1908\"\n      route {\n        from: \"HKG\"\n        to: \"PVG\"\n      }\n      type: \"B738\"\n      logo_id: 131\n    }\n  }\n  distance: 504\n}\nflights_list {\n  flight {\n...\n      logo_id: 335\n    }\n  }\n  distance: 783\n}\n</code></pre>"},{"location":"usage/examples/#live-flight-status","title":"Live Flight Status","text":"Jupyter cellProtobuf Output <pre><code>import httpx\nfrom fr24.grpc import live_flights_status\nfrom fr24.proto.v1_pb2 import (\n    LiveFlightsStatusRequest,\n    LiveFlightsStatusResponse,\n)\nfrom fr24.proto import parse_data\nfrom fr24.proto.headers import get_grpc_headers\n\nasync def live_flights_status_data() -&gt; LiveFlightsStatusResponse:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        message = LiveFlightsStatusRequest(\n            flight_ids_list=[0x35FBC363, 0x35FBF180]\n        )\n        response = await live_flights_status(client, message, headers)\n        return parse_data(response.content, LiveFlightsStatusResponse).unwrap()\n\ndata = await live_flights_status_data()\ndata\n</code></pre> <pre><code>flights_map {\n  flight_id: 905703808\n  data {\n    lat: 21.7237415\n    lon: 114.917908\n    status: LIVE\n  }\n}\nflights_map {\n  flight_id: 905692003\n  data {\n    lat: 21.9285736\n    lon: 113.912445\n    status: LIVE\n  }\n}\n</code></pre>"},{"location":"usage/examples/#search-index","title":"Search Index","text":"<p>Unstable API: returns empty <code>DATA</code> frame</p> Jupyter cellProtobuf Output <pre><code>import httpx\nfrom fr24.grpc import search_index\nfrom fr24.proto.v1_pb2 import FetchSearchIndexRequest, FetchSearchIndexResponse\nfrom fr24.proto import parse_data\nfrom fr24.proto.headers import get_grpc_headers\n\nasync def search_index_data() -&gt; FetchSearchIndexResponse:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        message = FetchSearchIndexRequest()\n        response = await search_index(client, message, headers)\n        return parse_data(response.content, FetchSearchIndexResponse).unwrap()\n\n\ndata = await search_index_data()\ndata\n</code></pre> <pre><code>GrpcError('empty DATA frame')\n</code></pre>"},{"location":"usage/examples/#follow-flight_1","title":"Follow Flight","text":"<p>See above for more information.</p> Jupyter cellProtobuf Output <pre><code>import httpx\nfrom fr24.grpc import follow_flight_stream\nfrom fr24.proto.v1_pb2 import FollowFlightRequest, FollowFlightResponse\nfrom fr24.proto import parse_data\nfrom fr24.proto.headers import get_grpc_headers\n\n\nasync def follow_flight_data() -&gt; None:\n    timeout = httpx.Timeout(5, read=120)\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient(timeout=timeout) as client:\n        message = FollowFlightRequest(flight_id=0x395C43CF)\n        i = 0\n        async for response in follow_flight_stream(client, message, headers):\n            print(f\"##### {i} #####\")\n            print(parse_data(response, FollowFlightResponse))\n            i += 1\n            if i &gt; 3:\n                break\n\n\nawait follow_flight_data()\n</code></pre> <pre><code>##### 0 #####\naircraft_info {\n  icao_address: 5031041\n  type: \"B744\"\n  icon: B747\n  full_description: \"Boeing 747-48EF\"\n  service: CARGO\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11372499\"\n    copyright: \"R Skywalker\"\n    thumbnail: \"https://cdn.jetphotos.com/200/5/609890_1717848712_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/5/609890_1717848712.jpg\"\n    large: \"https://cdn.jetphotos.com/640/5/609890_1717848712.jpg\"\n  }\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11358154\"\n    copyright: \"Tim-Patrick M\u00fcller\"\n    thumbnail: \"https://cdn.jetphotos.com/200/5/1615840_1716633484_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/5/1615840_1716633484.jpg\"\n    large: \"https://cdn.jetphotos.com/640/5/1615840_1716633484.jpg\"\n  }\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11337719\"\n    copyright: \"Siegi N.\"\n    thumbnail: \"https://cdn.jetphotos.com/200/6/417379_1714816605_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/6/417379_1714816605.jpg\"\n    large: \"https://cdn.jetphotos.com/640/6/417379_1714816605.jpg\"\n  }\n  msn_available: true\n  age_available: true\n  registered_owners: \"Network Aviation\"\n}\nflight_plan {\n}\nschedule_info {\n  flight_number: \"CC4400\"\n  operated_by_id: 437\n  origin_id: 1366\n  actual_departure: 1720074023\n}\nflight_progress {\n  elapsed_time: 1611\n}\nflight_info {\n  flightid: 905705829\n  lat: 21.2512665\n  lon: 112.568764\n  track: 278\n  alt: 31000\n  speed: 512\n  timestamp: 1720075629\n  callsign: \"ABD4400\"\n  ems_availability {\n    amcp_availability: true\n    oat_availability: true\n    tas_availability: true\n    mach_availability: true\n    agps_availability: true\n    agpsdiff_availability: true\n    wind_dir_availability: true\n    wind_speed_availability: true\n  }\n  squawk_availability: true\n  vspeed_availability: true\n  airspace_availability: true\n}\nflight_trail_list {\n  snapshot_id: 1720073072\n  lat: 22.3014889\n  lon: 113.923706\n  heading: 340\n}\nflight_trail_list {\n  snapshot_id: 1720073114\n  lat: 22.3012848\n  lon: 113.92379\n  spd: 3\n  heading: 340\n}\n\n...\n  altitude: 31000\n  spd: 512\n  heading: 278\n}\n\n##### 1 #####\nschedule_info {\n  flight_number: \"CC4400\"\n  operated_by_id: 437\n  origin_id: 1366\n  actual_departure: 1720074023\n}\nflight_progress {\n  elapsed_time: 1615\n}\nflight_info {\n  flightid: 905705829\n  lat: 21.2530975\n  lon: 112.555733\n  track: 278\n  alt: 31000\n  speed: 512\n  timestamp: 1720075634\n  callsign: \"ABD4400\"\n  ems_availability {\n    amcp_availability: true\n    oat_availability: true\n    tas_availability: true\n    mach_availability: true\n    agps_availability: true\n    agpsdiff_availability: true\n    wind_dir_availability: true\n    wind_speed_availability: true\n  }\n  squawk_availability: true\n  vspeed_availability: true\n  airspace_availability: true\n}\n\n##### 2 #####\nschedule_info {\n  flight_number: \"CC4400\"\n  operated_by_id: 437\n  origin_id: 1366\n  actual_departure: 1720074023\n}\nflight_progress {\n  elapsed_time: 1619\n}\nflight_info {\n  flightid: 905705829\n  lat: 21.2530975\n  lon: 112.555733\n  track: 278\n  alt: 31000\n  speed: 512\n  timestamp: 1720075634\n  callsign: \"ABD4400\"\n  ems_availability {\n    amcp_availability: true\n    oat_availability: true\n    tas_availability: true\n    mach_availability: true\n    agps_availability: true\n    agpsdiff_availability: true\n    wind_dir_availability: true\n    wind_speed_availability: true\n  }\n  squawk_availability: true\n  vspeed_availability: true\n  airspace_availability: true\n}\n\n##### 3 #####\nschedule_info {\n  flight_number: \"CC4400\"\n  operated_by_id: 437\n  origin_id: 1366\n  actual_departure: 1720074023\n}\nflight_progress {\n  elapsed_time: 1623\n}\nflight_info {\n  flightid: 905705829\n  lat: 21.2557068\n  lon: 112.537407\n  track: 278\n  alt: 31000\n  speed: 512\n  timestamp: 1720075641\n  callsign: \"ABD4400\"\n...\n</code></pre>"},{"location":"usage/examples/#top-flights_1","title":"Top Flights","text":"Jupyter cellProtobuf Output <pre><code>import httpx\nfrom fr24.grpc import top_flights\nfrom fr24.proto.v1_pb2 import TopFlightsRequest, TopFlightsResponse\nfrom fr24.proto import parse_data\nfrom fr24.proto.headers import get_grpc_headers\n\n\nasync def top_flights_data() -&gt; TopFlightsResponse:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        message = TopFlightsRequest(limit=10)\n        response = await top_flights(client, message, headers)\n        return parse_data(response.content, TopFlightsResponse).unwrap()\n\n\ndata = await top_flights_data()\ndata\n</code></pre> <pre><code>scoreboard_list {\n  flight_id: 911336284\n  live_clicks: 1648\n  total_clicks: 6664\n  callsign: \"LEE92\"\n  from_iata: \"QKG\"\n  from_city: \"Leeming\"\n  type: \"HUNT\"\n  full_description: \"Hawker Hunter T2\"\n}\nscoreboard_list {\n  flight_id: 911326556\n  live_clicks: 1144\n  total_clicks: 8848\n  callsign: \"SARAB\"\n  type: \"HAWK\"\n  full_description: \"British Aerospace Hawk Mk167\"\n}\nscoreboard_list {\n  flight_id: 911338539\n  live_clicks: 904\n  total_clicks: 1764\n  flight_number: \"TN80001\"\n  callsign: \"TN080001\"\n  from_iata: \"QCY\"\n...\n  to_iata: \"RMQ\"\n  to_city: \"Taichung\"\n  type: \"B738\"\n  full_description: \"Boeing 737-8AL\"\n}\n</code></pre>"},{"location":"usage/examples/#live-trail","title":"Live Trail","text":"<p>Unstable API: returns empty <code>DATA</code> frame as of Sep 2024</p> Jupyter cellProtobuf Output <pre><code>import httpx\nfrom fr24.grpc import live_trail\nfrom fr24.proto.v1_pb2 import LiveTrailRequest, LiveTrailResponse\nfrom fr24.proto import parse_data\nfrom fr24.proto.headers import get_grpc_headers\n\n\nasync def live_trail_data() -&gt; LiveTrailResponse:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        message = LiveTrailRequest(flight_id=0x395c43cf)\n        response = await live_trail(client, message, headers)\n        return parse_data(response.content, LiveTrailResponse).unwrap()\n\n\ndata = await live_trail_data()\ndata\n</code></pre> <pre><code>radar_records_list {\n  timestamp: 1720064455\n  lat: 30.2406578\n  lon: 120.420403\n  spd: 15\n  heading: 61\n  callsign: \"CPA959\"\n}\nradar_records_list {\n  timestamp: 1720064462\n  lat: 30.2408924\n  lon: 120.420937\n  heading: 61\n  callsign: \"CPA959\"\n}\nradar_records_list {\n  timestamp: 1720064480\n  lat: 30.2415791\n  lon: 120.422478\n  spd: 18\n  heading: 61\n  callsign: \"CPA959\"\n}\nradar_records_list {\n  timestamp: 1720064488\n...\n  heading: 269\n  vspd: -960\n  squawk: 13874\n  callsign: \"CPA959\"\n}\n...\n</code></pre>"},{"location":"usage/examples/#historic-trail","title":"Historic Trail","text":"<p>Unstable API: gateway timeout</p> Jupyter cellProtobuf Output <pre><code>import httpx\nfrom fr24.grpc import historic_trail\nfrom fr24.proto.v1_pb2 import HistoricTrailRequest, HistoricTrailResponse\nfrom fr24.proto import parse_data\nfrom fr24.proto.headers import get_grpc_headers\n\nasync def historic_trail_data() -&gt; HistoricTrailResponse:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        message = HistoricTrailRequest(flight_id=0x395c43cf)\n        response = await historic_trail(client, message, headers)\n        return parse_data(response.content, HistoricTrailResponse).unwrap()\n\ndata = await historic_trail_data()\ndata\n</code></pre> <pre><code>504 GATEWAY TIMEOUT\n</code></pre>"},{"location":"usage/examples/#flight-details_1","title":"Flight Details","text":"Jupyter cellProtobuf Output <pre><code>import httpx\nfrom fr24.grpc import (\n    FlightDetailsParams,\n    flight_details,\n)\nfrom fr24.proto.v1_pb2 import FlightDetailsResponse\nfrom fr24.proto import parse_data\nfrom fr24.proto.headers import get_grpc_headers\n\n\nasync def flight_details_data() -&gt; FlightDetailsResponse:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        params = FlightDetailsParams(flight_id=0x3a7e02c1)\n        response = await flight_details(client, params, headers)\n        return parse_data(response.content, FlightDetailsResponse).unwrap()\n\ndata = await flight_details_data()\ndata\n</code></pre> <pre><code>aircraft_info {\n  icao_address: 7901761\n  reg: \"B-LQD\"\n  type: \"A359\"\n  icon: A330\n  full_description: \"Airbus A350-941\"\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11697954\"\n    copyright: \"David Li\"\n    thumbnail: \"https://cdn.jetphotos.com/200/5/675179_1744593599_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/5/675179_1744593599.jpg\"\n    large: \"https://cdn.jetphotos.com/640/5/675179_1744593599.jpg\"\n  }\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11703546\"\n    copyright: \"Michael Eaton\"\n    thumbnail: \"https://cdn.jetphotos.com/200/6/528687_1745054061_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/6/528687_1745054061.jpg\"\n    large: \"https://cdn.jetphotos.com/640/6/528687_1745054061.jpg\"\n  }\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11682674\"\n    copyright: \"Dominic Oakes\"\n    thumbnail: \"https://cdn.jetphotos.com/200/6/649488_1743374705_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/6/649488_1743374705.jpg\"\n    large: \"https://cdn.jetphotos.com/640/6/649488_1743374705.jpg\"\n  }\n  msn_available: true\n  age_available: true\n  registered_owners: \"Cathay Pacific\"\n  is_country_of_reg_available: true\n}\nschedule_info {\n  flight_number: \"CX748\"\n  operated_by_id: 57\n  painted_as_id: 57\n  origin_id: 1627\n  destination_id: 1366\n  scheduled_departure: 1748164800\n  scheduled_arrival: 1748212200\n  actual_departure: 1748165560\n  arr_terminal: \"1\"\n}\nflight_progress {\n  traversed_distance: 8271718\n  remaining_distance: 2474032\n  elapsed_time: 33428\n  remaining_time: 11700\n  eta: 1748210688\n  great_circle_distance: 10671581\n  mean_flight_time: 44471\n  flight_stage: AIRBORNE\n  delay_status: GREEN\n  progress_pct: 74\n}\nflight_info {\n  flightid: 981336769\n  lat: 7.2621026\n  lon: 96.8550873\n  track: 60\n  alt: 41000\n  speed: 446\n  timestamp_ms: 1748198985330\n  callsign: \"CPA748\"\n  ems_availability {\n    qnh_availability: true\n    amcp_availability: true\n    oat_availability: true\n    ias_availability: true\n    tas_availability: true\n    mach_availability: true\n    agps_availability: true\n    agpsdiff_availability: true\n    wind_dir_availability: true\n    wind_speed_availability: true\n  }\n  squawk_availability: true\n  vspeed_availability: true\n  airspace_availability: true\n  server_time_ms: 1748198988037\n}\nflight_plan {\n}\nflight_trail_list {\n  snapshot_id: 1748164567\n  lat: -26.1300163\n  lon: 28.23349\n  heading: 320\n}\n...\nflight_trail_list {\n  snapshot_id: 1748198963\n  lat: 7.23896599\n  lon: 96.814743\n  altitude: 41000\n  spd: 445\n  heading: 60\n}\n</code></pre>"},{"location":"usage/examples/#playback-flight_1","title":"Playback Flight","text":"Jupyter cellProtobuf Output <pre><code>import httpx\nfrom fr24.grpc import (\n    PlaybackFlightParams,\n    playback_flight,\n)\nfrom fr24.proto.v1_pb2 import PlaybackFlightResponse\nfrom fr24.proto import parse_data\nfrom fr24.proto.headers import get_grpc_headers\n\n\nasync def playback_flight_data() -&gt; PlaybackFlightResponse:\n    headers = httpx.Headers(get_grpc_headers(auth=None))\n    async with httpx.AsyncClient() as client:\n        message = PlaybackFlightParams(flight_id=0x3a6d881a, timestamp=1747794900)\n        response = await playback_flight(client, message, headers)\n        return parse_data(response.content, PlaybackFlightResponse).unwrap()\n\ndata = await playback_flight_data()\ndata\n</code></pre> <pre><code>aircraft_info {\n  icao_address: 7867035\n  type: \"A359\"\n  icon: A330\n  full_description: \"Airbus A350-941\"\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11633658\"\n    copyright: \"lix1aolu\"\n    thumbnail: \"https://cdn.jetphotos.com/200/6/850117_1739185739_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/6/850117_1739185739.jpg\"\n    large: \"https://cdn.jetphotos.com/640/6/850117_1739185739.jpg\"\n  }\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11634217\"\n    copyright: \"Waibibabu\"\n    thumbnail: \"https://cdn.jetphotos.com/200/6/591483_1739217827_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/6/591483_1739217827.jpg\"\n    large: \"https://cdn.jetphotos.com/640/6/591483_1739217827.jpg\"\n  }\n  images_list {\n    url: \"https://www.jetphotos.com/photo/11620028\"\n    copyright: \"ZBAA cao\"\n    thumbnail: \"https://cdn.jetphotos.com/200/6/723478_1737987561_tb.jpg\"\n    medium: \"https://cdn.jetphotos.com/400/6/723478_1737987561.jpg\"\n    large: \"https://cdn.jetphotos.com/640/6/723478_1737987561.jpg\"\n  }\n  msn_available: true\n  age_available: true\n  registered_owners: \"Cathay Pacific\"\n  is_country_of_reg_available: true\n}\nschedule_info {\n  flight_number: \"CX150\"\n  operated_by_id: 57\n  painted_as_id: 57\n  origin_id: 431\n  destination_id: 1366\n  scheduled_departure: 1747794900\n  scheduled_arrival: 1747827000\n  actual_departure: 1747796246\n  actual_arrival: 1747826241\n  arr_terminal: \"1\"\n  baggage_belt: \"2\"\n}\nflight_info {\n  flightid: 980256794\n  lat: -27.4022541\n  lon: 153.113098\n  track: 30\n  speed: 1\n  timestamp_ms: 1747794874975\n  on_ground: true\n  callsign: \"CPA150\"\n  ems_availability {\n  }\n  squawk_availability: true\n  vspeed_availability: true\n  airspace_availability: true\n  server_time_ms: 1747895055592\n}\nflight_trail_list {\n  snapshot_id: 1747794677\n  lat: -27.4009781\n  lon: 153.112823\n  heading: 306\n}\nflight_trail_list {\n  snapshot_id: 1747794731\n  lat: -27.4011135\n  lon: 153.113037\n  spd: 2\n  heading: 312\n}\n...\nflight_trail_list {\n  snapshot_id: 1747827307\n  lat: 22.3126259\n  lon: 113.925751\n  heading: 53\n}\n\"\"\"\n</code></pre>"},{"location":"usage/quickstart/","title":"Library Quickstart","text":"<p>Most code is developed using asynchronous programming, enabling parallel execution of multiple queries and achieve high performance.</p> <p>Here is a quick example in case you are not familiar with this code style:</p> Python Script<code>result</code><code>result.to_proto()</code><code>result.to_dict()</code><code>result.to_polars()</code> <pre><code>import asyncio\nfrom fr24 import FR24, BoundingBox\n\nbbox = BoundingBox(south=42, north=52, west=-8, east=10)\n\nasync def main() -&gt; None: # (1)!\n    async with FR24() as fr24:\n        result = await fr24.live_feed.fetch(bbox) # (2)!\n        print(result)\n        print(result.to_proto())\n        print(result.to_dict())\n        print(result.to_polars())\n\nif __name__ == \"__main__\":\n    asyncio.run(main())  # (3)!\n</code></pre> <ol> <li>Wrap your code in an <code>async</code> function</li> <li><code>fetch()</code> is an asynchronous method - we need to <code>await</code> it</li> <li><code>main()</code> returns a coroutine object which does not run immediately - we need to run it on the event loop. If you are using Jupyter, a bare <code>await main()</code> would do as well.</li> </ol> <pre><code>LiveFeedResult(\n    request=LiveFeedParams(\n        bounding_box=BoundingBox(south=42, north=52, west=-8, east=10),\n        stats=False,\n        limit=1500,\n        maxage=14400,\n        fields={'type', 'route', 'flight', 'reg'}\n    ),\n    response=&lt;Response [200 OK]&gt;,\n    timestamp=1753072997,\n)\n</code></pre> <pre><code>flights_list {\n  flightid: 995675586\n  lat: 42.0227051\n  lon: -2.89851785\n  track: 30\n  alt: 39975\n  speed: 502\n  icon: A330\n  timestamp: 1753072999\n  callsign: \"AFR754\"\n  extra_info {\n    flight: \"AF754\"\n    reg: \"F-HRBI\"\n    route {\n      from: \"BZV\"\n      to: \"CDG\"\n    }\n    type: \"B789\"\n  }\n  position_buffer {\n    recent_positions_list {\n      delta_lat: 201\n      delta_lon: 162\n      delta_ms: 1030\n    }\n    recent_positions_list {\n      delta_lat: 418\n      delta_lon: 340\n      delta_ms: 2060\n    }\n    ...\n  }\n  timestamp_ms: 1753072998785\n}\n...\nserver_time_ms: 1753073001486\n</code></pre> <pre><code>{\n    \"flights_list\": [\n        {\n            \"flightid\": 995675586,\n            \"lat\": 42.022705,\n            \"lon\": -2.8985178,\n            \"track\": 30,\n            \"alt\": 39975,\n            \"speed\": 502,\n            \"icon\": \"A330\",\n            \"timestamp\": 1753072999,\n            \"callsign\": \"AFR754\",\n            \"extra_info\": {\n                \"flight\": \"AF754\",\n                \"reg\": \"F-HRBI\",\n                \"route\": {\"from\": \"BZV\", \"to\": \"CDG\"},\n                \"type\": \"B789\",\n            },\n            \"position_buffer\": {\n                \"recent_positions_list\": [\n                    {\"delta_lat\": 201, \"delta_lon\": 162, \"delta_ms\": 1030},\n                    {\"delta_lat\": 418, \"delta_lon\": 340, \"delta_ms\": 2060},\n                    {\"delta_lat\": 599, \"delta_lon\": 480, \"delta_ms\": 3050},\n                    {\"delta_lat\": 837, \"delta_lon\": 674, \"delta_ms\": 4200},\n                    {\"delta_lat\": 1136, \"delta_lon\": 915, \"delta_ms\": 5730},\n                    {\"delta_lat\": 1335, \"delta_lon\": 1075, \"delta_ms\": 6660},\n                    {\"delta_lat\": 1634, \"delta_lon\": 1317, \"delta_ms\": 8200},\n                    {\"delta_lat\": 1835, \"delta_lon\": 1479, \"delta_ms\": 9190},\n                    {\"delta_lat\": 2032, \"delta_lon\": 1635, \"delta_ms\": 10220},\n                ]\n            },\n            \"timestamp_ms\": \"1753072998785\",\n        },\n        ...\n    ],\n    \"server_time_ms\": \"1753073001486\",\n}\n</code></pre> <pre><code>shape: (1_383, 18)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 timestamp    \u2506 flightid  \u2506 latitude  \u2506 longitude \u2506 \u2026 \u2506 eta \u2506 squawk \u2506 vertical_spe \u2506 position_bu \u2502\n\u2502 ---          \u2506 ---       \u2506 ---       \u2506 ---       \u2506   \u2506 --- \u2506 ---    \u2506 ed           \u2506 ffer        \u2502\n\u2502 datetime[ms, \u2506 u32       \u2506 f32       \u2506 f32       \u2506   \u2506 u32 \u2506 u16    \u2506 ---          \u2506 ---         \u2502\n\u2502 UTC]         \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506 i16          \u2506 list[struct \u2502\n\u2502              \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 [3]]        \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 2025-07-21   \u2506 995675586 \u2506 42.022705 \u2506 -2.898518 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{201,162,1 \u2502\n\u2502 04:43:18.785 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 030}, {418, \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 340,2060\u2026   \u2502\n\u2502 2025-07-21   \u2506 995726866 \u2506 42.01926  \u2506 -2.377071 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{200,89,10 \u2502\n\u2502 04:43:18.908 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 20}, {442,1 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 98,2180}\u2026   \u2502\n\u2502 2025-07-21   \u2506 995727804 \u2506 42.206726 \u2506 0.818107  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{283,87,13 \u2502\n\u2502 04:43:19.345 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 45}, {489,1 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 49,2340}\u2026   \u2502\n\u2502 2025-07-21   \u2506 995728695 \u2506 42.044865 \u2506 1.248098  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{188,-59,9 \u2502\n\u2502 04:43:18.930 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 66}, {391,- \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 127,2036\u2026   \u2502\n\u2502 2025-07-21   \u2506 995730200 \u2506 42.262867 \u2506 1.626488  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{181,-153, \u2502\n\u2502 04:43:19.262 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 1125}, {340 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 ,-285,20\u2026   \u2502\n\u2502 \u2026            \u2506 \u2026         \u2506 \u2026         \u2506 \u2026         \u2506 \u2026 \u2506 \u2026   \u2506 \u2026      \u2506 \u2026            \u2506 \u2026           \u2502\n\u2502 2025-07-21   \u2506 995719413 \u2506 51.366852 \u2506 8.458804  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{183,-393, \u2502\n\u2502 04:43:19.591 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 2161}, {274 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 ,-593,32\u2026   \u2502\n\u2502 2025-07-21   \u2506 995728483 \u2506 51.609512 \u2506 9.095863  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{91,-295,9 \u2502\n\u2502 04:43:18.941 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 70}, {184,- \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 608,1970\u2026   \u2502\n\u2502 2025-07-21   \u2506 995730833 \u2506 51.500927 \u2506 9.861908  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{-4,-274,1 \u2502\n\u2502 04:43:18.857 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 090}, {-9,- \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 419,1680\u2026   \u2502\n\u2502 2025-07-21   \u2506 995729878 \u2506 51.558651 \u2506 9.883041  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{-59,-264, \u2502\n\u2502 04:43:19.168 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 960}, {-146 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 ,-643,23\u2026   \u2502\n\u2502 2025-07-21   \u2506 995730144 \u2506 50.797848 \u2506 9.983597  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{173,459,1 \u2502\n\u2502 04:43:19.392 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 455}, {297, \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 793,2496\u2026   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>The following sections will break down what each line does under the hood.</p>"},{"location":"usage/quickstart/#initialisation","title":"Initialisation","text":"<code>example.py</code> <pre><code>from fr24 import FR24\n\nasync def my_feed() -&gt; None:\n    async with FR24() as fr24:\n        ...\n</code></pre> <p>When <code>FR24()</code> is first initialised, it creates an unauthenticated HTTPX client under the hood. It also manages authentication (subscription key and tokens).</p> <p>How to authenticate?</p> <pre><code>from fr24 import FR24\n\nasync def main() -&gt; None:\n    async with FR24() as fr24:\n        # anonymous now\n        await fr24.login() # reads from environment or configuration file, or,\n        await fr24.login(creds={\"username\": \"...\", \"password\": \"...\"}) # or,\n        await fr24.login(creds={\"subscriptionKey\": \"...\", \"token\": \"...\"})\n</code></pre> <p>See authentication for more details.</p> <p>How to pass in my own HTTPX client?</p> <p>To share clients across code, pass it into the fr24.FR24 constructor.</p> <pre><code>import httpx\n\nfrom fr24 import FR24\n\nclient = httpx.AsyncClient(http1=False, http2=True, transport=httpx.AsyncHTTPTransport(retries=5))\n\nasync def main() -&gt; None:\n    async with FR24(client) as fr24:\n        ...\n</code></pre> <p>The <code>async with</code> statement ensures that it is properly authenticated by calling the login endpoint (if necessary).</p>"},{"location":"usage/quickstart/#data-fetching","title":"Data Fetching","text":"<p>Next, <code>fr24</code> contains multiple services, each of which implements the <code>fetch</code> method:</p> <code>example.py</code><code>result</code><code>result.response.content</code> <pre><code>from fr24 import FR24, BBOX_FRANCE_UIR\n\nasync def my_feed() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.live_feed.fetch(BBOX_FRANCE_UIR)\n        print(result.response.content)\n</code></pre> <pre><code>LiveFeedResult(\n    request=LiveFeedParams(\n        bounding_box=BoundingBox(south=42, north=52, west=-8, east=10),\n        stats=False,\n        limit=1500,\n        maxage=14400,\n        fields={'type', 'route', 'flight', 'reg'}\n    ),\n    response=&lt;Response [200 OK]&gt;,\n    timestamp=1753072997,\n)\n</code></pre> <pre><code>b'...truncated\n\\x84\\x02(\\xa2\\x160m8\\x03@\\x00H\\xfc\\xc1\\xac\\xbe\\x06P\\x00Z\\x05DEGLC`\\x00j\\x1c\\n\\x00\\x12\\x06D-EGLC\\x1a\\n\\n\\x03KSF\\x12\n\\x03EIB\"\\x04C172r6\\n\\x19\\x08\\xd3\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x01\\x10\\xa5\\xfc\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x01\\x18\n\\x8f%\\n\\x19\\x08\\xc4\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x01\\x10\\xbd\\xfb\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x01\\x18\\xb42x\\xf5\n\\xb0\\xe3\\x8b\\xd72\\n\\x96\\x01\\x08\\xd4\\xa6\\x8d\\xcb\\x03\\x15\\xb0$OB\\x1dp\\x0e\\x1fA \n\\x12(\\xbar0\\xf3\\x028\\x05@\\x00H\\xfe\\xc1\\xac\\xbe\\x06P\\x00Z\\x06ECA4RT`\\x00j\\x1c\\n\\x00\\x12\\x06D-CFRT\\x1a\\n\\n\\x03FMM\\x12\n\\x03HAJ\"\\x04C25CrA\\n\\x08\\x08\\xa2\\x01\\x10S\\x18\\x86\\x08\\n\\t\\x08\\x8b\\x03\\x10\\xcd\\x01\\x18\\xa0\\x10\\n\\t\\x08\\xd1\\x05\\x10\n\\xf5\\x02\\x18\\x8c!\\n\\t\\x08\\xf9\\x06\\x10\\xd1\\x03\\x18\\xac*\\n\\t\\x08\\xb7\\n\\x10\\xbc\\x05\\x18\\x8c=\\n\\t\\x08\\xed\\x0b\\x10\\xa1\\x06\n\\x18\\x9fEx\\xf0\\xc4\\xe3\\x8b\\xd72\\nN\\x08\\x80\\xd3\\x8c\\xcb\\x03\\x15\\x88\\xa5OB\\x1dO\\xd6\\x19A \n\\xf2\\x01(\\x96\\x1a0\\n8\\x03@\\x00H\\xfe\\xc1\\xac\\xbe\\x06P\\x00Z\\x05DEGZZ`\\x01j\\x16\\n\\x00\\x12\\x06D-EGZZ\\x1a\\x04\\n\\x00\\x12\n\\x00\"\\x04DA40r\\x00x\\xc4\\xc1\\xe3\\x8b\\xd72\\n\\x9c\\x01\\x08\\x8f\\x94\\x8d\\xcb\\x03\\x15\\xfb\\xb2OB\\x1d\\xeeL\\x1fA \n\\n(\\xa1Y0\\xd6\\x028\\x07@\\x00H\\xff\\xc1\\xac\\xbe\\x06P\\x00Z\\x07AFR87MJ`\\x00j\"\\n\\x06AF1838\\x12\\x06F-HBXE\\x1a\\n\\n\\x03CDG\n\\x12\\x03HAJ\"\\x04E170r@\\n\\x08\\x08\\xdc\\x01\\x10&lt;\\x18\\xa2\\x08\\n\\x08\\x08\\xf9\\x02\\x10f\\x18\\xb7\\x12\\n\\t\\x08\\xed\\x05\\x10\\xd3\n\\x01\\x18\\x82&amp;\\n\\t\\x08\\x9e\\x07\\x10\\x8a\\x02\\x18\\xbd.\\n\\t\\x08\\xb9\\x08\\x10\\xb8\\x02\\x18\\xa76\\n\\t\\x08\\xb5\\x0b\\x10\\xa3\\x03\n\\x18\\xa1Gx\\xb4\\xcb\\xe3\\x8b\\xd72 \\x92\\xe1\\xe3\\x8b\\xd72\\x80\\x00\\x00\\x00\\x0fgrpc-status:0\\r\\n'\n</code></pre> <p>It returns a wrapped context and response, which contains:</p> <ul> <li>the context related to the request under <code>result.request</code>;</li> <li>the raw HTTPX response under <code>result.response</code>:<ul> <li>the raw bytes under <code>result.response.content</code></li> <li>the HTTP status under <code>result.response.status_code</code></li> <li>the response headers under <code>result.response.headers</code></li> </ul> </li> </ul> <p>As you can see, the raw bytes seem to be jarbled, somewhat resembling records of aircraft. In fact, the live feed API uses gRPC over HTTP2 and protocol buffers, a compact binary serialisation protocol.</p> <p>A further decoding step is needed.</p>"},{"location":"usage/quickstart/#conversion-to-other-formats","title":"Conversion to other formats","text":"<p>The <code>result</code> implements:</p> <ul> <li>the <code>to_proto</code> method, parsing it into a protobuf message</li> <li>the <code>to_dict</code> method, parsing it into a Python dictionary;</li> <li>the <code>to_polars</code> method, parsing and transforming it into a polars DataFrame.</li> </ul> <code>example.py</code><code>result.to_proto()</code><code>result.to_dict()</code><code>result.to_polars()</code> <pre><code>import asyncio\nfrom fr24 import FR24, BBOX_FRANCE_UIR\n\nasync def main() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.live_feed.fetch(BBOX_FRANCE_UIR)\n        print(result.to_proto())\n        print(result.to_dict())\n        print(result.to_polars())\n</code></pre> <pre><code>flights_list {\n  flightid: 995675586\n  lat: 42.0227051\n  lon: -2.89851785\n  track: 30\n  alt: 39975\n  speed: 502\n  icon: A330\n  timestamp: 1753072999\n  callsign: \"AFR754\"\n  extra_info {\n    flight: \"AF754\"\n    reg: \"F-HRBI\"\n    route {\n      from: \"BZV\"\n      to: \"CDG\"\n    }\n    type: \"B789\"\n  }\n  position_buffer {\n    recent_positions_list {\n      delta_lat: 201\n      delta_lon: 162\n      delta_ms: 1030\n    }\n    recent_positions_list {\n      delta_lat: 418\n      delta_lon: 340\n      delta_ms: 2060\n    }\n    ...\n  }\n  timestamp_ms: 1753072998785\n}\n...\nserver_time_ms: 1753073001486\n</code></pre> <pre><code>{\n    \"flights_list\": [\n        {\n            \"flightid\": 995675586,\n            \"lat\": 42.022705,\n            \"lon\": -2.8985178,\n            \"track\": 30,\n            \"alt\": 39975,\n            \"speed\": 502,\n            \"icon\": \"A330\",\n            \"timestamp\": 1753072999,\n            \"callsign\": \"AFR754\",\n            \"extra_info\": {\n                \"flight\": \"AF754\",\n                \"reg\": \"F-HRBI\",\n                \"route\": {\"from\": \"BZV\", \"to\": \"CDG\"},\n                \"type\": \"B789\",\n            },\n            \"position_buffer\": {\n                \"recent_positions_list\": [\n                    {\"delta_lat\": 201, \"delta_lon\": 162, \"delta_ms\": 1030},\n                    {\"delta_lat\": 418, \"delta_lon\": 340, \"delta_ms\": 2060},\n                    {\"delta_lat\": 599, \"delta_lon\": 480, \"delta_ms\": 3050},\n                    {\"delta_lat\": 837, \"delta_lon\": 674, \"delta_ms\": 4200},\n                    {\"delta_lat\": 1136, \"delta_lon\": 915, \"delta_ms\": 5730},\n                    {\"delta_lat\": 1335, \"delta_lon\": 1075, \"delta_ms\": 6660},\n                    {\"delta_lat\": 1634, \"delta_lon\": 1317, \"delta_ms\": 8200},\n                    {\"delta_lat\": 1835, \"delta_lon\": 1479, \"delta_ms\": 9190},\n                    {\"delta_lat\": 2032, \"delta_lon\": 1635, \"delta_ms\": 10220},\n                ]\n            },\n            \"timestamp_ms\": \"1753072998785\",\n        },\n        ...\n    ],\n    \"server_time_ms\": \"1753073001486\",\n}\n</code></pre> <pre><code>shape: (1_383, 18)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 timestamp    \u2506 flightid  \u2506 latitude  \u2506 longitude \u2506 \u2026 \u2506 eta \u2506 squawk \u2506 vertical_spe \u2506 position_bu \u2502\n\u2502 ---          \u2506 ---       \u2506 ---       \u2506 ---       \u2506   \u2506 --- \u2506 ---    \u2506 ed           \u2506 ffer        \u2502\n\u2502 datetime[ms, \u2506 u32       \u2506 f32       \u2506 f32       \u2506   \u2506 u32 \u2506 u16    \u2506 ---          \u2506 ---         \u2502\n\u2502 UTC]         \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506 i16          \u2506 list[struct \u2502\n\u2502              \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 [3]]        \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 2025-07-21   \u2506 995675586 \u2506 42.022705 \u2506 -2.898518 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{201,162,1 \u2502\n\u2502 04:43:18.785 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 030}, {418, \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 340,2060\u2026   \u2502\n\u2502 2025-07-21   \u2506 995726866 \u2506 42.01926  \u2506 -2.377071 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{200,89,10 \u2502\n\u2502 04:43:18.908 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 20}, {442,1 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 98,2180}\u2026   \u2502\n\u2502 2025-07-21   \u2506 995727804 \u2506 42.206726 \u2506 0.818107  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{283,87,13 \u2502\n\u2502 04:43:19.345 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 45}, {489,1 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 49,2340}\u2026   \u2502\n\u2502 2025-07-21   \u2506 995728695 \u2506 42.044865 \u2506 1.248098  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{188,-59,9 \u2502\n\u2502 04:43:18.930 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 66}, {391,- \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 127,2036\u2026   \u2502\n\u2502 2025-07-21   \u2506 995730200 \u2506 42.262867 \u2506 1.626488  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{181,-153, \u2502\n\u2502 04:43:19.262 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 1125}, {340 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 ,-285,20\u2026   \u2502\n\u2502 \u2026            \u2506 \u2026         \u2506 \u2026         \u2506 \u2026         \u2506 \u2026 \u2506 \u2026   \u2506 \u2026      \u2506 \u2026            \u2506 \u2026           \u2502\n\u2502 2025-07-21   \u2506 995719413 \u2506 51.366852 \u2506 8.458804  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{183,-393, \u2502\n\u2502 04:43:19.591 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 2161}, {274 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 ,-593,32\u2026   \u2502\n\u2502 2025-07-21   \u2506 995728483 \u2506 51.609512 \u2506 9.095863  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{91,-295,9 \u2502\n\u2502 04:43:18.941 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 70}, {184,- \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 608,1970\u2026   \u2502\n\u2502 2025-07-21   \u2506 995730833 \u2506 51.500927 \u2506 9.861908  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{-4,-274,1 \u2502\n\u2502 04:43:18.857 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 090}, {-9,- \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 419,1680\u2026   \u2502\n\u2502 2025-07-21   \u2506 995729878 \u2506 51.558651 \u2506 9.883041  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{-59,-264, \u2502\n\u2502 04:43:19.168 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 960}, {-146 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 ,-643,23\u2026   \u2502\n\u2502 2025-07-21   \u2506 995730144 \u2506 50.797848 \u2506 9.983597  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{173,459,1 \u2502\n\u2502 04:43:19.392 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 455}, {297, \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 793,2496\u2026   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Polars is a dataframe library that implements the Arrow columnar data storage format. Under the hood, <code>to_polars</code> utilises a strongly typed schema to reduce memory.</p> <p>If you wish, you can convert the <code>polars</code> DataFrame into <code>pandas</code>.</p> <p>Warning</p> <p><code>to_polars</code> tries to convert a list of records in the <code>result</code> into a 2D table. Extra metadata that does not fit in a table (e.g. airline information in the flight list service) will be discarded.</p>"},{"location":"usage/quickstart/#writing-to-a-file","title":"Writing to a file","text":"<p>You can write the data in JSON format:</p> <code>example.py</code> <pre><code>import asyncio\nimport json\nfrom fr24 import FR24, BBOX_FRANCE_UIR\n\nasync def main() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.live_feed.fetch(BBOX_FRANCE_UIR)\n        with open(\"path/to/some/file.json\", \"w\") as f:\n            json.dump(result.to_dict(), f, indent=4)\n</code></pre> <p>Alternatively, you can serialize the tabular form of the data in the Parquet data format.</p> <p><code>result</code> implements the <code>write_table</code> method, which can be used to write to a file on the disk or a buffer, in the <code>parquet</code> or <code>csv</code> format:</p> <code>example.py</code> <pre><code>import asyncio\nfrom io import BytesIO\nfrom fr24 import FR24, BBOX_FRANCE_UIR\n\nasync def main() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.live_feed.fetch(BBOX_FRANCE_UIR)\n        result.write_table(\"path/to/some/file.parquet\") # (1)!\n        result.write_table(\"path/to/some/file.csv\", format=\"csv\") # (2)!\n\n        buffer = BytesIO()\n        result.write_table(buffer, format=\"parquet\")\n        buffer.seek(0)\n</code></pre> <ol> <li>If the <code>format</code> is not specified, it defaults to <code>parquet</code>.</li> <li>You must specify <code>format=\"csv\"</code> - <code>write_table</code> does not infer from the file extension of the given path. </li> </ol>"},{"location":"usage/quickstart/#caching","title":"Caching","text":""},{"location":"usage/quickstart/#writing","title":"Writing","text":"<p>You can also write the table into a cache:</p> <code>example.py</code> <pre><code>import asyncio\nfrom fr24 import FR24, FR24Cache, BBOX_FRANCE_UIR\n\ncache = FR24Cache(\"path/to/some/directory/\")\n# alternatively, use the default cache directory:\ncache = FR24Cache.default() # (1)!\n\nasync def main() -&gt; None:\n    async with FR24() as fr24:\n        result = await fr24.live_feed.fetch(BBOX_FRANCE_UIR)\n        result.write_table(cache)\n</code></pre> <ol> <li> <p>More information about the location of the default cache can be found here. You can also check the location by running <code>fr24 dirs</code> in the shell.</p> </li> <li> <p>In this case, the file is written to <code>{cache_dir}/feed/{timestamp}.parquet</code>.</p> </li> </ol> <p>Files will be organised in the cache, with the structure shown here:</p> <p>It should resemble the following on Linux:</p> <pre><code>$ tree $HOME/.cache/fr24/feed\n/home/user/.cache/fr24\n\u251c\u2500\u2500 feed\n\u2502   \u2514\u2500\u2500 1711911907.parquet\n\u251c\u2500\u2500 flight_list\n\u2502   \u251c\u2500\u2500 flight\n\u2502   \u2502   \u2514\u2500\u2500 CX8747.parquet\n\u2502   \u2514\u2500\u2500 reg\n\u2502       \u2514\u2500\u2500 B-HUJ.parquet\n\u2514\u2500\u2500 playback\n    \u2514\u2500\u2500 2d81a27.parquet\n</code></pre> <p>These directories are created automatically when <code>FR24Cache</code> is initialised.</p>"},{"location":"usage/quickstart/#reading","title":"Reading","text":"<p><code>FR24Cache</code> resembles the <code>FR24</code> service class. You list all cached files under a collection with the <code>glob</code> method and lazily load the file with the <code>scan_table</code> method:</p> <code>example.py</code>Output <pre><code>from fr24 import FR24Cache\n\ncache = FR24Cache.default()\n\nfor fp in cache.live_feed.glob(\"*\"):\n    print(fp)\n    lf = fp.scan_table()\n    print(lf.collect())\n\n# alternatively, scan one file:\nlf = cache.live_feed.scan_table(timestamp=1733036597)\n</code></pre> <pre><code>/home/user/.cache/fr24/feed/1733036597.parquet\nshape: (1_383, 18)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 timestamp    \u2506 flightid  \u2506 latitude  \u2506 longitude \u2506 \u2026 \u2506 eta \u2506 squawk \u2506 vertical_spe \u2506 position_bu \u2502\n\u2502 ---          \u2506 ---       \u2506 ---       \u2506 ---       \u2506   \u2506 --- \u2506 ---    \u2506 ed           \u2506 ffer        \u2502\n\u2502 datetime[ms, \u2506 u32       \u2506 f32       \u2506 f32       \u2506   \u2506 u32 \u2506 u16    \u2506 ---          \u2506 ---         \u2502\n\u2502 UTC]         \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506 i16          \u2506 list[struct \u2502\n\u2502              \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 [3]]        \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502 2025-07-21   \u2506 995675586 \u2506 42.022705 \u2506 -2.898518 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{201,162,1 \u2502\n\u2502 04:43:18.785 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 030}, {418, \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 340,2060\u2026   \u2502\n\u2502 2025-07-21   \u2506 995726866 \u2506 42.01926  \u2506 -2.377071 \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{200,89,10 \u2502\n\u2502 04:43:18.908 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 20}, {442,1 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 98,2180}\u2026   \u2502\n\u2502 2025-07-21   \u2506 995727804 \u2506 42.206726 \u2506 0.818107  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{283,87,13 \u2502\n\u2502 04:43:19.345 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 45}, {489,1 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 49,2340}\u2026   \u2502\n\u2502 2025-07-21   \u2506 995728695 \u2506 42.044865 \u2506 1.248098  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{188,-59,9 \u2502\n\u2502 04:43:18.930 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 66}, {391,- \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 127,2036\u2026   \u2502\n\u2502 2025-07-21   \u2506 995730200 \u2506 42.262867 \u2506 1.626488  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{181,-153, \u2502\n\u2502 04:43:19.262 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 1125}, {340 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 ,-285,20\u2026   \u2502\n\u2502 \u2026            \u2506 \u2026         \u2506 \u2026         \u2506 \u2026         \u2506 \u2026 \u2506 \u2026   \u2506 \u2026      \u2506 \u2026            \u2506 \u2026           \u2502\n\u2502 2025-07-21   \u2506 995719413 \u2506 51.366852 \u2506 8.458804  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{183,-393, \u2502\n\u2502 04:43:19.591 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 2161}, {274 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 ,-593,32\u2026   \u2502\n\u2502 2025-07-21   \u2506 995728483 \u2506 51.609512 \u2506 9.095863  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{91,-295,9 \u2502\n\u2502 04:43:18.941 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 70}, {184,- \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 608,1970\u2026   \u2502\n\u2502 2025-07-21   \u2506 995730833 \u2506 51.500927 \u2506 9.861908  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{-4,-274,1 \u2502\n\u2502 04:43:18.857 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 090}, {-9,- \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 419,1680\u2026   \u2502\n\u2502 2025-07-21   \u2506 995729878 \u2506 51.558651 \u2506 9.883041  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{-59,-264, \u2502\n\u2502 04:43:19.168 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 960}, {-146 \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 ,-643,23\u2026   \u2502\n\u2502 2025-07-21   \u2506 995730144 \u2506 50.797848 \u2506 9.983597  \u2506 \u2026 \u2506 0   \u2506 0      \u2506 0            \u2506 [{173,459,1 \u2502\n\u2502 04:43:19.392 \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 455}, {297, \u2502\n\u2502 UTC          \u2506           \u2506           \u2506           \u2506   \u2506     \u2506        \u2506              \u2506 793,2496\u2026   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"usage/quickstart/#notes","title":"Notes","text":"<p>See the examples gallery to learn more.</p> <p>Intersphinx for this project could be found here.</p>"}]}